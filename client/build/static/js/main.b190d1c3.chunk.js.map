{"version":3,"sources":["utils/queries.js","components/AddEventForm/index.js","utils/dateFormat.js","utils/dateFunctions.js","utils/auth.js","components/DayBox/index.js","components/Week/index.js","components/MonthFormat/index.js","pages/MyMonth.js","pages/MyDay.js","components/GetStarted/index.js","components/SignupForm/index.js","components/LoginForm/index.js","components/NavBar/index.js","components/Footer/index.js","App.js","index.js","utils/mutations.js"],"names":["QUERY_ME","gql","_templateObject","Object","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","AddEventForm","_ref","eventDate","_useQuery","useQuery","data","loading","console","log","_useState","useState","eventUser","eventTitle","eventDescription","_useState2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","eventFormData","setEventFormData","me","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_4__","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","username","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","_useMutation","useMutation","ADD_EVENT","_useMutation2","addEvent","error","useEffect","handleInputChange","event","_event$target","target","name","value","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","handleFormSubmit","_ref2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","_yield$addEvent","_data","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","variables","sent","t0","stop","_x","apply","this","arguments","myDate","Date","parseInt","monthNum","getMonth","dateNum","getDate","yearNum","getFullYear","getTime","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","noValidate","onSubmit","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","dismissible","onClose","show","variant","Text","Group","Label","htmlFor","Control","type","placeholder","onChange","e","setImmediate","required","Feedback","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","getNumDays","year","includes","div4","div100","div400","getDayName","dayNum","getMonthName","getMonthEnd","timestamp","myTime","month","numDays","getWeekStart","weekDay","getDay","getWeekEnd","getDayStart","getDayEnd","getNextMonth","setFullYear","setMonth","getPrevMonth","getNextWeek","getNextDay","auth","decode","getToken","token","isTokenExpired","exp","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","DayBox","dayDate","events","_ref$showDescPreview","showDescPreview","react_default","Col","Container","className","map","Row","length","substring","Week","days","_ref$monthView","monthView","dist","to","concat","day","components_DayBox","MonthFormat","firstWeekDay","monthDays","monthWeeks","i","push","j","dayEvents","dayTime","dayStart","dayEnd","x","eventTime","daySq","currLength","fillSpace","k","numWeeks","firstDay","monthEndTime","endFirstWeek","firstWeek","w","q","weekDays","weekStart","weekEnd","f","lastWeekDays","startLastWeek","week","components_Week","MyMonth","currTime","useParams","setHours","setMinutes","setSeconds","setMilliseconds","userData","myEvents","getFirstWeekDay","monthName","monthStart","getMonthStart","monthEnd","monthEvents","currEventDate","currEventDateMS","fluid","firstName","components_MonthFormat","MyDay","slicedToArray","showModal","setShowModal","dayName","todayEvents","Button","onClick","Modal","size","onHide","aria-labelledby","Header","closeButton","Title","id","GetStarted","timeParam","react_router_dist","SignupForm","lastName","email","password","userFormData","setUserFormData","ADD_USER","addUser","objectSpread","defineProperty","asyncToGenerator","_yield$addUser","Auth","login","Form","Alert","onCLose","disabled","LoginForm","LOGIN_USER","LoginForm_regeneratorRuntime","_yield$login","NavBar","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","loggedIn","logout","Tab","defaultActiveKey","Item","eventKey","Body","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","Footer","useLocation","navigate","useNavigate","pathname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","components_NavBar","path","element","pages_MyDay","components_GetStarted","pages_MyMonth","MyWeek_default","components_Footer","ReactDOM","render","StrictMode","src_App","document","getElementById","_templateObject2","_templateObject3","_templateObject4"],"mappings":"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","file":"static/js/main.b190d1c3.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_ME = gql`\r\n    {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// export const QUERY_EVENTS = gql`\r\n//     query getMyEvents($timeStart: Date!, $timeEnd: Date!) {\r\n//         events {\r\n//             _id\r\n//             eventUser\r\n//             eventDate\r\n//             eventTitle\r\n//             eventDescription\r\n//         }\r\n//     }\r\n// `;","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { ADD_EVENT } from '../../utils/mutations';\nimport { QUERY_ME } from '../../utils/queries';\n\nconst AddEventForm = ({\n  eventDate,\n}) => {\n  const { loading, data } = useQuery(QUERY_ME);\n  const userData = {};\n\n  console.log('----- Event Date: ----- AddEventForm');\n  console.log(eventDate);\n\n  const [eventFormData, setEventFormData] = useState({ eventUser: '', eventDate: eventDate, eventTitle: '', eventDescription: ''});\n\n  if (data) {\n    console.log('AddEventForm ----- line 20');\n    userData = data.me;\n    setEventFormData({ ...eventFormData, eventUser: userData.username });\n  } \n  // if (eventDate) {\n  //   console.log('AddEventForm ----- line 25');\n  //   setEventFormData({ ...eventFormData, eventDate: eventDate });\n  // }\n\n  const [validated] = useState(false);\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addEvent, { error }] = useMutation(ADD_EVENT);\n\n  useEffect(() => {\n    if (error) {\n      console.log('AddEventForm ----- line 37');\n      setShowAlert(true);\n    } else {\n      console.log('AddEventForm ----- line 40');\n      setShowAlert(false);\n    }\n  }, [error])\n\n  const handleInputChange = (event) => {\n    console.log('handleInputChange called ----- AddEventForm');\n    const { name, value } = event.target;\n    setEventFormData({ ...eventFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log('handleFormSubmit called ----- AddEventForm');\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      console.log('checkValidity = false ----- AddEventForm');\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const {data} = await addEvent({\n        variables: { ...eventFormData },\n      });\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setEventFormData({\n      eventDate: '',\n      eventTitle: '',\n      eventDescription: '',\n    });\n  };\n\n  let myDate = new Date (parseInt(eventDate));\n  let monthNum = myDate.getMonth() + 1;\n  let dateNum = myDate.getDate();\n  let yearNum = myDate.getFullYear();\n  let myTime = myDate.getTime();\n\n  console.log('AddEventForm ----- line 84');\n\n\n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setEventFormData({ ... eventFormData, [name]: value });\n  // };\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const form = event.currentTarget;\n\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation(); \n  //   }\n\n  //   try {\n  //     const {data} = await addEvent({\n  //       variables: { \n  //         eventUser: eventFormData.eventUser,\n  //         eventDate: myTime,\n  //         eventTitle: eventFormData.eventTitle,\n  //         eventDescription: eventFormData.eventDescription,\n  //        },\n  //     });\n  //     console.log(data);\n  //   } catch (err) {\n  //     console.error(err);\n  //     setShowAlert(true);\n  //   }\n\n  //   if (eventDate) {\n  //     setEventFormData({\n  //       eventUser: userData.username,\n  //       eventDate: myDate,\n  //       eventTitle: '',\n  //       eventDescription: '',\n  //     });\n  //   } else {\n  //     setEventFormData({\n  //       eventUser: userData.username,\n  //       eventDate: '',\n  //       eventTitle: '',\n  //       eventDescription: '',\n  //     });\n  //   }\n  // };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong adding your event\n        </Alert>\n\n        {eventDate ? (\n          <Form.Text>\n            <h3>Event Date</h3>\n            <p>{monthNum}/{dateNum}/{yearNum}</p>\n          </Form.Text>\n        ) : (\n          <Form.Group>\n            <Form.Label htmlFor='eventDate'>Event Date</Form.Label>\n            <Form.Control\n              type='date'\n              placeholder='date'\n              name='eventDate'\n              onChange={(e) => setImmediate(e.target.value)}\n              value={eventFormData.eventDate}\n            />\n          </Form.Group>\n        )}\n\n        <Form.Group>\n          <Form.Label htmlFor='eventTitle'>Title</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Title'\n            name='eventTitle'\n            value={eventFormData.eventTitle}\n            onChange={handleInputChange}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Title is required</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='eventDescription'>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Description'\n            name='eventDescription'\n            onChange={handleInputChange}\n            value={eventFormData.eventDescription}\n          />\n        </Form.Group>\n        <Button\n          type='submit'\n          variant='success'>\n            Add Event\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default AddEventForm;","// returns the number of days in the month, if the month is february, checks to see if it is a leap year\r\nexport const getNumDays = (monthNum, year) => {\r\n    // if the month number is 1, 3, 5, 7, 8, 10, 12 (jan, mar, may, jul, aug, oct, dec), the month has 31 days\r\n    if ([1,3,5,7,8,10,12].includes(monthNum)) {\r\n        return 31;\r\n    }\r\n    // if the month number is 4, 6, 9, 11 (apr, june, sept, nov), the month has 30 days\r\n    if ([4,6,9,11].includes(monthNum)) {\r\n        return 30;\r\n    }\r\n    // if the month number is 2 (february)\r\n    if (monthNum === 2) {\r\n        // check if year is a leap year\r\n        /*\r\n            rules:\r\n                years divisible by 400 ARE leap years\r\n                years divisible by 100 but not by 400 are NOT leap years\r\n                years divisible by 4 but not by 100 ARE leap years\r\n                years not divisible by 4 are NOT leap years \r\n\r\n                if year divisible by 4 ((year % 4) == 0) \r\n                    if year divisible by 100 ((year % 100) == 0)\r\n                        if year divisible by 400 ((year % 400) == 0)\r\n                            leap year\r\n                        else\r\n                            not leap year\r\n                    else\r\n                        leap year\r\n                else\r\n                    not leap year \r\n        */\r\n        // boolean variable to indicate whether year is evenly divisible by 4\r\n        var div4 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 100\r\n        var div100 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 400\r\n        var div400 = false;\r\n            \r\n        // sets div4 to true if the year is evenly divisible by 4\r\n        if ((year % 4) === 0) {\r\n            div4 = true;\r\n        }\r\n        // sets div100 to true if the year is evenly divisible by 100\r\n        if ((year % 100) === 0) {\r\n            div100 = true;\r\n        }\r\n        // sets div400 to true is the year is evenly divisible by 400\r\n        if ((year % 400) === 0) {\r\n            div400 = true;\r\n        }\r\n\r\n        if ((div4 && !div100) || (div4 && div100 && div400)) {\r\n            return 29;\r\n        } else {\r\n            return 28;\r\n        }\r\n    }\r\n};\r\n\r\n// given a month and year, determines the day of the week the firs tof the month falls on and returns the integer\r\nexport const getFirstWeekDay = (monthNum, year) => {\r\n    console.log(\"----- getFirstWeekDay ----- dateFormat:65\");\r\n    console.log(\"monthNum:\");\r\n    console.log(monthNum);\r\n    console.log(\"year:\");\r\n    console.log(year);\r\n    const firstDay = new Date(year, monthNum, 1);\r\n    // return first day of the month (numbers 0-6)\r\n    return firstDay.getDay();\r\n};\r\n\r\n// given the number of the day of the week, determines and returns the name of the day\r\nexport const getDayName = (dayNum) => {\r\n    console.log(\"----- dayNum ----- (client/src/utils/dateFormat:71) -----\");\r\n    console.log(dayNum);\r\n    switch (dayNum) {\r\n        case 0:\r\n            return \"Sunday\";\r\n        case 1:\r\n            return \"Monday\";\r\n        case 2:\r\n            return \"Tuesday\";\r\n        case 3:\r\n            return \"Wednesday\";\r\n        case 4:\r\n            return \"Thursday\";\r\n        case 5:\r\n            return \"Friday\";\r\n        case 6:\r\n            return \"Saturday\";\r\n        default:\r\n            return \"WeekDayErr\";\r\n    }\r\n};\r\n\r\n// given the number of the month, determines and returns the name of the month\r\nexport const getMonthName = (monthNum) => {\r\n    //const monthNum = monthNum;\r\n    switch (monthNum) {\r\n        case 0:\r\n            return \"January\";\r\n        case 1:\r\n            return \"February\";\r\n        case 2:\r\n            return \"March\";\r\n        case 3:\r\n            return \"April\";\r\n        case 4:\r\n            return \"May\";\r\n        case 5:\r\n            return \"June\";\r\n        case 6:\r\n            return \"July\";\r\n        case 7:\r\n            return \"August\";\r\n        case 8:\r\n            return \"September\";\r\n        case 9:\r\n            return \"October\";\r\n        case 10:\r\n            return \"November\";\r\n        case 11:\r\n            return \"December\";\r\n        default:\r\n            return \"MonthNameErr\";\r\n    }\r\n};\r\n\r\n","import { getNumDays } from './dateFormat';\r\n\r\n// number of milliseconds in one day\r\nconst MS_PER_DAY = 86400000;\r\n\r\n// given a date (in milliseconds), determines the start of the month and returns the date in milliseconds\r\nexport const getMonthStart = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const monthStart = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const monthStartMS = monthStart.getTime();\r\n\r\n    return monthStartMS;\r\n};\r\n\r\n// given the date (in milliseconds), determines the last millisecond of the month and returns\r\nexport const getMonthEnd = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const numDays = getNumDays(month, year);\r\n\r\n    const monthEnd = new Date(year, month, numDays, 23, 59, 59, 999);\r\n\r\n    return monthEnd;\r\n};\r\n\r\n// given the date (in milliseconds), determines the first millisecond of the week and returns\r\nexport const getWeekStart = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const sundayDate = dateNum - weekDay;\r\n\r\n    const weekStart = new Date(year, month, sundayDate, 0, 0, 0, 0);\r\n\r\n    return weekStart;\r\n};\r\n\r\n// given the date (in milliseconds), determines the last millisecond of the week and returns\r\nexport const getWeekEnd = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const satOffset = 6 - weekDay;\r\n    const saturdayDate = dateNum + satOffset;\r\n\r\n    const weekEnd = new Date(year, month, saturdayDate, 23, 59, 59, 999);\r\n\r\n    return weekEnd;\r\n};\r\n\r\n// given the date (in milliseconds), determines and returns the first millisecond of the day\r\nexport const getDayStart = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayStart = new Date(year, month, dateNum, 0, 0, 0, 0);\r\n\r\n    return dayStart;\r\n};\r\n\r\n// given the date (in milliseconds), determines and returns the last millisecond of the day\r\nexport const getDayEnd = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayEnd = new Date(year, month, dateNum, 23, 59, 59, 999);\r\n\r\n    return dayEnd;\r\n};\r\n\r\n// given the date (in milliseconds), determines the current date, sets date to next month, returns new date in milliseconds\r\nexport const getNextMonth = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 11) {\r\n        myTime.setFullYear(year++);\r\n        myTime.setMonth(0);\r\n    } else {\r\n        myTime.setMonth(month++);\r\n    }\r\n\r\n    const myTimeMS = myTime.getTime();\r\n\r\n    return myTimeMS;\r\n};\r\n\r\n// given the date (in milliseconds), determines the current date, sets date to previous month, returns new date in milliseconds\r\nexport const getPrevMonth = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 0) {\r\n        myTime.setFullYear(year--);\r\n        myTime.setMonth(11);\r\n    } else {\r\n        myTime.setMonth(month--);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\n// given the date (in milliseconds), adds 7 days (in milliseconds) to change the date to the following week, returns new date in milliseconds\r\nexport const getNextWeek = (timestamp) => {\r\n\r\n    const nextWeekMS = parseInt(timestamp) + (7 * MS_PER_DAY);\r\n    \r\n    return nextWeekMS;\r\n};\r\n\r\n// given the date (in milliseconds), subtracts 7 days (in milliseconds) to change the date ot the previous week, returns new date in milliseconds\r\nexport const getPrevWeek = (timestamp) => {\r\n    \r\n    const prevWeekMS = parseInt(timestamp) - (7 * MS_PER_DAY);\r\n\r\n    return prevWeekMS;\r\n};\r\n\r\n// given the date (in milliseconds), adds 24 hours (in milliseconds) to change the date to the next day, returns new date in milliseconds\r\nexport const getNextDay = (timestamp) => {\r\n    \r\n    const nextDayMS = parseInt(timestamp) + (MS_PER_DAY);\r\n\r\n    return nextDayMS;\r\n};\r\n\r\n// given the date (in milliseconds), subtracts 24 hours (in milliseconds) to change the date to the previous day, returns new date in milliseconds\r\nexport const getPrevDay = (timestamp) => {\r\n    \r\n    const prevDayMS = parseInt(timestamp) - (MS_PER_DAY);\r\n\r\n    return prevDayMS;\r\n};","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.getTime() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport events from 'inquirer/lib/utils/events';\r\n\r\nconst DayBox = ({\r\n    dayDate, \r\n    events,\r\n    showDescPreview = true,\r\n}) => {\r\n    if (dayDate.getDate() === 0) {\r\n        return (\r\n            <Col></Col>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Container className='card'>\r\n            <div className='card-header'>\r\n                {dayDate}\r\n            </div>\r\n            {showDescPreview ? (\r\n                <div className='card-body'>\r\n                    {events && events.map((event) => (\r\n                        <Row>\r\n                            <Row>\r\n                                {event.eventTitle}\r\n                            </Row>\r\n                            <Row>\r\n                                {((event.eventDescription.length) > 50) ? (\r\n                                    <Row>{(event.eventDescription).substring(0,49)}...</Row>\r\n                                ) : (\r\n                                    <Row>{(event.eventDescription)}</Row>\r\n                                )}\r\n                            </Row>\r\n                        </Row>\r\n                    ))}\r\n                </div>    \r\n            ) : (\r\n                <div className='card-body'>\r\n                    {events && events.map((event) => (\r\n                        <Row>\r\n                            {event.eventTitle}\r\n                        </Row>\r\n                    ))}\r\n                </div>  \r\n            )}\r\n        </Container>\r\n    );\r\n\r\n    // return (\r\n    //     <Link to={`/days/${dayDate}`}>\r\n    //         <Col key={dayDate.getTime()}>\r\n    //             <div className=\"card\">\r\n    //                 <h4 className=\"card-header bg-primary\">\r\n    //                     {dayDate.getDate()}\r\n    //                 </h4>\r\n    //                 {events && events.map((event) => (\r\n    //                     <Container className=\"card-body\">\r\n    //                         <Row>\r\n    //                             <p>{event.eventTitle}</p>\r\n    //                         </Row>\r\n    //                     </Container>\r\n    //                 ))}\r\n    //             </div>\r\n    //         </Col>\r\n    //     </Link>\r\n    // );\r\n};\r\n\r\nexport default DayBox;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport events from 'inquirer/lib/utils/events';\r\nimport DayBox from '../DayBox';\r\n\r\nconst Week = ({\r\n    days, \r\n    monthView = true,\r\n}) => {\r\n\r\n\r\n    return (\r\n        <Container>\r\n            {monthView ? (\r\n                <Row>\r\n                    <Link to={`/myWeek/${days[0].dayDate}`}>\r\n                        <Col>week</Col>\r\n                    </Link>\r\n                    {days && days.map((day) => (\r\n                        <Col>\r\n                            <DayBox \r\n                                dayDate={day.dayDate}\r\n                                events={day.events}\r\n                                showDescPreview={false} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            ) : (\r\n                <Row>\r\n                    {days && days.map((day) => (\r\n                        <Col>\r\n                            <DayBox\r\n                                dayDate={day.dayDate}\r\n                                events={day.events}\r\n                                showDescPreview={true} />\r\n                        </Col>\r\n                    ))}\r\n                </Row>\r\n            )}\r\n                \r\n        </Container>\r\n    );\r\n\r\n    // return (\r\n    //     <div>\r\n    //         {monthView ? (\r\n    //             <Row>\r\n    //                 <Link to={`/myWeek/${weekStart}`}>\r\n    //                     <Col>week</Col>\r\n    //                 </Link>\r\n    //                 {days && days.map((day) => (\r\n    //                     <DayBox\r\n    //                         dayDate={day.dayDate}\r\n    //                         events={day.events}\r\n\r\n    //                         showDescPreview={false}\r\n    //                     />\r\n    //                 ))}\r\n    //             </Row>\r\n    //         ) : (\r\n    //             <Row>\r\n    //                 {days && days.map((day) => (\r\n    //                     <DayBox\r\n    //                         dayDate={day.dayDate}\r\n    //                         events={day.events}\r\n    //                         showDescPreview={true}\r\n    //                     />\r\n    //                 ))}\r\n    //             </Row>\r\n    //         )}   \r\n    //     </div>          \r\n    // );\r\n};\r\n\r\nexport default Week;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_EVENT } from '../../utils/mutations';\r\n\r\nimport { Container, Row, Col, Modal } from 'react-bootstrap';\r\n\r\nimport Auth from '../../utils/auth';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../../utils/dateFormat';\r\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../../utils/dateFunctions';\r\nimport events from 'inquirer/lib/utils/events';\r\nimport Week from '../Week';\r\n//import AddEventForm from '../AddEventForm';\r\n\r\n\r\nconst MonthFormat = ({\r\n    monthNum,\r\n    year,\r\n    firstWeekDay,\r\n    numDays,\r\n    events,\r\n}) => {\r\n    //const [showModal, setShowModal] = useState(false);\r\n\r\n    const monthDays = [];\r\n    const dayOffset = firstWeekDay;\r\n    const monthWeeks = [];\r\n\r\n    // adds empty days to at front of month so every week is full\r\n    for (var i = 0; i < firstWeekDay; i++) {\r\n        const notDay = {\r\n            dayDate: 0,\r\n            events: [],\r\n        };\r\n        monthDays.push(notDay);\r\n    }\r\n\r\n    // adds a day object for each day of the month, assigns the date of each box, looks for events within the day's time window, \r\n    // and adds the events to the object's events array\r\n    for (var j = 0; j < numDays; j++) {\r\n        const dayEvents = [];\r\n        const dayTime = parseInt((new Date(year, monthNum, j)).getTime());\r\n        const dayStart = getDayStart(dayTime);\r\n        const dayEnd = getDayEnd(dayTime);\r\n        for (let x = 0; x < events.length; x++) {\r\n            const eventTime = parseInt(events[x].eventDate);\r\n            if (eventTime >= dayStart && eventTime <= dayEnd) {\r\n                dayEvents.push(events[x]);\r\n            }\r\n        }\r\n        const daySq = {\r\n            dayDate: dayTime,\r\n            events: dayEvents,\r\n        };\r\n        monthDays.push(daySq);\r\n    }\r\n\r\n    // adds empty days to end of month so array length is divisible by 7, so each week is 7 days\r\n    if (((monthDays.length) % 7) !== 0) {\r\n        const currLength = monthDays.length;\r\n        const fullWeeks = currLength % 7;\r\n        const leftOver = currLength - (fullWeeks * 7);\r\n        const fillSpace = 7 - leftOver;\r\n\r\n        for (var k = 0; k < fillSpace; k++) {\r\n            const notDay = {\r\n                dayDate: 0,\r\n                events: [],\r\n            };\r\n            monthDays.push(notDay);\r\n        }\r\n    }\r\n\r\n    const numWeeks = monthDays.length / 7;\r\n    const firstDay = new Date(year, monthNum, 0);\r\n    const monthEndTime = parseInt(getMonthEnd(firstDay.getTime()));\r\n    const endFirstWeek = parseInt(getWeekEnd(parseInt(firstDay.getTime())));\r\n    \r\n    let firstWeek = [];\r\n    for (let w = 0; w < monthDays.length; w++) {\r\n        if (parseInt(monthDays[w].dayDate) < endFirstWeek) {\r\n            firstWeek.push(monthDays[w]);\r\n        }\r\n    }\r\n    monthWeeks.push(firstWeek);\r\n\r\n    let weekDay = new Date(parseInt(getNextWeek(firstDay.getTime())));\r\n\r\n    for (let q = 1; q < numWeeks - 1; q++) {\r\n        let weekDays = [];\r\n        let weekStart = parseInt(getWeekStart(weekDay.getTime()));\r\n        let weekEnd = parseInt(getWeekEnd(weekDay.getTime()));\r\n\r\n        for (let f = 0; f < monthDays.length; f++) {\r\n            if (parseInt(monthDays[f].dayDate) >= weekStart && parseInt(monthDays[f].dayDate) <= weekEnd) {\r\n                weekDays.push(monthDays[f]);\r\n            }\r\n        }\r\n\r\n        monthWeeks.push(weekDays);\r\n\r\n        weekDay = new Date(parseInt(getNextWeek(weekDay.getTime())));\r\n    }\r\n\r\n    let lastWeekDays = [];\r\n    for (let a = 0; a < monthDays.length; a++) {\r\n        \r\n        const startLastWeek = parseInt(getWeekStart(weekDay.getTime()));\r\n        \r\n        if ((parseInt(monthDays[a].dayDate) >= startLastWeek && parseInt(monthDays[a].dayDate) <= monthEndTime) || (parseInt(monthDays[a].dayDate)) === 0) {\r\n            lastWeekDays.push(monthDays[a]);\r\n        }\r\n    }\r\n    monthWeeks.push(lastWeekDays);\r\n\r\n    // // adds each event\r\n    // for (var p = 0; p < events; p++) {\r\n    //     if (events[p].eventDate !== 0 && events[p].eventDate.getMonth() === monthNum) {\r\n    //         monthDays[dayOffset + events[p].eventDate.getDate()].events.push(events[p]);\r\n    //     }\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col>Week</Col>\r\n                    <Col>Sunday</Col>\r\n                    <Col>Monday</Col>\r\n                    <Col>Tuesday</Col>\r\n                    <Col>Wednesday</Col>\r\n                    <Col>Thursday</Col>\r\n                    <Col>Friday</Col>\r\n                    <Col>Saturday</Col>\r\n                </Row>\r\n                {monthWeeks && monthWeeks.map((week) => (\r\n                    <Row>\r\n                        <Week\r\n                            days={week.days}\r\n                            monthView={true}\r\n                        />\r\n                    </Row>\r\n                ))}\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonthFormat;","import React, { useState } from 'react';\r\nimport { Navigate, useParams, Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport { ADD_EVENT } from '../utils/mutations';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\r\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\r\nimport AddEventForm from '../components/AddEventForm';\r\nimport MonthFormat from '../components/MonthFormat';\r\n\r\nconst MyMonth = () => {\r\n    //const [ showModal, setShowModal ] = useState(false);\r\n    console.log('myMonth page called');\r\n    const { currTime } = useParams();\r\n    const {loading, data } = useQuery(QUERY_ME);\r\n\r\n    // const [addEvent, { error }] = useMutation(ADD_EVENT);\r\n\r\n    let myDate = new Date ();\r\n    if (currTime) {\r\n        console.log('----- currTime found ----- MyMonth');\r\n        console.log(currTime);\r\n        myDate = new Date (parseInt(currTime));\r\n        myDate.setHours(0);\r\n        myDate.setMinutes(0);\r\n        myDate.setSeconds(0);\r\n        myDate.setMilliseconds(0);\r\n    }\r\n    \r\n    let myTime = myDate.getTime();\r\n\r\n    let userData = {};\r\n    let myEvents = {};\r\n\r\n    if (data) {\r\n        console.log('user data found');\r\n        userData = data.me;\r\n        console.log(userData);\r\n        myEvents = userData.events;\r\n        console.log('user events');\r\n        console.log(myEvents);\r\n    } \r\n\r\n    let monthNum = myDate.getMonth();\r\n    let yearNum = myDate.getFullYear();\r\n    let firstWeekDay = getFirstWeekDay(monthNum, yearNum);\r\n    let numDays = getNumDays(monthNum, yearNum);\r\n    let dateNum = myDate.getDate();\r\n    let dayName = getDayName(myDate.getDay());\r\n    let monthName = getMonthName(monthNum);\r\n\r\n    let monthStart = parseInt(getMonthStart(currTime));\r\n    let monthEnd = parseInt(getMonthEnd(currTime));\r\n\r\n    let monthEvents = [];\r\n\r\n    for (let i = 0; i < myEvents; i++) {\r\n        console.log('----- adding events ----- MyMonth');\r\n        const currEventDate = new Date(parseInt(myEvents[i].eventDate));\r\n        const currEventDateMS = parseInt(currEventDate.getTime());\r\n\r\n        if (currEventDateMS >= monthStart && currEventDateMS <= monthEnd) {\r\n            console.log('----- event matching time frame ----- MyMonth');\r\n            monthEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <h2>LOADING...</h2>;\r\n    }\r\n\r\n    // const prevDay = (event) => {\r\n    //     event.preventDefault();\r\n    //     console.log(myDate);\r\n    //     console.log('prevDay button clicked');\r\n    //     myDate.setDate(dateNum--);\r\n    //     console.log(myDate);\r\n    //     const timeParam = myDate.getTime();\r\n    //     return <Navigate to={`/myDay/${timeParam}`} />;\r\n    // };\r\n\r\n    // const nextDay = (event) => {\r\n    //     event.preventDefault();\r\n    //     console.log(myDate);\r\n    //     console.log('nextDay button clicked');\r\n    //     myDate.setDate(dateNum++);\r\n    //     console.log(myDate);\r\n    //     const timeParam = myDate.getTime();\r\n    //     return <Navigate to={`/myDate/${timeParam}`} />;\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <div fluid className=\"jumbotron text-light bg-dark\">\r\n                <Container>\r\n                    <Row>\r\n                        <h1>{userData.firstName}'s Day</h1>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={`/myMonth/${getPrevMonth(myDate.getTime())}`}>{'<'}</Link>\r\n                        </Col>\r\n                        <Col><h2>{monthName} {yearNum}</h2></Col>\r\n                        <Col>\r\n                            <Link to={`/myMonth/${getNextMonth(myDate.getTime())}`}>{'>'}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <Container>\r\n                <MonthFormat\r\n                    monthNum={monthNum}\r\n                    year={yearNum}\r\n                    firstWeekDay={firstWeekDay}\r\n                    numDays={numDays}\r\n                    events={monthEvents}\r\n                />\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyMonth;\r\n","import React, { useState } from 'react';\r\nimport { Navigate, useParams, Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport { ADD_EVENT } from '../utils/mutations';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\r\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\r\nimport AddEventForm from '../components/AddEventForm';\r\n\r\nconst MyDay = () => {\r\n    const [ showModal, setShowModal ] = useState(false);\r\n    const { currTime } = useParams();\r\n    const {loading, data } = useQuery(QUERY_ME);\r\n\r\n    // const [addEvent, { error }] = useMutation(ADD_EVENT);\r\n\r\n    let myDate = new Date ();\r\n    if (currTime) {\r\n        myDate = new Date (parseInt(currTime));\r\n    }\r\n    myDate.setHours(0);\r\n    myDate.setMinutes(0);\r\n    myDate.setSeconds(0);\r\n    myDate.setMilliseconds(0);\r\n\r\n    let myTime = myDate.getTime();\r\n\r\n    let userData = {};\r\n    let myEvents = {};\r\n\r\n    if (data) {\r\n        console.log('user data found');\r\n        userData = data.me;\r\n        console.log(userData);\r\n        myEvents = userData.events;\r\n        console.log('user events');\r\n        console.log(myEvents);\r\n    } \r\n\r\n    let monthNum = myDate.getMonth();\r\n    let yearNum = myDate.getFullYear();\r\n    let dateNum = myDate.getDate();\r\n    let dayName = getDayName(myDate.getDay());\r\n    let monthName = getMonthName(monthNum);\r\n\r\n    let todayEvents = [];\r\n\r\n    for (let i = 0; i < myEvents; i++) {\r\n        const currEventDate = new Date(parseInt(myEvents[i].eventDate));\r\n\r\n        if (currEventDate.getDate() === dateNum && currEventDate.getMonth() === monthNum && currEventDate.getFullYear() === yearNum) {\r\n            todayEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <h2>LOADING...</h2>;\r\n    }\r\n\r\n    // const prevDay = (event) => {\r\n    //     event.preventDefault();\r\n    //     console.log(myDate);\r\n    //     console.log('prevDay button clicked');\r\n    //     myDate.setDate(dateNum--);\r\n    //     console.log(myDate);\r\n    //     const timeParam = myDate.getTime();\r\n    //     return <Navigate to={`/myDay/${timeParam}`} />;\r\n    // };\r\n\r\n    // const nextDay = (event) => {\r\n    //     event.preventDefault();\r\n    //     console.log(myDate);\r\n    //     console.log('nextDay button clicked');\r\n    //     myDate.setDate(dateNum++);\r\n    //     console.log(myDate);\r\n    //     const timeParam = myDate.getTime();\r\n    //     return <Navigate to={`/myDate/${timeParam}`} />;\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <div fluid className=\"jumbotron text-light bg-dark\">\r\n                <Container>\r\n                    <Row>\r\n                        <h1>{userData.firstName}'s Day</h1>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={`/myDay/${getPrevDay(myDate.getTime())}`}>{'<'}</Link>\r\n                        </Col>\r\n                        <Col><h2>{dayName}, {monthName} {dateNum}, {yearNum}</h2></Col>\r\n                        <Col>\r\n                            <Link to={`/myDay/${getNextDay(myDate.getTime())}`}>{'>'}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <Container className=\"card\">\r\n                <Container className=\"card-header\">\r\n                    <h3>Today's Events</h3>\r\n                </Container>\r\n                <Container className=\"card-body\">\r\n                    {todayEvents && todayEvents.map((event) => (\r\n                        <Row>\r\n                            <p>{event.eventTitle}</p>\r\n                        </Row>\r\n                    ))}\r\n                    <Row>\r\n                        <Button onClick={() => setShowModal(true)}>Add Event</Button>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n            <Modal\r\n                size='lg'\r\n                show={showModal}\r\n                onHide={() => setShowModal(false)}\r\n                aria-labelledby='addEvent-modal'>\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id='addEvent-modal'>\r\n                        New Event\r\n                    </Modal.Title>\r\n                    <AddEventForm\r\n                        eventDate={myTime}\r\n                    />\r\n                </Modal.Header>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyDay;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Navigate, BrowserRouter as Router, Link } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_MATCHUPS } from '../utils/queries';\r\n\r\nconst GetStarted = () => {\r\n\r\n    const currDate = new Date();\r\n    const currTime = currDate.getTime();\r\n\r\n    const myDayNav = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currTime = new Date();\r\n        const timeParam = currTime.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    // was in space below:\r\n    /*\r\n        {Auth.loggedIn() ? (\r\n                    <Link to={`myDay/${currTime}`}>\r\n                        <button>See MyDay</button>\r\n                    </Link>\r\n                ) : (\r\n\r\n                )}\r\n    */\r\n\r\n    return (\r\n            <div>\r\n                <h1>Get Started with MyTime</h1>\r\n                \r\n                <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n                    See MyDay\r\n                </Button>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default GetStarted;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from '../SignupForm';\r\nimport LoginForm from '../LoginForm';\r\n//import AddEventForm from './AddEventForm';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n\r\nconst NavBar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            MyTime\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              {/* <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link> */}\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to={`myDay/${currTime}`}>MyDay</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myMonth/${currTime}`}>MyMonth</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myWeek/${currTime}`}>MyWeek</Nav.Link>\r\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport MyMonth from './pages/MyMonth';\r\nimport MyDay from './pages/MyDay';\r\nimport Week from './pages/MyWeek';\r\n//import Home from './components/Home';\r\nimport GetStarted from './components/GetStarted';\r\nimport Navbar from './components/NavBar';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport Auth from './utils/auth';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('id_token');\r\n\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n        },\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n// space used to contain \"<Header />\"\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    \r\n                    <div className=\"container\">\r\n                        <Navbar />\r\n                        <Routes>\r\n                            {Auth.loggedIn() ? (\r\n                                <Route\r\n                                path='/'\r\n                                element={<MyDay />}\r\n                                />\r\n                            ) : (\r\n                                <Route \r\n                                path='/'\r\n                                element={<GetStarted />}\r\n                                />\r\n                            )}\r\n                            <Route\r\n                                path=\"/myMonth/:currTime\"\r\n                                element={<MyMonth />}\r\n                            />\r\n                            <Route  \r\n                                path=\"/myWeek/:currTime\"\r\n                                element={<Week />}\r\n                            />\r\n                            <Route\r\n                                path=\"/myDay/:currTime\"\r\n                                element={<MyDay />}\r\n                            />\r\n                        </Routes>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\r\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_EVENT = gql`\r\n    mutation addEvent($eventUser: String!, $eventDate: String!, $eventTitle: String!, $eventDescription: String!) {\r\n        addEvent(eventUser: $eventUser, eventDate: $eventDate, eventDescription: $eventDescription) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nexport const REMOVE_EVENT = gql`\r\n    mutation removeEvent($eventId: ID!) {\r\n        removeEvent(eventId: $eventId) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;"],"sourceRoot":""}