{"version":3,"sources":["utils/queries.js","components/AddEventForm/index.js","utils/dateFormat.js","utils/dateFunctions.js","components/DayBox/index.js","components/Week/index.js","components/MonthFormat/index.js","pages/MyMonth.js","pages/MyDay.js","components/GetStarted/index.js","components/SignupForm/index.js","components/LoginForm/index.js","components/NavBar/index.js","components/Footer/index.js","App.js","index.js","utils/auth.js","utils/mutations.js"],"names":["QUERY_ME","gql","_templateObject","Object","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","AddEventForm","_ref","eventDate","_useQuery","useQuery","data","loading","userData","console","log","_useState","useState","eventTitle","eventDescription","_useState2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_4__","eventFormData","setEventFormData","_useState3","_useState4","savedEvents","setSavedEvents","me","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_5__","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_3__","_useState5","validated","_useState7","_useState8","showAlert","setShowAlert","_useMutation","useMutation","ADD_EVENT","_useMutation2","addEvent","useEffect","handleInputChange","event","_event$target","target","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","handleFormSubmit","_ref2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_callee","_context","preventDefault","currentTarget","checkValidity","stopPropagation","handleSaveEvent","_x","apply","arguments","_ref3","_callee2","_context2","Auth","loggedIn","getToken","variables","eventData","eventId","parseInt","_id","events","concat","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","t0","myDate","Date","monthNum","getMonth","dateNum","getDate","yearNum","getFullYear","getTime","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","Fragment","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","noValidate","onSubmit","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","dismissible","onClose","show","variant","Text","Group","Label","htmlFor","Control","placeholder","onChange","e","setImmediate","required","Feedback","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","getNumDays","year","includes","div4","div100","div400","getDayName","dayNum","getMonthName","getMonthEnd","timestamp","myTime","month","numDays","getWeekStart","weekDay","getDay","getWeekEnd","getDayStart","getDayEnd","getNextMonth","nextMonth","getPrevMonth","prevMonth","getNextWeek","getNextDay","DayBox","dayDate","_ref$showDescPreview","showDescPreview","react_default","Col","Card","className","Title","Body","map","Row","substring","Week","days","_ref$monthView","monthView","Container","square","border","border-primary","day","components_DayBox","MonthFormat","firstWeekDay","monthDays","monthWeeks","j","dayEvents","dayTime","dayStart","dayEnd","x","eventTime","daySq","currLength","fillSpace","k","numWeeks","firstDay","monthEndTime","endFirstWeek","firstWeek","w","q","weekDays","weekStart","weekEnd","f","lastWeekDays","startLastWeek","week","components_Week","MyMonth","currTime","useParams","setHours","setMinutes","setSeconds","setMilliseconds","myEvents","getFirstWeekDay","monthName","monthStart","getMonthStart","monthEnd","monthEvents","currEventDate","currEventDateMS","fluid","firstName","dist","to","components_MonthFormat","MyDay","slicedToArray","showModal","setShowModal","dayName","todayEvents","Button","onClick","Modal","size","onHide","aria-labelledby","Header","closeButton","id","GetStarted","timeParam","react_router_dist","SignupForm","lastName","username","email","password","userFormData","setUserFormData","_useState6","ADD_USER","addUser","objectSpread","asyncToGenerator","_yield$addUser","login","token","Form","Alert","onCLose","disabled","LoginForm_regeneratorRuntime","LoginForm","LOGIN_USER","_yield$login","NavBar","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","logout","Tab","defaultActiveKey","Item","eventKey","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","Footer","location","useLocation","navigate","useNavigate","pathname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","localStorage","getItem","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","components_NavBar","path","element","pages_MyDay","components_GetStarted","pages_MyMonth","MyWeek_default","components_Footer","ReactDOM","render","StrictMode","src_App","document","getElementById","AuthService","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","decode","isTokenExpired","exp","idToken","setItem","window","assign","removeItem","__webpack_exports__","_templateObject2","_templateObject3"],"mappings":"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","file":"static/js/main.151cf94a.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_ME = gql`\n    {\n        me {\n            _id\n            username\n            email\n            events {\n                eventId\n                eventDate\n                eventTitle\n                eventDescription\n            }\n        }\n    }\n`;\n\n// export const QUERY_EVENTS = gql`\n//     query getMyEvents($timeStart: Date!, $timeEnd: Date!) {\n//         events {\n//             eventId\n//             eventDate\n//             eventTitle\n//             eventDescription\n//         }\n//     }\n// `;","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { ADD_EVENT } from '../../utils/mutations';\nimport { QUERY_ME } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\nimport { saveEvents, getSavedEvents } from '../../utils/localStorage';\n\nconst AddEventForm = ({\n  eventDate,\n}) => {\n  const { loading, data } = useQuery(QUERY_ME);\n  const userData = {};\n\n  console.log('----- Event Date: ----- AddEventForm');\n  console.log(eventDate);\n\n  const [eventFormData, setEventFormData] = useState({ eventDate: eventDate, eventTitle: '', eventDescription: ''});\n\n  const [savedEvents, setSavedEvents] = useState([]);\n\n  if (data) {\n    console.log('AddEventForm ----- line 20');\n    userData = data.me;\n    setEventFormData({ ...eventFormData });\n  } \n  // if (eventDate) {\n  //   console.log('AddEventForm ----- line 25');\n  //   setEventFormData({ ...eventFormData, eventDate: eventDate });\n  // }\n\n  const [validated] = useState(false);\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addEvent, { error }] = useMutation(ADD_EVENT);\n\n  // const [addEvent, { error }] = useMutation(ADD_EVENT, {\n  //   update(cache, { data: { addEvent } }) {\n  //     try {\n  //       const { events } = cache.readQuery({ query: QUERY_ME});\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   }\n  // });\n\n  useEffect(() => {\n    if (error) {\n      console.log('AddEventForm ----- line 37');\n      setShowAlert(true);\n    } else {\n      console.log('AddEventForm ----- line 40');\n      setShowAlert(false);\n    }\n  }, [error])\n\n  const handleInputChange = (event) => {\n    console.log('handleInputChange called ----- AddEventForm');\n    const { name, value } = event.target;\n    setEventFormData({ ...eventFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log('handleFormSubmit called ----- AddEventForm');\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      console.log('checkValidity = false ----- AddEventForm');\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    handleSaveEvent();\n\n    setEventFormData({\n      eventDate: '',\n      eventTitle: '',\n      eventDescription: '',\n    });\n  };\n\n  const handleSaveEvent = async () => {\n    const token = Auth.loggedIn() ? Auth.getToken() : null;\n\n    if (!token) {\n      return false;\n    }\n\n    try {\n      const { data } = await addEvent({\n        variables: { eventData: {\n          eventId: (parseInt(userData._id) + (userData.events.length)),\n          eventDate: eventFormData.eventDate,\n          eventTitle: eventFormData.eventTitle,\n          eventDescription: eventFormData.eventDescription,\n        }}\n      });\n      console.log(savedEvents);\n      setSavedEvents([...savedEvents, eventFormData]);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n  };\n\n  let myDate = new Date (parseInt(eventDate));\n  let monthNum = myDate.getMonth() + 1;\n  let dateNum = myDate.getDate();\n  let yearNum = myDate.getFullYear();\n  let myTime = myDate.getTime();\n\n  console.log('AddEventForm ----- line 84');\n\n\n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setEventFormData({ ... eventFormData, [name]: value });\n  // };\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const form = event.currentTarget;\n\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation(); \n  //   }\n\n  //   try {\n  //     const {data} = await addEvent({\n  //       variables: { \n  //         eventDate: myTime,\n  //         eventTitle: eventFormData.eventTitle,\n  //         eventDescription: eventFormData.eventDescription,\n  //        },\n  //     });\n  //     console.log(data);\n  //   } catch (err) {\n  //     console.error(err);\n  //     setShowAlert(true);\n  //   }\n\n  //   if (eventDate) {\n  //     setEventFormData({\n  //       eventDate: myDate,\n  //       eventTitle: '',\n  //       eventDescription: '',\n  //     });\n  //   } else {\n  //     setEventFormData({\n  //       eventDate: '',\n  //       eventTitle: '',\n  //       eventDescription: '',\n  //     });\n  //   }\n  // };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong adding your event\n        </Alert>\n\n        {eventDate ? (\n          <Form.Text>\n            <h3>Event Date</h3>\n            <p>{monthNum}/{dateNum}/{yearNum}</p>\n          </Form.Text>\n        ) : (\n          <Form.Group>\n            <Form.Label htmlFor='eventDate'>Event Date</Form.Label>\n            <Form.Control\n              type='date'\n              placeholder='date'\n              name='eventDate'\n              onChange={(e) => setImmediate(e.target.value)}\n              value={eventFormData.eventDate}\n            />\n          </Form.Group>\n        )}\n\n        <Form.Group>\n          <Form.Label htmlFor='eventTitle'>Title</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Title'\n            name='eventTitle'\n            value={eventFormData.eventTitle}\n            onChange={handleInputChange}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Title is required</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='eventDescription'>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Description'\n            name='eventDescription'\n            onChange={handleInputChange}\n            value={eventFormData.eventDescription}\n          />\n        </Form.Group>\n        <Button\n          type='submit'\n          variant='success'>\n            Add Event\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default AddEventForm;","// returns the number of days in the month, if the month is february, checks to see if it is a leap year\nexport const getNumDays = (monthNum, year) => {\n    // if the month number is 1, 3, 5, 7, 8, 10, 12 (jan, mar, may, jul, aug, oct, dec), the month has 31 days\n    if ([1,3,5,7,8,10,12].includes(monthNum)) {\n        return 31;\n    }\n    // if the month number is 4, 6, 9, 11 (apr, june, sept, nov), the month has 30 days\n    if ([4,6,9,11].includes(monthNum)) {\n        return 30;\n    }\n    // if the month number is 2 (february)\n    if (monthNum === 2) {\n        // check if year is a leap year\n        /*\n            rules:\n                years divisible by 400 ARE leap years\n                years divisible by 100 but not by 400 are NOT leap years\n                years divisible by 4 but not by 100 ARE leap years\n                years not divisible by 4 are NOT leap years \n\n                if year divisible by 4 ((year % 4) == 0) \n                    if year divisible by 100 ((year % 100) == 0)\n                        if year divisible by 400 ((year % 400) == 0)\n                            leap year\n                        else\n                            not leap year\n                    else\n                        leap year\n                else\n                    not leap year \n        */\n        // boolean variable to indicate whether year is evenly divisible by 4\n        var div4 = false;\n        // boolean variable to indicate whether year is evenly divisible by 100\n        var div100 = false;\n        // boolean variable to indicate whether year is evenly divisible by 400\n        var div400 = false;\n            \n        // sets div4 to true if the year is evenly divisible by 4\n        if ((year % 4) === 0) {\n            div4 = true;\n        }\n        // sets div100 to true if the year is evenly divisible by 100\n        if ((year % 100) === 0) {\n            div100 = true;\n        }\n        // sets div400 to true is the year is evenly divisible by 400\n        if ((year % 400) === 0) {\n            div400 = true;\n        }\n\n        if ((div4 && !div100) || (div4 && div100 && div400)) {\n            return 29;\n        } else {\n            return 28;\n        }\n    }\n};\n\n// given a month and year, determines the day of the week the firs tof the month falls on and returns the integer\nexport const getFirstWeekDay = (monthNum, year) => {\n    console.log(\"----- getFirstWeekDay ----- dateFormat:65\");\n    console.log(\"monthNum:\");\n    console.log(monthNum);\n    console.log(\"year:\");\n    console.log(year);\n    const firstDay = new Date(year, monthNum, 1);\n    // return first day of the month (numbers 0-6)\n    return firstDay.getDay();\n};\n\n// given the number of the day of the week, determines and returns the name of the day\nexport const getDayName = (dayNum) => {\n    console.log(\"----- dayNum ----- (client/src/utils/dateFormat:71) -----\");\n    console.log(dayNum);\n    switch (dayNum) {\n        case 0:\n            return \"Sunday\";\n        case 1:\n            return \"Monday\";\n        case 2:\n            return \"Tuesday\";\n        case 3:\n            return \"Wednesday\";\n        case 4:\n            return \"Thursday\";\n        case 5:\n            return \"Friday\";\n        case 6:\n            return \"Saturday\";\n        default:\n            return \"WeekDayErr\";\n    }\n};\n\n// given the number of the month, determines and returns the name of the month\nexport const getMonthName = (monthNum) => {\n    //const monthNum = monthNum;\n    switch (monthNum) {\n        case 0:\n            return \"January\";\n        case 1:\n            return \"February\";\n        case 2:\n            return \"March\";\n        case 3:\n            return \"April\";\n        case 4:\n            return \"May\";\n        case 5:\n            return \"June\";\n        case 6:\n            return \"July\";\n        case 7:\n            return \"August\";\n        case 8:\n            return \"September\";\n        case 9:\n            return \"October\";\n        case 10:\n            return \"November\";\n        case 11:\n            return \"December\";\n        default:\n            return \"MonthNameErr\";\n    }\n};\n\n","import { getNumDays } from './dateFormat';\n\n// number of milliseconds in one day\nconst MS_PER_DAY = 86400000;\n\n// given a date (in milliseconds), determines the start of the month and returns the date in milliseconds\nexport const getMonthStart = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let month = myTime.getMonth();\n    let year = myTime.getFullYear();\n    \n    const monthStart = new Date(year, month, 1, 0, 0, 0, 0);\n    const monthStartMS = monthStart.getTime();\n\n    return monthStartMS;\n};\n\n// given the date (in milliseconds), determines the last millisecond of the month and returns\nexport const getMonthEnd = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let month = myTime.getMonth();\n    let year = myTime.getFullYear();\n    \n    const numDays = getNumDays(month, year);\n\n    const monthEnd = new Date(year, month, numDays, 23, 59, 59, 999);\n\n    return monthEnd;\n};\n\n// given the date (in milliseconds), determines the first millisecond of the week and returns\nexport const getWeekStart = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let year = myTime.getFullYear();\n    let month = myTime.getMonth();\n    const dateNum = myTime.getDate();\n\n    const weekDay = myTime.getDay();\n    const sundayDate = dateNum - weekDay;\n\n    const weekStart = new Date(year, month, sundayDate, 0, 0, 0, 0);\n\n    return weekStart;\n};\n\n// given the date (in milliseconds), determines the last millisecond of the week and returns\nexport const getWeekEnd = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let year = myTime.getFullYear();\n    let month = myTime.getMonth();\n    const dateNum = myTime.getDate();\n\n    const weekDay = myTime.getDay();\n    const satOffset = 6 - weekDay;\n    const saturdayDate = dateNum + satOffset;\n\n    const weekEnd = new Date(year, month, saturdayDate, 23, 59, 59, 999);\n\n    return weekEnd;\n};\n\n// given the date (in milliseconds), determines and returns the first millisecond of the day\nexport const getDayStart = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let year = myTime.getFullYear();\n    let month = myTime.getMonth();\n    const dateNum = myTime.getDate();\n\n    const dayStart = new Date(year, month, dateNum, 0, 0, 0, 0);\n\n    return dayStart;\n};\n\n// given the date (in milliseconds), determines and returns the last millisecond of the day\nexport const getDayEnd = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let year = myTime.getFullYear();\n    let month = myTime.getMonth();\n    const dateNum = myTime.getDate();\n\n    const dayEnd = new Date(year, month, dateNum, 23, 59, 59, 999);\n\n    return dayEnd;\n};\n\n// given the date (in milliseconds), determines the current date, sets date to next month, returns new date in milliseconds\nexport const getNextMonth = (timestamp) => {\n    console.log('===== getNextMonth called ===== dateFunctions/getNextMonth');\n    const myTime = new Date(parseInt(timestamp));\n    console.log('----- currTime ----- dateFunctions/getNextMonth');\n\n    let year = parseInt(myTime.getFullYear());\n    let month = parseInt(myTime.getMonth());\n    console.log('----- year ----- dateFunctions/getNextMonth');\n    console.log(year);\n    console.log('----- month ----- dateFunctions/getNextMonth');\n    console.log(month);\n\n    if (month === 11) {\n        year++;\n        month = 0;\n    } else {\n        month++;\n    }\n\n    const nextMonth = new Date (year, month, 0);\n    console.log('----- next month ----- dateFunctions/getNextMonth');\n    console.log(nextMonth);\n    const nextMonthMS = nextMonth.getTime();\n\n    return nextMonthMS;\n};\n\n// given the date (in milliseconds), determines the current date, sets date to previous month, returns new date in milliseconds\nexport const getPrevMonth = (timestamp) => {\n    console.log('===== getPrevMonth called ===== dateFunctions/getPrevMonth');\n    const myTime = new Date(parseInt(timestamp));\n    console.log('----- currTime ----- dateFunctions/getPrevMonth');\n    console.log(myTime);\n\n    let year = parseInt(myTime.getFullYear());\n    let month = parseInt(myTime.getMonth());\n    console.log('----- year ----- dateFunctions/getPrevMonth');\n    console.log(year);\n    console.log('----- month ----- dateFunctions/getPrevMonth');\n\n    if (month === 0) {\n        year--;\n        month = 11;\n    } else {\n        month--;\n    }\n\n    const prevMonth = new Date(year, month, 0);\n    console.log('----- previous month ----- dateFunction/getPrevMonth');\n    const prevMonthMS = prevMonth.getTime();\n\n    return prevMonthMS;\n};\n\n// given the date (in milliseconds), adds 7 days (in milliseconds) to change the date to the following week, returns new date in milliseconds\nexport const getNextWeek = (timestamp) => {\n\n    const nextWeekMS = parseInt(timestamp) + (7 * MS_PER_DAY);\n    \n    return nextWeekMS;\n};\n\n// given the date (in milliseconds), subtracts 7 days (in milliseconds) to change the date ot the previous week, returns new date in milliseconds\nexport const getPrevWeek = (timestamp) => {\n    \n    const prevWeekMS = parseInt(timestamp) - (7 * MS_PER_DAY);\n\n    return prevWeekMS;\n};\n\n// given the date (in milliseconds), adds 24 hours (in milliseconds) to change the date to the next day, returns new date in milliseconds\nexport const getNextDay = (timestamp) => {\n    \n    const nextDayMS = parseInt(timestamp) + (MS_PER_DAY);\n\n    return nextDayMS;\n};\n\n// given the date (in milliseconds), subtracts 24 hours (in milliseconds) to change the date to the previous day, returns new date in milliseconds\nexport const getPrevDay = (timestamp) => {\n    \n    const prevDayMS = parseInt(timestamp) - (MS_PER_DAY);\n\n    return prevDayMS;\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col, Card } from 'react-bootstrap';\nimport events from 'inquirer/lib/utils/events';\n\nconst DayBox = ({\n    dayDate, \n    events,\n    showDescPreview = true,\n}) => {\n    if (dayDate.getDate() === 0) {\n        return (\n            <Col></Col>\n        );\n    }\n\n    return (\n        <Card className='square border border-dark'>\n            <Card.Title>\n                {dayDate}\n            </Card.Title>\n            {showDescPreview ? (\n                <Card.Body>\n                    {events && events.map((event) => (\n                        <Row>\n                            <Row>\n                                {event.eventTitle}\n                            </Row>\n                            <Row>\n                                {((event.eventDescription.length) > 50) ? (\n                                    <Row>{(event.eventDescription).substring(0,49)}...</Row>\n                                ) : (\n                                    <Row>{(event.eventDescription)}</Row>\n                                )}\n                            </Row>\n                        </Row>\n                    ))}\n                </Card.Body>    \n            ) : (\n                <Card.Body>\n                    {events && events.map((event) => (\n                        <Row>\n                            {event.eventTitle}\n                        </Row>\n                    ))}\n                </Card.Body>  \n            )}\n        </Card>\n    );\n\n    // return (\n    //     <Link to={`/days/${dayDate}`}>\n    //         <Col key={dayDate.getTime()}>\n    //             <div className=\"card\">\n    //                 <h4 className=\"card-header bg-primary\">\n    //                     {dayDate.getDate()}\n    //                 </h4>\n    //                 {events && events.map((event) => (\n    //                     <Container className=\"card-body\">\n    //                         <Row>\n    //                             <p>{event.eventTitle}</p>\n    //                         </Row>\n    //                     </Container>\n    //                 ))}\n    //             </div>\n    //         </Col>\n    //     </Link>\n    // );\n};\n\nexport default DayBox;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport events from 'inquirer/lib/utils/events';\nimport DayBox from '../DayBox';\n\nconst Week = ({\n    days, \n    monthView = true,\n}) => {\n\n\n    return (\n        <Container square border border-primary>\n            {monthView ? (\n                <Row>\n                    <Col>Week</Col>\n                    {days && days.map((day) => (\n                        <Col>\n                            <DayBox \n                                dayDate={day.dayDate}\n                                events={day.events}\n                                showDescPreview={false} />\n                        </Col>\n                    ))}\n                </Row>\n            ) : (\n                <Row>\n                    {days && days.map((day) => (\n                        <Col>\n                            <DayBox\n                                dayDate={day.dayDate}\n                                events={day.events}\n                                showDescPreview={true} />\n                        </Col>\n                    ))}\n                </Row>\n            )}\n                \n        </Container>\n    );\n\n    // return (\n    //     <div>\n    //         {monthView ? (\n    //             <Row>\n    //                 <Link to={`/myWeek/${weekStart}`}>\n    //                     <Col>week</Col>\n    //                 </Link>\n    //                 {days && days.map((day) => (\n    //                     <DayBox\n    //                         dayDate={day.dayDate}\n    //                         events={day.events}\n\n    //                         showDescPreview={false}\n    //                     />\n    //                 ))}\n    //             </Row>\n    //         ) : (\n    //             <Row>\n    //                 {days && days.map((day) => (\n    //                     <DayBox\n    //                         dayDate={day.dayDate}\n    //                         events={day.events}\n    //                         showDescPreview={true}\n    //                     />\n    //                 ))}\n    //             </Row>\n    //         )}   \n    //     </div>          \n    // );\n};\n\nexport default Week;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_EVENT } from '../../utils/mutations';\n\nimport { Container, Row, Col, Modal } from 'react-bootstrap';\n\nimport Auth from '../../utils/auth';\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../../utils/dateFormat';\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../../utils/dateFunctions';\nimport events from 'inquirer/lib/utils/events';\nimport Week from '../Week';\n//import AddEventForm from '../AddEventForm';\n\n\nconst MonthFormat = ({\n    monthNum,\n    year,\n    firstWeekDay,\n    numDays,\n    events,\n}) => {\n    //const [showModal, setShowModal] = useState(false);\n\n    const monthDays = [];\n    const dayOffset = firstWeekDay;\n    const monthWeeks = [];\n\n    // adds empty days to at front of month so every week is full\n    for (var i = 0; i < firstWeekDay; i++) {\n        const notDay = {\n            dayDate: 0,\n            events: [],\n        };\n        monthDays.push(notDay);\n    }\n\n    // adds a day object for each day of the month, assigns the date of each box, looks for events within the day's time window, \n    // and adds the events to the object's events array\n    for (var j = 0; j < numDays; j++) {\n        const dayEvents = [];\n        const dayTime = parseInt((new Date(year, monthNum, j)).getTime());\n        const dayStart = getDayStart(dayTime);\n        const dayEnd = getDayEnd(dayTime);\n        for (let x = 0; x < events.length; x++) {\n            const eventTime = parseInt(events[x].eventDate);\n            if (eventTime >= dayStart && eventTime <= dayEnd) {\n                dayEvents.push(events[x]);\n            }\n        }\n        const daySq = {\n            dayDate: dayTime,\n            events: dayEvents,\n        };\n        monthDays.push(daySq);\n    }\n\n    // adds empty days to end of month so array length is divisible by 7, so each week is 7 days\n    if (((monthDays.length) % 7) !== 0) {\n        const currLength = monthDays.length;\n        const fullWeeks = currLength % 7;\n        const leftOver = currLength - (fullWeeks * 7);\n        const fillSpace = 7 - leftOver;\n\n        for (var k = 0; k < fillSpace; k++) {\n            const notDay = {\n                dayDate: 0,\n                events: [],\n            };\n            monthDays.push(notDay);\n        }\n    }\n\n    const numWeeks = monthDays.length / 7;\n    const firstDay = new Date(year, monthNum, 0);\n    const monthEndTime = parseInt(getMonthEnd(firstDay.getTime()));\n    const endFirstWeek = parseInt(getWeekEnd(parseInt(firstDay.getTime())));\n    \n    let firstWeek = [];\n    for (let w = 0; w < monthDays.length; w++) {\n        if (parseInt(monthDays[w].dayDate) < endFirstWeek) {\n            firstWeek.push(monthDays[w]);\n        }\n    }\n    monthWeeks.push(firstWeek);\n\n    let weekDay = new Date(parseInt(getNextWeek(firstDay.getTime())));\n\n    for (let q = 1; q < numWeeks - 1; q++) {\n        let weekDays = [];\n        let weekStart = parseInt(getWeekStart(weekDay.getTime()));\n        let weekEnd = parseInt(getWeekEnd(weekDay.getTime()));\n\n        for (let f = 0; f < monthDays.length; f++) {\n            if (parseInt(monthDays[f].dayDate) >= weekStart && parseInt(monthDays[f].dayDate) <= weekEnd) {\n                weekDays.push(monthDays[f]);\n            }\n        }\n\n        monthWeeks.push(weekDays);\n\n        weekDay = new Date(parseInt(getNextWeek(weekDay.getTime())));\n    }\n\n    let lastWeekDays = [];\n    for (let a = 0; a < monthDays.length; a++) {\n        \n        const startLastWeek = parseInt(getWeekStart(weekDay.getTime()));\n        \n        if ((parseInt(monthDays[a].dayDate) >= startLastWeek && parseInt(monthDays[a].dayDate) <= monthEndTime) || (parseInt(monthDays[a].dayDate)) === 0) {\n            lastWeekDays.push(monthDays[a]);\n        }\n    }\n    monthWeeks.push(lastWeekDays);\n\n    // // adds each event\n    // for (var p = 0; p < events; p++) {\n    //     if (events[p].eventDate !== 0 && events[p].eventDate.getMonth() === monthNum) {\n    //         monthDays[dayOffset + events[p].eventDate.getDate()].events.push(events[p]);\n    //     }\n    // }\n\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>Week</Col>\n                    <Col>Sunday</Col>\n                    <Col>Monday</Col>\n                    <Col>Tuesday</Col>\n                    <Col>Wednesday</Col>\n                    <Col>Thursday</Col>\n                    <Col>Friday</Col>\n                    <Col>Saturday</Col>\n                </Row>\n                {monthWeeks && monthWeeks.map((week) => (\n                    <Row>\n                        <Week\n                            days={week.days}\n                            monthView={true}\n                        />\n                    </Row>\n                ))}\n            </Container>\n        </div>\n    );\n};\n\nexport default MonthFormat;","import React, { useState } from 'react';\nimport { Navigate, useParams, Link } from 'react-router-dom';\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ME } from '../utils/queries';\nimport { ADD_EVENT } from '../utils/mutations';\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\nimport AddEventForm from '../components/AddEventForm';\nimport MonthFormat from '../components/MonthFormat';\n\nconst MyMonth = () => {\n    //const [ showModal, setShowModal ] = useState(false);\n    console.log('myMonth page called');\n    const { currTime } = useParams();\n    const {loading, data } = useQuery(QUERY_ME);\n\n    // const [addEvent, { error }] = useMutation(ADD_EVENT);\n\n    let myDate = new Date ();\n    if (currTime) {\n        console.log('----- currTime found ----- MyMonth');\n        console.log(currTime);\n        myDate = new Date (parseInt(currTime));\n        myDate.setHours(0);\n        myDate.setMinutes(0);\n        myDate.setSeconds(0);\n        myDate.setMilliseconds(0);\n    }\n    \n    let myTime = myDate.getTime();\n\n    let userData = {};\n    let myEvents = {};\n\n    if (data) {\n        console.log('user data found');\n        userData = data.me;\n        console.log(userData);\n        myEvents = userData.events;\n        console.log('user events');\n        console.log(myEvents);\n    } \n\n    let monthNum = myDate.getMonth();\n    let yearNum = myDate.getFullYear();\n    let firstWeekDay = getFirstWeekDay(monthNum, yearNum);\n    let numDays = getNumDays(monthNum, yearNum);\n    let dateNum = myDate.getDate();\n    let dayName = getDayName(myDate.getDay());\n    let monthName = getMonthName(monthNum);\n\n    let monthStart = parseInt(getMonthStart(currTime));\n    let monthEnd = parseInt(getMonthEnd(currTime));\n\n    let monthEvents = [];\n\n    for (let i = 0; i < myEvents; i++) {\n        console.log('----- adding events ----- MyMonth');\n        const currEventDate = new Date(parseInt(myEvents[i].eventDate));\n        const currEventDateMS = parseInt(currEventDate.getTime());\n\n        if (currEventDateMS >= monthStart && currEventDateMS <= monthEnd) {\n            console.log('----- event matching time frame ----- MyMonth');\n            monthEvents.push(myEvents[i]);\n        }\n    }\n\n    if (loading) {\n        return <h2>LOADING...</h2>;\n    }\n\n    // const prevDay = (event) => {\n    //     event.preventDefault();\n    //     console.log(myDate);\n    //     console.log('prevDay button clicked');\n    //     myDate.setDate(dateNum--);\n    //     console.log(myDate);\n    //     const timeParam = myDate.getTime();\n    //     return <Navigate to={`/myDay/${timeParam}`} />;\n    // };\n\n    // const nextDay = (event) => {\n    //     event.preventDefault();\n    //     console.log(myDate);\n    //     console.log('nextDay button clicked');\n    //     myDate.setDate(dateNum++);\n    //     console.log(myDate);\n    //     const timeParam = myDate.getTime();\n    //     return <Navigate to={`/myDate/${timeParam}`} />;\n    // };\n\n    const prevDay = (event) => {\n\n    };\n\n    const nextDay = (event) => {\n\n    };\n\n    return (\n        <div>\n            <div fluid className=\"jumbotron text-light bg-dark\">\n                <Container>\n                    <Row>\n                        <h1>{userData.firstName}'s Day</h1>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Link to={`/myMonth/${getPrevMonth(monthStart)}`}>{'<'}</Link>\n                        </Col>\n                        <Col><h2>{monthName} {yearNum}</h2></Col>\n                        <Col>\n                            <Link to={`/myMonth/${getNextMonth(monthStart)}`}>{'>'}</Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <Container>\n                <MonthFormat\n                    monthNum={monthNum}\n                    year={yearNum}\n                    firstWeekDay={firstWeekDay}\n                    numDays={numDays}\n                    events={monthEvents}\n                />\n            </Container>\n        </div>\n    );\n};\n\nexport default MyMonth;\n","import React, { useState } from 'react';\nimport { Navigate, useParams, Link } from 'react-router-dom';\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ME } from '../utils/queries';\nimport { ADD_EVENT } from '../utils/mutations';\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\nimport AddEventForm from '../components/AddEventForm';\n\nconst MyDay = () => {\n    const [ showModal, setShowModal ] = useState(false);\n    const { currTime } = useParams();\n    const {loading, data } = useQuery(QUERY_ME);\n\n    // const [addEvent, { error }] = useMutation(ADD_EVENT);\n\n    let myDate = new Date ();\n    if (currTime) {\n        myDate = new Date (parseInt(currTime));\n    }\n    myDate.setHours(0);\n    myDate.setMinutes(0);\n    myDate.setSeconds(0);\n    myDate.setMilliseconds(0);\n\n    let myTime = myDate.getTime();\n\n    let userData = {};\n    let myEvents = {};\n\n    if (data) {\n        console.log('user data found');\n        userData = data.me;\n        console.log(userData);\n        myEvents = userData.events;\n        console.log('user events');\n        console.log(myEvents);\n    } \n\n    let monthNum = myDate.getMonth();\n    let yearNum = myDate.getFullYear();\n    let dateNum = myDate.getDate();\n    let dayName = getDayName(myDate.getDay());\n    let monthName = getMonthName(monthNum);\n\n    let todayEvents = [];\n\n    for (let i = 0; i < myEvents; i++) {\n        const currEventDate = new Date(parseInt(myEvents[i].eventDate));\n\n        if (currEventDate.getDate() === dateNum && currEventDate.getMonth() === monthNum && currEventDate.getFullYear() === yearNum) {\n            todayEvents.push(myEvents[i]);\n        }\n    }\n\n    if (loading) {\n        return <h2>LOADING...</h2>;\n    }\n\n    // const prevDay = (event) => {\n    //     event.preventDefault();\n    //     console.log(myDate);\n    //     console.log('prevDay button clicked');\n    //     myDate.setDate(dateNum--);\n    //     console.log(myDate);\n    //     const timeParam = myDate.getTime();\n    //     return <Navigate to={`/myDay/${timeParam}`} />;\n    // };\n\n    // const nextDay = (event) => {\n    //     event.preventDefault();\n    //     console.log(myDate);\n    //     console.log('nextDay button clicked');\n    //     myDate.setDate(dateNum++);\n    //     console.log(myDate);\n    //     const timeParam = myDate.getTime();\n    //     return <Navigate to={`/myDate/${timeParam}`} />;\n    // };\n\n    return (\n        <div>\n            <div fluid className=\"jumbotron text-light bg-dark\">\n                <Container>\n                    <Row>\n                        <h1>{userData.firstName}'s Day</h1>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Link to={`/myDay/${getPrevDay(myDate.getTime())}`}>{'<'}</Link>\n                        </Col>\n                        <Col><h2>{dayName}, {monthName} {dateNum}, {yearNum}</h2></Col>\n                        <Col>\n                            <Link to={`/myDay/${getNextDay(myDate.getTime())}`}>{'>'}</Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <Card>\n                <Card.Title>\n                    <h3>Today's Events</h3>\n                </Card.Title>\n                <Card.Body>\n                    {todayEvents && todayEvents.map((event) => (\n                        <Row>\n                            <p>{event.eventTitle}</p>\n                        </Row>\n                    ))}\n                    <Row>\n                        <Button onClick={() => setShowModal(true)}>Add Event</Button>\n                    </Row>\n                </Card.Body>\n            </Card>\n            <Modal\n                size='lg'\n                show={showModal}\n                onHide={() => setShowModal(false)}\n                aria-labelledby='addEvent-modal'>\n\n                <Modal.Header closeButton>\n                    <Modal.Title id='addEvent-modal'>\n                        New Event\n                    </Modal.Title>\n                    <AddEventForm\n                        eventDate={myTime}\n                    />\n                </Modal.Header>\n            </Modal>\n        </div>\n    );\n};\n\nexport default MyDay;\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Navigate, BrowserRouter as Router, Link } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_MATCHUPS } from '../utils/queries';\r\n\r\nconst GetStarted = () => {\r\n\r\n    const currDate = new Date();\r\n    const currTime = currDate.getTime();\r\n\r\n    const myDayNav = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currTime = new Date();\r\n        const timeParam = currTime.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    // was in space below:\r\n    /*\r\n        {Auth.loggedIn() ? (\r\n                    <Link to={`myDay/${currTime}`}>\r\n                        <button>See MyDay</button>\r\n                    </Link>\r\n                ) : (\r\n\r\n                )}\r\n    */\r\n\r\n    return (\r\n            <div>\r\n                <h1>Get Started with MyTime</h1>\r\n                \r\n                <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n                    See MyDay\r\n                </Button>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default GetStarted;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from '../SignupForm';\nimport LoginForm from '../LoginForm';\n//import AddEventForm from './AddEventForm';\n\nimport Auth from '../../utils/auth';\n\nconst currDate = new Date();\nconst currTime = currDate.getTime();\n\nconst NavBar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            MyTime\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              {/* <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link> */}\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to={`myDay/${currTime}`}>MyDay</Nav.Link>\n                  <Nav.Link as={Link} to={`myMonth/${currTime}`}>MyMonth</Nav.Link>\n                  <Nav.Link as={Link} to={`myWeek/${currTime}`}>MyWeek</Nav.Link>\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\nimport MyMonth from './pages/MyMonth';\nimport MyDay from './pages/MyDay';\nimport Week from './pages/MyWeek';\n//import Home from './components/Home';\nimport GetStarted from './components/GetStarted';\nimport Navbar from './components/NavBar';\nimport { setContext } from '@apollo/client/link/context';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport Auth from './utils/auth';\n\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('id_token');\n\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nconst currDate = new Date();\nconst currTime = currDate.getTime();\n// space used to contain \"<Header />\"\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div className=\"flex-column justify-flex-start min-100-vh\">\n                    \n                    <div className=\"container\">\n                        <Navbar />\n                        <Routes>\n                            {Auth.loggedIn() ? (\n                                <Route\n                                path='/'\n                                element={<MyDay />}\n                                />\n                            ) : (\n                                <Route \n                                path='/'\n                                element={<GetStarted />}\n                                />\n                            )}\n                            <Route\n                                path=\"/myMonth/:currTime\"\n                                element={<MyMonth />}\n                            />\n                            <Route  \n                                path=\"/myWeek/:currTime\"\n                                element={<Week />}\n                            />\n                            <Route\n                                path=\"/myDay/:currTime\"\n                                element={<MyDay />}\n                            />\n                        </Routes>\n                    </div>\n                    <Footer />\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.getTime() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`;\n\n// export const ADD_EVENT = gql`\n//     mutation addEvent($eventDate: String!, $eventTitle: String!, $eventDescription: String!) {\n//         addEvent(eventDate: $eventDate, eventDescription: $eventDescription) {\n//             _id\n//             username\n//             email\n//             events {\n//                 eventId\n//                 eventDate\n//                 eventTitle\n//                 eventDescription\n//             }\n//         }\n//     } \n// `;\n\nexport const ADD_EVENT = gql`\n    mutation addEvent($eventData: EventInput!) {\n        addEvent(eventData: $eventData) {\n            _id\n            username\n            email\n            events {\n                eventId\n                eventDate\n                eventTitle\n                eventDescription\n            }\n        }\n    } \n`;\n\n// export const REMOVE_EVENT = gql`\n//     mutation removeEvent($eventId: ID!) {\n//         removeEvent(eventId: $eventId) {\n//             _id\n//             username\n//             email\n//             events {\n//                 eventId\n//                 eventDate\n//                 eventTitle\n//                 eventDescription\n//             }\n//         }\n//     }\n// `;"],"sourceRoot":""}