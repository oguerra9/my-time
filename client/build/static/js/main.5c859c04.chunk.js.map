{"version":3,"sources":["utils/mutations.js","utils/auth.js","utils/dateFormat.js","utils/queries.js","pages/Month.js","pages/MyDay.js","components/GetStarted/index.js","components/SignupForm/index.js","components/LoginForm/index.js","components/NavBar/index.js","components/Footer/index.js","App.js","index.js"],"names":["LOGIN_USER","gql","_templateObject","Object","taggedTemplateLiteral","ADD_USER","_templateObject2","ADD_EVENT","_templateObject3","_templateObject4","auth","decode","this","getToken","token","isTokenExpired","exp","Date","getTime","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getNumDays","monthNum","year","includes","div4","div100","div400","getFirstWeekDay","console","log","getDay","getMonthName","QUERY_ME","queries_templateObject","Month","currTime","useParams","_useQuery","useQuery","loading","data","userData","me","myEvents","events","myDate","parseInt","month","getMonth","getFullYear","monthEvents","i","length","eventDate","push","handleNextMonthBtn","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","nextMonth","timeParam","wrap","_context","prev","next","preventDefault","setMonth","abrupt","react_default","a","createElement","react_router_dist","to","concat","stop","_x","apply","arguments","handlePrevMonthBtn","_ref2","_callee2","prevMonth","_context2","_x2","Container","Row","Button","onClick","firstWeekDay","numDays","MyDay","_useState","useState","_useState2","slicedToArray","_useMutation","useMutation","_useMutation2","error","todayEvents","day","getDate","dayName","dayNum","getDayName","monthName","currEventDate","fluid","className","firstName","setDate","map","eventTitle","GetStarted","SignupForm","lastName","username","email","password","userFormData","setUserFormData","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","addUser","useEffect","handleInputChange","_event$target","target","name","value","objectSpread","defineProperty","handleFormSubmit","SignupForm_regeneratorRuntime","_yield$addUser","currentTarget","checkValidity","stopPropagation","variables","sent","Auth","login","t0","Fragment","Form","noValidate","onSubmit","Alert","dismissible","onCLose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","disabled","LoginForm","LoginForm_regeneratorRuntime","_yield$login","onClose","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","id","Nav","loggedIn","logout","Modal","size","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Title","Item","eventKey","Body","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","Footer","useLocation","navigate","useNavigate","pathname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","dist","NavBar","path","element","pages_MyDay","components_GetStarted","pages_Month","Week_default","components_Footer","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.5c859c04.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\r\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_EVENT = gql`\r\n    mutation addEvent($eventUser: String!, $eventDate: String!, $eventTime: String!, $eventTitle: String!, $eventDescription: String!) {\r\n        addEvent(eventUser: $eventUser, eventDate: $eventDate, eventTime: $eventTime, eventDescription: $eventDescription) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nexport const REMOVE_EVENT = gql`\r\n    mutation removeEvent($eventId: ID!) {\r\n        removeEvent(eventId: $eventId) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.getTime() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","const daysToMS = (numDays) => {\r\n    const numMS = numDays * 24 * 60 * 60 * 1000;\r\n    return numMS;\r\n}\r\n\r\nexport const getNumDays = (monthNum, year) => {\r\n    // if the month number is 1, 3, 5, 7, 8, 10, 12 (jan, mar, may, jul, aug, oct, dec), the month has 31 days\r\n    if ([1,3,5,7,8,10,12].includes(monthNum)) {\r\n        return 31;\r\n    }\r\n    // if the month number is 4, 6, 9, 11 (apr, june, sept, nov), the month has 30 days\r\n    if ([4,6,9,11].includes(monthNum)) {\r\n        return 30;\r\n    }\r\n    // if the month number is 2 (february)\r\n    if (monthNum === 2) {\r\n        // check if year is a leap year\r\n        /*\r\n            rules:\r\n                years divisible by 400 ARE leap years\r\n                years divisible by 100 but not by 400 are NOT leap years\r\n                years divisible by 4 but not by 100 ARE leap years\r\n                years not divisible by 4 are NOT leap years \r\n\r\n                if year divisible by 4 ((year % 4) == 0) \r\n                    if year divisible by 100 ((year % 100) == 0)\r\n                        if year divisible by 400 ((year % 400) == 0)\r\n                            leap year\r\n                        else\r\n                            not leap year\r\n                    else\r\n                        leap year\r\n                else\r\n                    not leap year \r\n        */\r\n        // boolean variable to indicate whether year is evenly divisible by 4\r\n        var div4 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 100\r\n        var div100 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 400\r\n        var div400 = false;\r\n            \r\n        // sets div4 to true if the year is evenly divisible by 4\r\n        if ((year % 4) === 0) {\r\n            div4 = true;\r\n        }\r\n        // sets div100 to true if the year is evenly divisible by 100\r\n        if ((year % 100) === 0) {\r\n            div100 = true;\r\n        }\r\n        // sets div400 to true is the year is evenly divisible by 400\r\n        if ((year % 400) === 0) {\r\n            div400 = true;\r\n        }\r\n\r\n        if ((div4 && !div100) || (div4 && div100 && div400)) {\r\n            return 29;\r\n        } else {\r\n            return 28;\r\n        }\r\n    }\r\n};\r\n\r\nexport const getFirstWeekDay = (monthNum, year) => {\r\n    console.log(\"----- getFirstWeekDay ----- dateFormat:65\");\r\n    console.log(\"monthNum:\");\r\n    console.log(monthNum);\r\n    console.log(\"year:\");\r\n    console.log(year);\r\n    const firstDay = new Date(year, monthNum, 1);\r\n    // return first day of the month (numbers 0-6)\r\n    return firstDay.getDay();\r\n};\r\n\r\nexport const getDayName = (dayNum) => {\r\n    console.log(\"----- dayNum ----- (client/src/utils/dateFormat:71) -----\");\r\n    console.log(dayNum);\r\n    switch (dayNum) {\r\n        case 0:\r\n            return \"Sunday\";\r\n        case 1:\r\n            return \"Monday\";\r\n        case 2:\r\n            return \"Tuesday\";\r\n        case 3:\r\n            return \"Wednesday\";\r\n        case 4:\r\n            return \"Thursday\";\r\n        case 5:\r\n            return \"Friday\";\r\n        case 6:\r\n            return \"Saturday\";\r\n        default:\r\n            return \"WeekDayErr\";\r\n    }\r\n};\r\n\r\nexport const getMonthName = (monthNum) => {\r\n    //const monthNum = monthNum;\r\n    switch (monthNum) {\r\n        case 0:\r\n            return \"January\";\r\n        case 1:\r\n            return \"February\";\r\n        case 2:\r\n            return \"March\";\r\n        case 3:\r\n            return \"April\";\r\n        case 4:\r\n            return \"May\";\r\n        case 5:\r\n            return \"June\";\r\n        case 6:\r\n            return \"July\";\r\n        case 7:\r\n            return \"August\";\r\n        case 8:\r\n            return \"September\";\r\n        case 9:\r\n            return \"October\";\r\n        case 10:\r\n            return \"November\";\r\n        case 11:\r\n            return \"December\";\r\n        default:\r\n            return \"MonthNameErr\";\r\n    }\r\n}\r\n\r\n\r\nexport const getMonthStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const monthStart = new Date(year, month, 1, 0, 0, 0, 0);\r\n\r\n    return monthStart;\r\n};\r\n\r\nexport const getMonthEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const numDays = getNumDays(month, year);\r\n\r\n    const monthEnd = new Date(year, month, numDays, 23, 59, 59, 999);\r\n\r\n    return monthEnd;\r\n};\r\n\r\nexport const getWeekStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const sundayDate = dateNum - weekDay;\r\n\r\n    const weekStart = new Date(year, month, sundayDate, 0, 0, 0, 0);\r\n\r\n    return weekStart;\r\n};\r\n\r\nexport const getWeekEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const satOffset = 6 - weekDay;\r\n    const saturdayDate = dateNum + satOffset;\r\n\r\n    const weekEnd = new Date(year, month, saturdayDate, 23, 59, 59, 999);\r\n\r\n    return weekEnd;\r\n};\r\n\r\nexport const getDayStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayStart = new Date(year, month, dateNum, 0, 0, 0, 0);\r\n\r\n    return dayStart;\r\n};\r\n\r\nexport const getDayEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayEnd = new Date(year, month, dateNum, 23, 59, 59, 999);\r\n\r\n    return dayEnd;\r\n};\r\n\r\nexport const getNextMonth = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 11) {\r\n        myTime.setFullYear(year++);\r\n        myTime.setMonth(0);\r\n    } else {\r\n        myTime.setMonth(month++);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\nexport const getPrevMonth = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 0) {\r\n        myTime.setFullYear(year--);\r\n        myTime.setMonth(11);\r\n    } else {\r\n        myTime.setMonth(month--);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\nexport const getNextWeek = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const weekMS = daysToMS(7);\r\n\r\n    const nextWeekMS = myTimeMS + weekMS;\r\n    const nextWeek = new Date(nextWeekMS);\r\n\r\n    return nextWeek;\r\n};\r\n\r\nexport const getPrevWeek = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const weekMS = daysToMS(7);\r\n\r\n    const prevWeekMS = myTimeMS - weekMS;\r\n    const prevWeek = new Date(prevWeekMS);\r\n\r\n    return prevWeek;\r\n};\r\n\r\nexport const getNextDay = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const dayMS = daysToMS(1);\r\n\r\n    const nextDayMS = myTimeMS + dayMS;\r\n    const nextDay = new Date(nextDayMS);\r\n\r\n    return nextDay;\r\n};\r\n\r\nexport const getPrevDay = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const dayMS = daysToMS(1);\r\n\r\n    const prevDayMS = myTimeMS + dayMS;\r\n    const prevDay = new Date(prevDayMS);\r\n\r\n    return prevDay;\r\n};","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_ME = gql`\r\n    {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// export const QUERY_EVENTS = gql`\r\n//     query getMyEvents($timeStart: Date!, $timeEnd: Date!) {\r\n//         events {\r\n//             _id\r\n//             eventUser\r\n//             eventDate\r\n//             eventTime\r\n//             eventTitle\r\n//             eventDescription\r\n//         }\r\n//     }\r\n// `;","import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nimport MonthFormat from '../components/MonthFormat';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName, getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFormat';\r\n\r\n// import { QUERY_EVENTS, QUERY_ME } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\n\r\nconst Month = () => {\r\n    const { currTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    // const startTime = getMonthStart(currTime);\r\n    // const endTime = getMonthEnd(currTime);\r\n    let userData = {};\r\n\r\n    if (data) {\r\n        userData = data.me;\r\n    }\r\n\r\n    console.log(\"----- user data: -----\");\r\n    console.log(userData);\r\n    const myEvents = userData.events;\r\n    console.log(\"----- my events: -----\");\r\n    console.log(myEvents);\r\n\r\n    const myDate = new Date(parseInt(currTime));\r\n    let month = myDate.getMonth();\r\n    let year = myDate.getFullYear();\r\n\r\n    const monthEvents = [];\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        if (myEvents[i].eventDate.getMonth() === month && myEvents[i].eventDate.getFullYear() === year) {\r\n            monthEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n     \r\n\r\n    const handleNextMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        const nextMonth = myDate.setMonth(month++);\r\n        const timeParam = nextMonth.getTime();\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n    \r\n\r\n    const handlePrevMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const prevMonth = myDate.setMonth(month--);\r\n        const timeParam = prevMonth.getTime();\r\n\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Button onClick={handlePrevMonthBtn}>Prev Month</Button>\r\n                    <h3>{getMonthName(myDate.getMonth())}</h3>\r\n                    <Button onClick={handleNextMonthBtn}>Next Month</Button>\r\n                </Row>\r\n                <Row>\r\n                    <Month \r\n                        monthNum={myDate.getMonth()}\r\n                        year={myDate.getFullYear()}\r\n                        firstWeekDay={getFirstWeekDay(currTime)}\r\n                        numDays={getNumDays(myDate.getMonth())}\r\n                        events={myEvents}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Month;","import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\n// import { QUERY_ME, QUERY_EVENTS } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport { ADD_EVENT, REMOVE_EVENT } from '../utils/mutations';\r\nimport { getSavedEventIds, saveEventIds, removeEventId } from '../utils/localStorage';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName, getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFormat';\r\n//import { DayBox } from '../components/DayBox';\r\n\r\n\r\nimport Auth from '../utils/auth';\r\nimport events from 'inquirer/lib/utils/events';\r\n\r\nconst MyDay = () => {\r\n    const [ showModal, setShowModal ] = useState(false);\r\n    const { currTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    let myDate = new Date ();\r\n\r\n    if (currTime) {\r\n        console.log(\"----- currTime ----- MyDay.js\");\r\n        console.log(currTime);\r\n\r\n        myDate = new Date(parseInt(currTime));\r\n        console.log(\"----- myDate ----- MyDay.js\");\r\n        console.log(myDate);\r\n    }     \r\n\r\n\r\n    const [addEvent, { error }] = useMutation(ADD_EVENT);\r\n\r\n    let userData = {};\r\n    let myEvents = {};\r\n    let todayEvents = {};\r\n\r\n    //const [removeEvent, { error }] = useMutation(REMOVE_EVENT);\r\n    if ( data ) {\r\n        userData = data.me;\r\n        myEvents = userData.events;\r\n    } else {\r\n        userData = {};\r\n    }\r\n\r\n    let month = myDate.getMonth();\r\n    console.log(\"----- month ----- MyDay.js\");\r\n    console.log(month);\r\n    let year = myDate.getFullYear();\r\n    console.log(\"----- year ----- MyDay.js\");\r\n    console.log(year);\r\n    let day = myDate.getDate();\r\n    console.log(\"----- day ----- MyDay.js\");\r\n    console.log(day);\r\n    let dayName = getDayName(myDate.getDay());\r\n    console.log(\"----- dayName ----- MyDay.js\");\r\n    console.log(dayName);\r\n    let monthName = getMonthName(month);\r\n    console.log(\"----- monthName ----- MyDay.js\");\r\n    console.log(monthName);\r\n\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        const currEventDate = new Date(myEvents[i].eventDate);\r\n\r\n        if (currEventDate.getDate() === day && currEventDate.getMonth() === month && currEventDate.getFullYear() === year) {\r\n            todayEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n\r\n    // const handleDeleteEvent = async (eventId) => {\r\n    //     const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    //     if (!token) {\r\n    //         return false;\r\n    //     }\r\n\r\n    //     try {\r\n    //         const { data } = await removeEvent({\r\n    //             variables: { eventId },\r\n    //         });\r\n\r\n    //         removeEventId(eventId);\r\n    //     } catch (err) {\r\n    //         console.error(err);\r\n    //     }\r\n    // };\r\n\r\n    if (loading) {\r\n        return <h2>LOADING...</h2>;\r\n    }\r\n\r\n    //const currDate = new Date();\r\n    const prevDay = (event) => {\r\n        event.preventDefault();\r\n        console.log('prevDay button clicked');\r\n        myDate.setDate(day--);\r\n        const timeParam = myDate.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    const nextDay = (event) => {\r\n        event.preventDefault();\r\n        console.log('nextDay button clicked');\r\n        myDate.setDate(day++);\r\n        const timeParam = myDate.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    }\r\n\r\n    // return (\r\n    //         <div>\r\n    //             <h1>Get Started with MyTime</h1>\r\n    //             <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n    //                 See MyDay\r\n    //             </Button>\r\n    //         </div>\r\n    // );\r\n\r\n    //was inside container\r\n    /*\r\n<DayBox\r\n                    dayDate={currTime}\r\n                    events={todayEvents}\r\n                    showDescription={false}\r\n                    showDescPreview={true}\r\n                    showEventTime={true}\r\n                />\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            <div fluid className=\"jumbotron text-light bg-dark\">\r\n                <Container>\r\n                    <h1>{userData.firstName}'s Day</h1>\r\n                    <Button className=\"btn btn-lg btn-light m-2\" onClick={prevDay}>{'<'}</Button>\r\n                    <h2>{dayName}, {monthName} {day},{year}</h2>\r\n                    <Button className=\"btn btn-lg btn-light m-2\" onClick={nextDay}>{'>'}</Button>\r\n                </Container>\r\n            </div>\r\n            <Container>\r\n                <h3> Today's Events </h3>\r\n                {todayEvents && todayEvents.map((event) => (\r\n                    <Container className=\"card-body\">\r\n                        <Row>\r\n                            <p>{event.eventTitle}</p>\r\n                        </Row>\r\n                    </Container>\r\n                ))}\r\n            </Container>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyDay;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Navigate, BrowserRouter as Router, Link } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_MATCHUPS } from '../utils/queries';\r\n\r\nconst GetStarted = () => {\r\n\r\n    const currDate = new Date();\r\n    const currTime = currDate.getTime();\r\n\r\n    const myDayNav = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currTime = new Date();\r\n        const timeParam = currTime.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    // was in space below:\r\n    /*\r\n        {Auth.loggedIn() ? (\r\n                    <Link to={`myDay/${currTime}`}>\r\n                        <button>See MyDay</button>\r\n                    </Link>\r\n                ) : (\r\n\r\n                )}\r\n    */\r\n\r\n    return (\r\n            <div>\r\n                <h1>Get Started with MyTime</h1>\r\n                \r\n                <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n                    See MyDay\r\n                </Button>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default GetStarted;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from '../SignupForm';\r\nimport LoginForm from '../LoginForm';\r\n//import AddEventForm from './AddEventForm';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            MyTime\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              {/* <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link> */}\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to={`myDay/${currTime}`}>MyDay</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myMonth/${currTime}`}>MyMonth</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myWeek/${currTime}`}>MyWeek</Nav.Link>\r\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport Day from './pages/Day';\r\nimport Month from './pages/Month';\r\nimport MyDay from './pages/MyDay';\r\nimport Week from './pages/Week';\r\n//import Home from './components/Home';\r\nimport GetStarted from './components/GetStarted';\r\nimport Navbar from './components/NavBar';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport Auth from './utils/auth';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('id_token');\r\n\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n        },\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n// space used to contain \"<Header />\"\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    \r\n                    <div className=\"container\">\r\n                        <Navbar />\r\n                        <Routes>\r\n                            {Auth.loggedIn() ? (\r\n                                <Route\r\n                                path='/'\r\n                                element={<MyDay />}\r\n                                />\r\n                            ) : (\r\n                                <Route \r\n                                path='/'\r\n                                element={<GetStarted />}\r\n                                />\r\n                            )}\r\n                            <Route\r\n                                path=\"/myMonth/:currTime\"\r\n                                element={<Month />}\r\n                            />\r\n                            <Route  \r\n                                path=\"/myWeek/:currTime\"\r\n                                element={<Week />}\r\n                            />\r\n                            <Route\r\n                                path=\"/myDay/:currTime\"\r\n                                element={<MyDay />}\r\n                            />\r\n                        </Routes>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}