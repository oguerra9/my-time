{"version":3,"sources":["components/AddEventForm/index.js","utils/auth.js","utils/dateFormat.js","utils/queries.js","pages/Month.js","pages/MyDay.js","components/GetStarted/index.js","components/SignupForm/index.js","components/LoginForm/index.js","components/NavBar.js","components/Footer/index.js","App.js","index.js","utils/mutations.js"],"names":["AddEventForm","_ref","eventDate","console","log","_useState","useState","eventUser","eventTime","eventTitle","eventDescription","_useState2","Object","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","eventFormData","setEventFormData","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","_useMutation","useMutation","ADD_EVENT","_useMutation2","addEvent","error","useEffect","handleInputChange","event","_event$target","target","name","value","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","handleFormSubmit","_ref2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","_yield$addEvent","data","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","variables","sent","t0","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","Fragment","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","noValidate","onSubmit","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","e","setImmediate","step","ev","_this","setState","time","className","required","Feedback","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","disabled","title","onClick","auth","decode","getToken","token","isTokenExpired","exp","Date","getTime","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getNumDays","monthNum","year","includes","div4","div100","div400","getFirstWeekDay","getDay","getMonthName","QUERY_ME","gql","_templateObject","taggedTemplateLiteral","Month","currTime","useParams","_useQuery","useQuery","loading","userData","me","myEvents","events","myDate","parseInt","month","getMonth","getFullYear","monthEvents","i","length","push","handleNextMonthBtn","asyncToGenerator","nextMonth","timeParam","setMonth","abrupt","react_default","react_router_dist","to","concat","handlePrevMonthBtn","_callee2","prevMonth","_context2","_x2","Container","Row","Button","firstWeekDay","numDays","MyDay","slicedToArray","showModal","setShowModal","setHours","setMinutes","setSeconds","setMilliseconds","myTime","day","getDate","dayName","dayNum","getDayName","monthName","todayEvents","currEventDate","fluid","firstName","setDate","map","Modal","size","onHide","aria-labelledby","Header","closeButton","Title","id","GetStarted","SignupForm","lastName","username","email","password","userFormData","setUserFormData","ADD_USER","addUser","objectSpread","defineProperty","SignupForm_regeneratorRuntime","_yield$addUser","Auth","login","Form","Alert","onCLose","LoginForm","LOGIN_USER","LoginForm_regeneratorRuntime","_yield$login","AppNavbar","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","loggedIn","logout","Tab","defaultActiveKey","Item","eventKey","Body","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","Footer","useLocation","navigate","useNavigate","pathname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","dist","NavBar","path","element","pages_MyDay","components_GetStarted","pages_Month","Week_default","components_Footer","ReactDOM","render","StrictMode","src_App","document","getElementById","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","_templateObject2","_templateObject3","_templateObject4"],"mappings":"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","file":"static/js/main.75024cb3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert, Modal } from 'react-bootstrap';\r\n\r\nimport {useMutation} from '@apollo/client';\r\nimport {ADD_EVENT} from '../../utils/mutations';\r\n\r\n//import Auth from '../../utils/auth';\r\n\r\nconst AddEventForm = ({\r\n  eventDate,\r\n}) => {\r\n  console.log(\"----- Event Date: ----- AddEventForm\");\r\n  console.log(eventDate);\r\n  // set initial form state\r\n  const [eventFormData, setEventFormData] = useState({ eventUser: '', eventDate: '', eventTime: '', eventTitle: '', eventDescription: '' });\r\n  // set state for form validation\r\n  const [validated] = useState(false);\r\n  // set state for alert\r\n  const [showAlert, setShowAlert] = useState(false);\r\n\r\n  const [addEvent, {error}] = useMutation(ADD_EVENT);\r\n\r\n  useEffect(() => {\r\n    if (error) {\r\n      setShowAlert(true);\r\n    } else {\r\n      setShowAlert(false);\r\n    }\r\n  }, [error])\r\n\r\n  const handleInputChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setEventFormData({ ...eventFormData, [name]: value });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    // check if form has everything (as per react-bootstrap docs)\r\n    const form = event.currentTarget;\r\n    if (form.checkValidity() === false) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    try {\r\n      const {data} = await addEvent({\r\n        variables: { ...eventFormData },\r\n      });\r\n      console.log(data);\r\n    } catch (err) {\r\n      console.error(err);\r\n      setShowAlert(true);\r\n    }\r\n\r\n    setEventFormData({\r\n      //eventUser: '',\r\n      eventDate: eventDate,\r\n      eventTime: '',\r\n      eventTitle: '',\r\n      eventDescription: '',\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* This is needed for the validation functionality above */}\r\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n        {/* show alert if server response is bad */}\r\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\r\n          Something went wrong with your event\r\n        </Alert>\r\n\r\n        {eventDate ? (\r\n          <Form.Group>\r\n            <Form.Label htmlFor='eventDate'>Event Date</Form.Label>\r\n            <Form.Control\r\n              type='date'\r\n              placeholder='date'\r\n              name='eventDate'\r\n              onChange={(e) => setImmediate(e.target.value)}\r\n              value={eventFormData.eventDate}\r\n            />\r\n          </Form.Group>\r\n        ) : (\r\n          <Form.Group>\r\n            <Form.Label htmlFor='eventDate'>Event Date</Form.Label>\r\n            <Form.Control\r\n              type='date'\r\n              placeholder='date'\r\n              name='eventDate'\r\n              onChange={(e) => setImmediate(e.target.value)}\r\n              value={eventFormData.eventDate}\r\n            />\r\n          </Form.Group>\r\n        )}\r\n        \r\n          {/* <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback> */}\r\n        \r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='eventTime'>Event Time</Form.Label>\r\n          <Form.Control\r\n            type='time'\r\n            step=\"1\"\r\n            placeholder='Time'\r\n            name='eventTime'\r\n            onChange={(ev) => {this.setState({time:ev.target.value})}}\r\n            className=\"form-control\"\r\n            // value={this.state.time}\r\n            value={eventFormData.eventTime}\r\n          />\r\n          {/* <Form.Control.Feedback type='invalid'>Email is required!</Form.Control.Feedback> */}\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='eventTitle'>Title</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Title'\r\n            name='eventTitle'\r\n            onChange={handleInputChange}\r\n            value={eventFormData.eventTitle}\r\n            required\r\n          />\r\n          <Form.Control.Feedback type='invalid'>Title is required!</Form.Control.Feedback>\r\n        </Form.Group>\r\n\r\n        <Form.Group>\r\n          <Form.Label htmlFor='eventDescription'>Description</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Description'\r\n            name='eventDescription'\r\n            onChange={handleInputChange}\r\n            value={eventFormData.eventDescription}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button\r\n          disabled={!(eventFormData.title)}\r\n          type='submit'\r\n          variant='success'\r\n          onClick={handleFormSubmit}>\r\n          Add Event\r\n        </Button>\r\n      </Form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddEventForm;\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.getTime() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","const daysToMS = (numDays) => {\r\n    const numMS = numDays * 24 * 60 * 60 * 1000;\r\n    return numMS;\r\n}\r\n\r\nexport const getNumDays = (monthNum, year) => {\r\n    // if the month number is 1, 3, 5, 7, 8, 10, 12 (jan, mar, may, jul, aug, oct, dec), the month has 31 days\r\n    if ([1,3,5,7,8,10,12].includes(monthNum)) {\r\n        return 31;\r\n    }\r\n    // if the month number is 4, 6, 9, 11 (apr, june, sept, nov), the month has 30 days\r\n    if ([4,6,9,11].includes(monthNum)) {\r\n        return 30;\r\n    }\r\n    // if the month number is 2 (february)\r\n    if (monthNum === 2) {\r\n        // check if year is a leap year\r\n        /*\r\n            rules:\r\n                years divisible by 400 ARE leap years\r\n                years divisible by 100 but not by 400 are NOT leap years\r\n                years divisible by 4 but not by 100 ARE leap years\r\n                years not divisible by 4 are NOT leap years \r\n\r\n                if year divisible by 4 ((year % 4) == 0) \r\n                    if year divisible by 100 ((year % 100) == 0)\r\n                        if year divisible by 400 ((year % 400) == 0)\r\n                            leap year\r\n                        else\r\n                            not leap year\r\n                    else\r\n                        leap year\r\n                else\r\n                    not leap year \r\n        */\r\n        // boolean variable to indicate whether year is evenly divisible by 4\r\n        var div4 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 100\r\n        var div100 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 400\r\n        var div400 = false;\r\n            \r\n        // sets div4 to true if the year is evenly divisible by 4\r\n        if ((year % 4) === 0) {\r\n            div4 = true;\r\n        }\r\n        // sets div100 to true if the year is evenly divisible by 100\r\n        if ((year % 100) === 0) {\r\n            div100 = true;\r\n        }\r\n        // sets div400 to true is the year is evenly divisible by 400\r\n        if ((year % 400) === 0) {\r\n            div400 = true;\r\n        }\r\n\r\n        if ((div4 && !div100) || (div4 && div100 && div400)) {\r\n            return 29;\r\n        } else {\r\n            return 28;\r\n        }\r\n    }\r\n};\r\n\r\nexport const getFirstWeekDay = (monthNum, year) => {\r\n    console.log(\"----- getFirstWeekDay ----- dateFormat:65\");\r\n    console.log(\"monthNum:\");\r\n    console.log(monthNum);\r\n    console.log(\"year:\");\r\n    console.log(year);\r\n    const firstDay = new Date(year, monthNum, 1);\r\n    // return first day of the month (numbers 0-6)\r\n    return firstDay.getDay();\r\n};\r\n\r\nexport const getDayName = (dayNum) => {\r\n    console.log(\"----- dayNum ----- (client/src/utils/dateFormat:71) -----\");\r\n    console.log(dayNum);\r\n    switch (dayNum) {\r\n        case 0:\r\n            return \"Sunday\";\r\n        case 1:\r\n            return \"Monday\";\r\n        case 2:\r\n            return \"Tuesday\";\r\n        case 3:\r\n            return \"Wednesday\";\r\n        case 4:\r\n            return \"Thursday\";\r\n        case 5:\r\n            return \"Friday\";\r\n        case 6:\r\n            return \"Saturday\";\r\n        default:\r\n            return \"WeekDayErr\";\r\n    }\r\n};\r\n\r\nexport const getMonthName = (monthNum) => {\r\n    //const monthNum = monthNum;\r\n    switch (monthNum) {\r\n        case 0:\r\n            return \"January\";\r\n        case 1:\r\n            return \"February\";\r\n        case 2:\r\n            return \"March\";\r\n        case 3:\r\n            return \"April\";\r\n        case 4:\r\n            return \"May\";\r\n        case 5:\r\n            return \"June\";\r\n        case 6:\r\n            return \"July\";\r\n        case 7:\r\n            return \"August\";\r\n        case 8:\r\n            return \"September\";\r\n        case 9:\r\n            return \"October\";\r\n        case 10:\r\n            return \"November\";\r\n        case 11:\r\n            return \"December\";\r\n        default:\r\n            return \"MonthNameErr\";\r\n    }\r\n}\r\n\r\n\r\nexport const getMonthStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const monthStart = new Date(year, month, 1, 0, 0, 0, 0);\r\n\r\n    return monthStart;\r\n};\r\n\r\nexport const getMonthEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const numDays = getNumDays(month, year);\r\n\r\n    const monthEnd = new Date(year, month, numDays, 23, 59, 59, 999);\r\n\r\n    return monthEnd;\r\n};\r\n\r\nexport const getWeekStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const sundayDate = dateNum - weekDay;\r\n\r\n    const weekStart = new Date(year, month, sundayDate, 0, 0, 0, 0);\r\n\r\n    return weekStart;\r\n};\r\n\r\nexport const getWeekEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const satOffset = 6 - weekDay;\r\n    const saturdayDate = dateNum + satOffset;\r\n\r\n    const weekEnd = new Date(year, month, saturdayDate, 23, 59, 59, 999);\r\n\r\n    return weekEnd;\r\n};\r\n\r\nexport const getDayStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayStart = new Date(year, month, dateNum, 0, 0, 0, 0);\r\n\r\n    return dayStart;\r\n};\r\n\r\nexport const getDayEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayEnd = new Date(year, month, dateNum, 23, 59, 59, 999);\r\n\r\n    return dayEnd;\r\n};\r\n\r\nexport const getNextMonth = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 11) {\r\n        myTime.setFullYear(year++);\r\n        myTime.setMonth(0);\r\n    } else {\r\n        myTime.setMonth(month++);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\nexport const getPrevMonth = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 0) {\r\n        myTime.setFullYear(year--);\r\n        myTime.setMonth(11);\r\n    } else {\r\n        myTime.setMonth(month--);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\nexport const getNextWeek = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const weekMS = daysToMS(7);\r\n\r\n    const nextWeekMS = myTimeMS + weekMS;\r\n    const nextWeek = new Date(nextWeekMS);\r\n\r\n    return nextWeek;\r\n};\r\n\r\nexport const getPrevWeek = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const weekMS = daysToMS(7);\r\n\r\n    const prevWeekMS = myTimeMS - weekMS;\r\n    const prevWeek = new Date(prevWeekMS);\r\n\r\n    return prevWeek;\r\n};\r\n\r\nexport const getNextDay = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const dayMS = daysToMS(1);\r\n\r\n    const nextDayMS = myTimeMS + dayMS;\r\n    const nextDay = new Date(nextDayMS);\r\n\r\n    return nextDay;\r\n};\r\n\r\nexport const getPrevDay = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const dayMS = daysToMS(1);\r\n\r\n    const prevDayMS = myTimeMS + dayMS;\r\n    const prevDay = new Date(prevDayMS);\r\n\r\n    return prevDay;\r\n};","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_ME = gql`\r\n    {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// export const QUERY_EVENTS = gql`\r\n//     query getMyEvents($timeStart: Date!, $timeEnd: Date!) {\r\n//         events {\r\n//             _id\r\n//             eventUser\r\n//             eventDate\r\n//             eventTime\r\n//             eventTitle\r\n//             eventDescription\r\n//         }\r\n//     }\r\n// `;","import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nimport MonthFormat from '../components/MonthFormat';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName, getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFormat';\r\n\r\n// import { QUERY_EVENTS, QUERY_ME } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\n\r\nconst Month = () => {\r\n    const { currTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    // const startTime = getMonthStart(currTime);\r\n    // const endTime = getMonthEnd(currTime);\r\n    let userData = {};\r\n\r\n    if (data) {\r\n        userData = data.me;\r\n    }\r\n\r\n    console.log(\"----- user data: -----\");\r\n    console.log(userData);\r\n    const myEvents = userData.events;\r\n    console.log(\"----- my events: -----\");\r\n    console.log(myEvents);\r\n\r\n    const myDate = new Date(parseInt(currTime));\r\n    let month = myDate.getMonth();\r\n    let year = myDate.getFullYear();\r\n\r\n    const monthEvents = [];\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        if (myEvents[i].eventDate.getMonth() === month && myEvents[i].eventDate.getFullYear() === year) {\r\n            monthEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n     \r\n\r\n    const handleNextMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        const nextMonth = myDate.setMonth(month++);\r\n        const timeParam = nextMonth.getTime();\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n    \r\n\r\n    const handlePrevMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const prevMonth = myDate.setMonth(month--);\r\n        const timeParam = prevMonth.getTime();\r\n\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Button onClick={handlePrevMonthBtn}>Prev Month</Button>\r\n                    <h3>{getMonthName(myDate.getMonth())}</h3>\r\n                    <Button onClick={handleNextMonthBtn}>Next Month</Button>\r\n                </Row>\r\n                <Row>\r\n                    <Month \r\n                        monthNum={myDate.getMonth()}\r\n                        year={myDate.getFullYear()}\r\n                        firstWeekDay={getFirstWeekDay(currTime)}\r\n                        numDays={getNumDays(myDate.getMonth())}\r\n                        events={myEvents}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Month;","import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\n// import { QUERY_ME, QUERY_EVENTS } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport { ADD_EVENT, REMOVE_EVENT } from '../utils/mutations';\r\nimport { getSavedEventIds, saveEventIds, removeEventId } from '../utils/localStorage';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName, getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFormat';\r\nimport DayBox from '../components/DayBox';\r\nimport AddEventForm from '../components/AddEventForm';\r\n\r\nimport Auth from '../utils/auth';\r\nimport events from 'inquirer/lib/utils/events';\r\n\r\nconst MyDay = () => {\r\n    const [ showModal, setShowModal ] = useState(false);\r\n    const { currTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    let myDate = new Date ();\r\n    myDate.setHours(0);\r\n    myDate.setMinutes(0);\r\n    myDate.setSeconds(0);\r\n    myDate.setMilliseconds(0);\r\n\r\n    let myTime = myDate.getTime();\r\n\r\n    if (currTime) {\r\n        console.log(\"----- currTime ----- MyDay.js\");\r\n        console.log(currTime);\r\n\r\n        myDate = new Date(parseInt(currTime));\r\n        console.log(\"----- myDate ----- MyDay.js\");\r\n        console.log(myDate);\r\n    }     \r\n\r\n\r\n    const [addEvent, { error }] = useMutation(ADD_EVENT);\r\n\r\n    let userData = {};\r\n    let myEvents = {};\r\n\r\n\r\n    //const [removeEvent, { error }] = useMutation(REMOVE_EVENT);\r\n    if ( data ) {\r\n        console.log(\"===== user data found =====\");\r\n        userData = data.me;\r\n        console.log(\"----- User Data: -----\");\r\n        console.log(userData);\r\n        myEvents = userData.events;\r\n    } else {\r\n        userData = {};\r\n    }\r\n\r\n    let month = myDate.getMonth();\r\n    console.log(\"----- month ----- MyDay.js\");\r\n    console.log(month);\r\n    let year = myDate.getFullYear();\r\n    console.log(\"----- year ----- MyDay.js\");\r\n    console.log(year);\r\n    let day = myDate.getDate();\r\n    console.log(\"----- day ----- MyDay.js\");\r\n    console.log(day);\r\n    let dayName = getDayName(myDate.getDay());\r\n    console.log(\"----- dayName ----- MyDay.js\");\r\n    console.log(dayName);\r\n    let monthName = getMonthName(month);\r\n    console.log(\"----- monthName ----- MyDay.js\");\r\n    console.log(monthName);\r\n\r\n    let todayEvents = [];\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        const currEventDate = new Date(myEvents[i].eventDate);\r\n\r\n        if (currEventDate.getDate() === day && currEventDate.getMonth() === month && currEventDate.getFullYear() === year) {\r\n            todayEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n\r\n    // const handleDeleteEvent = async (eventId) => {\r\n    //     const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    //     if (!token) {\r\n    //         return false;\r\n    //     }\r\n\r\n    //     try {\r\n    //         const { data } = await removeEvent({\r\n    //             variables: { eventId },\r\n    //         });\r\n\r\n    //         removeEventId(eventId);\r\n    //     } catch (err) {\r\n    //         console.error(err);\r\n    //     }\r\n    // };\r\n\r\n    if (loading) {\r\n        return <h2>LOADING...</h2>;\r\n    }\r\n\r\n    //const currDate = new Date();\r\n    const prevDay = (event) => {\r\n        event.preventDefault();\r\n        console.log('prevDay button clicked');\r\n        myDate.setDate(day--);\r\n        const timeParam = myDate.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    const nextDay = (event) => {\r\n        event.preventDefault();\r\n        console.log('nextDay button clicked');\r\n        myDate.setDate(day++);\r\n        const timeParam = myDate.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    }\r\n\r\n    // return (\r\n    //         <div>\r\n    //             <h1>Get Started with MyTime</h1>\r\n    //             <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n    //                 See MyDay\r\n    //             </Button>\r\n    //         </div>\r\n    // );\r\n\r\n    //was inside container\r\n    /*\r\n<DayBox\r\n                    dayDate={currTime}\r\n                    events={todayEvents}\r\n                    showDescription={false}\r\n                    showDescPreview={true}\r\n                    showEventTime={true}\r\n                />\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            <div fluid className=\"jumbotron text-light bg-dark\">\r\n                <Container>\r\n                    <h1>{userData.firstName}'s Day</h1>\r\n                    <Button className=\"btn btn-lg btn-light m-2\" onClick={prevDay}>{'<'}</Button>\r\n                    <h2>{dayName}, {monthName} {day},{year}</h2>\r\n                    <Button className=\"btn btn-lg btn-light m-2\" onClick={nextDay}>{'>'}</Button>\r\n                </Container>\r\n            </div>\r\n            <Container>\r\n                <Row>\r\n                    <h3> Today's Events </h3>\r\n                </Row>\r\n                <Container className=\"card-body\">\r\n                    {todayEvents && todayEvents.map((event) => (\r\n                        <Row>\r\n                            <p>{event.eventTitle}</p>\r\n                        </Row>\r\n                    ))}\r\n                    <Row>\r\n                        <Button onClick={() => setShowModal(true)}>Add Event</Button>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n            <Modal\r\n                size='lg'\r\n                show={showModal}\r\n                onHide={() => setShowModal(false)}\r\n                aria-labelledby='addEvent-modal'>\r\n                \r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id='addEvent-modal'>\r\n                        New Event\r\n                    </Modal.Title>\r\n                    <AddEventForm\r\n                        eventDate={myTime}\r\n                    />\r\n                </Modal.Header>\r\n            </Modal>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyDay;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Navigate, BrowserRouter as Router, Link } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_MATCHUPS } from '../utils/queries';\r\n\r\nconst GetStarted = () => {\r\n\r\n    const currDate = new Date();\r\n    const currTime = currDate.getTime();\r\n\r\n    const myDayNav = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currTime = new Date();\r\n        const timeParam = currTime.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    // was in space below:\r\n    /*\r\n        {Auth.loggedIn() ? (\r\n                    <Link to={`myDay/${currTime}`}>\r\n                        <button>See MyDay</button>\r\n                    </Link>\r\n                ) : (\r\n\r\n                )}\r\n    */\r\n\r\n    return (\r\n            <div>\r\n                <h1>Get Started with MyTime</h1>\r\n                \r\n                <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n                    See MyDay\r\n                </Button>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default GetStarted;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\nimport AddEventForm from './AddEventForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            MyTime\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              {/* <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link> */}\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to={`myDay/${currTime}`}>MyDay</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myMonth/${currTime}`}>MyMonth</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myWeek/${currTime}`}>MyWeek</Nav.Link>\r\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport Day from './pages/Day';\r\nimport Month from './pages/Month';\r\nimport MyDay from './pages/MyDay';\r\nimport Week from './pages/Week';\r\n//import Home from './components/Home';\r\nimport GetStarted from './components/GetStarted';\r\nimport Navbar from './components/NavBar';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport Auth from './utils/auth';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('id_token');\r\n\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n        },\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n// space used to contain \"<Header />\"\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    \r\n                    <div className=\"container\">\r\n                        <Navbar />\r\n                        <Routes>\r\n                            {Auth.loggedIn() ? (\r\n                                <Route\r\n                                path='/'\r\n                                element={<MyDay />}\r\n                                />\r\n                            ) : (\r\n                                <Route \r\n                                path='/'\r\n                                element={<GetStarted />}\r\n                                />\r\n                            )}\r\n                            <Route\r\n                                path=\"/myMonth/:currTime\"\r\n                                element={<Month />}\r\n                            />\r\n                            <Route  \r\n                                path=\"/myWeek/:currTime\"\r\n                                element={<Week />}\r\n                            />\r\n                            <Route\r\n                                path=\"/myDay/:currTime\"\r\n                                element={<MyDay />}\r\n                            />\r\n                        </Routes>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\r\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_EVENT = gql`\r\n    mutation addEvent($eventUser: String!, $eventDate: String!, $eventTime: String!, $eventTitle: String!, $eventDescription: String!) {\r\n        addEvent(eventUser: $eventUser, eventDate: $eventDate, eventTime: $eventTime, eventDescription: $eventDescription) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nexport const REMOVE_EVENT = gql`\r\n    mutation removeEvent($eventId: ID!) {\r\n        removeEvent(eventId: $eventId) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;"],"sourceRoot":""}