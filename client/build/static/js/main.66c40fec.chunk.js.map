{"version":3,"sources":["utils/queries.js","components/AddEventForm/index.js","utils/dateFormat.js","utils/dateFunctions.js","utils/auth.js","components/DayBox/index.js","components/Week/index.js","components/MonthFormat/index.js","pages/MyMonth.js","pages/MyDay.js","components/GetStarted/index.js","components/SignupForm/index.js","components/LoginForm/index.js","components/NavBar/index.js","components/Footer/index.js","App.js","index.js","utils/mutations.js"],"names":["QUERY_ME","gql","_templateObject","Object","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","exports","Op","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","then","unwrapped","error","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","AddEventForm","_ref","eventDate","_useQuery","useQuery","data","loading","console","log","_useState","useState","eventUser","eventTitle","eventDescription","_useState2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","eventFormData","setEventFormData","me","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_4__","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","username","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","_useMutation","useMutation","ADD_EVENT","_useMutation2","addEvent","useEffect","handleInputChange","event","_event$target","target","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","handleFormSubmit","_ref2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_callee","_yield$addEvent","_data","_context","preventDefault","currentTarget","checkValidity","stopPropagation","variables","eventData","t0","_x","apply","arguments","myDate","Date","parseInt","monthNum","getMonth","dateNum","getDate","yearNum","getFullYear","getTime","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","Fragment","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","noValidate","onSubmit","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","dismissible","onClose","show","variant","Text","Group","Label","htmlFor","Control","placeholder","onChange","e","setImmediate","required","Feedback","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","getNumDays","year","includes","div4","div100","div400","getDayName","dayNum","getMonthName","getMonthEnd","timestamp","myTime","month","numDays","getWeekStart","weekDay","getDay","getWeekEnd","getDayStart","getDayEnd","getNextMonth","nextMonth","getPrevMonth","prevMonth","getNextWeek","getNextDay","auth","AuthService","classCallCheck","createClass","decode","getToken","token","isTokenExpired","exp","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","DayBox","dayDate","events","_ref$showDescPreview","showDescPreview","react_default","Col","Container","className","map","Row","substring","Week","days","_ref$monthView","monthView","day","components_DayBox","MonthFormat","firstWeekDay","monthDays","monthWeeks","j","dayEvents","dayTime","dayStart","dayEnd","x","eventTime","daySq","currLength","fillSpace","k","numWeeks","firstDay","monthEndTime","endFirstWeek","firstWeek","w","q","weekDays","weekStart","weekEnd","f","lastWeekDays","startLastWeek","week","components_Week","MyMonth","currTime","useParams","setHours","setMinutes","setSeconds","setMilliseconds","userData","myEvents","getFirstWeekDay","monthName","monthStart","getMonthStart","monthEnd","monthEvents","currEventDate","currEventDateMS","fluid","firstName","dist","to","concat","components_MonthFormat","MyDay","slicedToArray","showModal","setShowModal","dayName","todayEvents","Button","onClick","Modal","size","onHide","aria-labelledby","Header","closeButton","Title","id","GetStarted","timeParam","react_router_dist","SignupForm","lastName","email","password","userFormData","setUserFormData","ADD_USER","addUser","objectSpread","asyncToGenerator","_yield$addUser","Auth","login","Form","Alert","onCLose","disabled","LoginForm_regeneratorRuntime","LoginForm","LOGIN_USER","_yield$login","NavBar","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","loggedIn","logout","Tab","defaultActiveKey","Item","eventKey","Body","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","Footer","useLocation","navigate","useNavigate","pathname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","components_NavBar","path","element","pages_MyDay","components_GetStarted","pages_MyMonth","MyWeek_default","components_Footer","ReactDOM","render","StrictMode","src_App","document","getElementById","_templateObject2","_templateObject3","_templateObject4"],"mappings":"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","file":"static/js/main.66c40fec.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\n\nexport const QUERY_ME = gql`\n    {\n        me {\n            _id\n            username\n            email\n            events {\n                eventId\n                eventUser\n                eventDate\n                eventTitle\n                eventDescription\n            }\n        }\n    }\n`;\n\n// export const QUERY_EVENTS = gql`\n//     query getMyEvents($timeStart: Date!, $timeEnd: Date!) {\n//         events {\n//             _id\n//             eventUser\n//             eventDate\n//             eventTitle\n//             eventDescription\n//         }\n//     }\n// `;","import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { ADD_EVENT } from '../../utils/mutations';\nimport { QUERY_ME } from '../../utils/queries';\n\nconst AddEventForm = ({\n  eventDate,\n}) => {\n  const { loading, data } = useQuery(QUERY_ME);\n  const userData = {};\n\n  console.log('----- Event Date: ----- AddEventForm');\n  console.log(eventDate);\n\n  const [eventFormData, setEventFormData] = useState({ eventUser: '', eventDate: eventDate, eventTitle: '', eventDescription: ''});\n\n  if (data) {\n    console.log('AddEventForm ----- line 20');\n    userData = data.me;\n    setEventFormData({ ...eventFormData, eventUser: userData.username });\n  } \n  // if (eventDate) {\n  //   console.log('AddEventForm ----- line 25');\n  //   setEventFormData({ ...eventFormData, eventDate: eventDate });\n  // }\n\n  const [validated] = useState(false);\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addEvent, { error }] = useMutation(ADD_EVENT);\n\n  // const [addEvent, { error }] = useMutation(ADD_EVENT, {\n  //   update(cache, { data: { addEvent } }) {\n  //     try {\n  //       const { events } = cache.readQuery({ query: QUERY_ME});\n  //     } catch (err) {\n  //       console.error(err);\n  //     }\n  //   }\n  // });\n\n  useEffect(() => {\n    if (error) {\n      console.log('AddEventForm ----- line 37');\n      setShowAlert(true);\n    } else {\n      console.log('AddEventForm ----- line 40');\n      setShowAlert(false);\n    }\n  }, [error])\n\n  const handleInputChange = (event) => {\n    console.log('handleInputChange called ----- AddEventForm');\n    const { name, value } = event.target;\n    setEventFormData({ ...eventFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n    console.log('handleFormSubmit called ----- AddEventForm');\n\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      console.log('checkValidity = false ----- AddEventForm');\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const {data} = await addEvent({\n        variables: { eventData: { ...eventFormData } },\n      });\n      console.log('----- data to be added: ----- AddEventForm');\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setEventFormData({\n      eventDate: '',\n      eventTitle: '',\n      eventDescription: '',\n    });\n  };\n\n  let myDate = new Date (parseInt(eventDate));\n  let monthNum = myDate.getMonth() + 1;\n  let dateNum = myDate.getDate();\n  let yearNum = myDate.getFullYear();\n  let myTime = myDate.getTime();\n\n  console.log('AddEventForm ----- line 84');\n\n\n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setEventFormData({ ... eventFormData, [name]: value });\n  // };\n\n  // const handleFormSubmit = async (event) => {\n  //   event.preventDefault();\n\n  //   const form = event.currentTarget;\n\n  //   if (form.checkValidity() === false) {\n  //     event.preventDefault();\n  //     event.stopPropagation(); \n  //   }\n\n  //   try {\n  //     const {data} = await addEvent({\n  //       variables: { \n  //         eventUser: eventFormData.eventUser,\n  //         eventDate: myTime,\n  //         eventTitle: eventFormData.eventTitle,\n  //         eventDescription: eventFormData.eventDescription,\n  //        },\n  //     });\n  //     console.log(data);\n  //   } catch (err) {\n  //     console.error(err);\n  //     setShowAlert(true);\n  //   }\n\n  //   if (eventDate) {\n  //     setEventFormData({\n  //       eventUser: userData.username,\n  //       eventDate: myDate,\n  //       eventTitle: '',\n  //       eventDescription: '',\n  //     });\n  //   } else {\n  //     setEventFormData({\n  //       eventUser: userData.username,\n  //       eventDate: '',\n  //       eventTitle: '',\n  //       eventDescription: '',\n  //     });\n  //   }\n  // };\n\n  return (\n    <>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong adding your event\n        </Alert>\n\n        {eventDate ? (\n          <Form.Text>\n            <h3>Event Date</h3>\n            <p>{monthNum}/{dateNum}/{yearNum}</p>\n          </Form.Text>\n        ) : (\n          <Form.Group>\n            <Form.Label htmlFor='eventDate'>Event Date</Form.Label>\n            <Form.Control\n              type='date'\n              placeholder='date'\n              name='eventDate'\n              onChange={(e) => setImmediate(e.target.value)}\n              value={eventFormData.eventDate}\n            />\n          </Form.Group>\n        )}\n\n        <Form.Group>\n          <Form.Label htmlFor='eventTitle'>Title</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Title'\n            name='eventTitle'\n            value={eventFormData.eventTitle}\n            onChange={handleInputChange}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Title is required</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='eventDescription'>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Description'\n            name='eventDescription'\n            onChange={handleInputChange}\n            value={eventFormData.eventDescription}\n          />\n        </Form.Group>\n        <Button\n          type='submit'\n          variant='success'>\n            Add Event\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default AddEventForm;","// returns the number of days in the month, if the month is february, checks to see if it is a leap year\nexport const getNumDays = (monthNum, year) => {\n    // if the month number is 1, 3, 5, 7, 8, 10, 12 (jan, mar, may, jul, aug, oct, dec), the month has 31 days\n    if ([1,3,5,7,8,10,12].includes(monthNum)) {\n        return 31;\n    }\n    // if the month number is 4, 6, 9, 11 (apr, june, sept, nov), the month has 30 days\n    if ([4,6,9,11].includes(monthNum)) {\n        return 30;\n    }\n    // if the month number is 2 (february)\n    if (monthNum === 2) {\n        // check if year is a leap year\n        /*\n            rules:\n                years divisible by 400 ARE leap years\n                years divisible by 100 but not by 400 are NOT leap years\n                years divisible by 4 but not by 100 ARE leap years\n                years not divisible by 4 are NOT leap years \n\n                if year divisible by 4 ((year % 4) == 0) \n                    if year divisible by 100 ((year % 100) == 0)\n                        if year divisible by 400 ((year % 400) == 0)\n                            leap year\n                        else\n                            not leap year\n                    else\n                        leap year\n                else\n                    not leap year \n        */\n        // boolean variable to indicate whether year is evenly divisible by 4\n        var div4 = false;\n        // boolean variable to indicate whether year is evenly divisible by 100\n        var div100 = false;\n        // boolean variable to indicate whether year is evenly divisible by 400\n        var div400 = false;\n            \n        // sets div4 to true if the year is evenly divisible by 4\n        if ((year % 4) === 0) {\n            div4 = true;\n        }\n        // sets div100 to true if the year is evenly divisible by 100\n        if ((year % 100) === 0) {\n            div100 = true;\n        }\n        // sets div400 to true is the year is evenly divisible by 400\n        if ((year % 400) === 0) {\n            div400 = true;\n        }\n\n        if ((div4 && !div100) || (div4 && div100 && div400)) {\n            return 29;\n        } else {\n            return 28;\n        }\n    }\n};\n\n// given a month and year, determines the day of the week the firs tof the month falls on and returns the integer\nexport const getFirstWeekDay = (monthNum, year) => {\n    console.log(\"----- getFirstWeekDay ----- dateFormat:65\");\n    console.log(\"monthNum:\");\n    console.log(monthNum);\n    console.log(\"year:\");\n    console.log(year);\n    const firstDay = new Date(year, monthNum, 1);\n    // return first day of the month (numbers 0-6)\n    return firstDay.getDay();\n};\n\n// given the number of the day of the week, determines and returns the name of the day\nexport const getDayName = (dayNum) => {\n    console.log(\"----- dayNum ----- (client/src/utils/dateFormat:71) -----\");\n    console.log(dayNum);\n    switch (dayNum) {\n        case 0:\n            return \"Sunday\";\n        case 1:\n            return \"Monday\";\n        case 2:\n            return \"Tuesday\";\n        case 3:\n            return \"Wednesday\";\n        case 4:\n            return \"Thursday\";\n        case 5:\n            return \"Friday\";\n        case 6:\n            return \"Saturday\";\n        default:\n            return \"WeekDayErr\";\n    }\n};\n\n// given the number of the month, determines and returns the name of the month\nexport const getMonthName = (monthNum) => {\n    //const monthNum = monthNum;\n    switch (monthNum) {\n        case 0:\n            return \"January\";\n        case 1:\n            return \"February\";\n        case 2:\n            return \"March\";\n        case 3:\n            return \"April\";\n        case 4:\n            return \"May\";\n        case 5:\n            return \"June\";\n        case 6:\n            return \"July\";\n        case 7:\n            return \"August\";\n        case 8:\n            return \"September\";\n        case 9:\n            return \"October\";\n        case 10:\n            return \"November\";\n        case 11:\n            return \"December\";\n        default:\n            return \"MonthNameErr\";\n    }\n};\n\n","import { getNumDays } from './dateFormat';\n\n// number of milliseconds in one day\nconst MS_PER_DAY = 86400000;\n\n// given a date (in milliseconds), determines the start of the month and returns the date in milliseconds\nexport const getMonthStart = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let month = myTime.getMonth();\n    let year = myTime.getFullYear();\n    \n    const monthStart = new Date(year, month, 1, 0, 0, 0, 0);\n    const monthStartMS = monthStart.getTime();\n\n    return monthStartMS;\n};\n\n// given the date (in milliseconds), determines the last millisecond of the month and returns\nexport const getMonthEnd = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let month = myTime.getMonth();\n    let year = myTime.getFullYear();\n    \n    const numDays = getNumDays(month, year);\n\n    const monthEnd = new Date(year, month, numDays, 23, 59, 59, 999);\n\n    return monthEnd;\n};\n\n// given the date (in milliseconds), determines the first millisecond of the week and returns\nexport const getWeekStart = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let year = myTime.getFullYear();\n    let month = myTime.getMonth();\n    const dateNum = myTime.getDate();\n\n    const weekDay = myTime.getDay();\n    const sundayDate = dateNum - weekDay;\n\n    const weekStart = new Date(year, month, sundayDate, 0, 0, 0, 0);\n\n    return weekStart;\n};\n\n// given the date (in milliseconds), determines the last millisecond of the week and returns\nexport const getWeekEnd = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let year = myTime.getFullYear();\n    let month = myTime.getMonth();\n    const dateNum = myTime.getDate();\n\n    const weekDay = myTime.getDay();\n    const satOffset = 6 - weekDay;\n    const saturdayDate = dateNum + satOffset;\n\n    const weekEnd = new Date(year, month, saturdayDate, 23, 59, 59, 999);\n\n    return weekEnd;\n};\n\n// given the date (in milliseconds), determines and returns the first millisecond of the day\nexport const getDayStart = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let year = myTime.getFullYear();\n    let month = myTime.getMonth();\n    const dateNum = myTime.getDate();\n\n    const dayStart = new Date(year, month, dateNum, 0, 0, 0, 0);\n\n    return dayStart;\n};\n\n// given the date (in milliseconds), determines and returns the last millisecond of the day\nexport const getDayEnd = (timestamp) => {\n    const myTime = new Date(parseInt(timestamp));\n\n    let year = myTime.getFullYear();\n    let month = myTime.getMonth();\n    const dateNum = myTime.getDate();\n\n    const dayEnd = new Date(year, month, dateNum, 23, 59, 59, 999);\n\n    return dayEnd;\n};\n\n// given the date (in milliseconds), determines the current date, sets date to next month, returns new date in milliseconds\nexport const getNextMonth = (timestamp) => {\n    console.log('===== getNextMonth called ===== dateFunctions/getNextMonth');\n    const myTime = new Date(parseInt(timestamp));\n    console.log('----- currTime ----- dateFunctions/getNextMonth');\n\n    let year = parseInt(myTime.getFullYear());\n    let month = parseInt(myTime.getMonth());\n    console.log('----- year ----- dateFunctions/getNextMonth');\n    console.log(year);\n    console.log('----- month ----- dateFunctions/getNextMonth');\n    console.log(month);\n\n    if (month === 11) {\n        year++;\n        month = 0;\n    } else {\n        month++;\n    }\n\n    const nextMonth = new Date (year, month, 0);\n    console.log('----- next month ----- dateFunctions/getNextMonth');\n    console.log(nextMonth);\n    const nextMonthMS = nextMonth.getTime();\n\n    return nextMonthMS;\n};\n\n// given the date (in milliseconds), determines the current date, sets date to previous month, returns new date in milliseconds\nexport const getPrevMonth = (timestamp) => {\n    console.log('===== getPrevMonth called ===== dateFunctions/getPrevMonth');\n    const myTime = new Date(parseInt(timestamp));\n    console.log('----- currTime ----- dateFunctions/getPrevMonth');\n    console.log(myTime);\n\n    let year = parseInt(myTime.getFullYear());\n    let month = parseInt(myTime.getMonth());\n    console.log('----- year ----- dateFunctions/getPrevMonth');\n    console.log(year);\n    console.log('----- month ----- dateFunctions/getPrevMonth');\n\n    if (month === 0) {\n        year--;\n        month = 11;\n    } else {\n        month--;\n    }\n\n    const prevMonth = new Date(year, month, 0);\n    console.log('----- previous month ----- dateFunction/getPrevMonth');\n    const prevMonthMS = prevMonth.getTime();\n\n    return prevMonthMS;\n};\n\n// given the date (in milliseconds), adds 7 days (in milliseconds) to change the date to the following week, returns new date in milliseconds\nexport const getNextWeek = (timestamp) => {\n\n    const nextWeekMS = parseInt(timestamp) + (7 * MS_PER_DAY);\n    \n    return nextWeekMS;\n};\n\n// given the date (in milliseconds), subtracts 7 days (in milliseconds) to change the date ot the previous week, returns new date in milliseconds\nexport const getPrevWeek = (timestamp) => {\n    \n    const prevWeekMS = parseInt(timestamp) - (7 * MS_PER_DAY);\n\n    return prevWeekMS;\n};\n\n// given the date (in milliseconds), adds 24 hours (in milliseconds) to change the date to the next day, returns new date in milliseconds\nexport const getNextDay = (timestamp) => {\n    \n    const nextDayMS = parseInt(timestamp) + (MS_PER_DAY);\n\n    return nextDayMS;\n};\n\n// given the date (in milliseconds), subtracts 24 hours (in milliseconds) to change the date to the previous day, returns new date in milliseconds\nexport const getPrevDay = (timestamp) => {\n    \n    const prevDayMS = parseInt(timestamp) - (MS_PER_DAY);\n\n    return prevDayMS;\n};","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.getTime() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport events from 'inquirer/lib/utils/events';\n\nconst DayBox = ({\n    dayDate, \n    events,\n    showDescPreview = true,\n}) => {\n    if (dayDate.getDate() === 0) {\n        return (\n            <Col></Col>\n        );\n    }\n\n    return (\n        <Container className='card'>\n            <div className='card-header'>\n                {dayDate}\n            </div>\n            {showDescPreview ? (\n                <div className='card-body'>\n                    {events && events.map((event) => (\n                        <Row>\n                            <Row>\n                                {event.eventTitle}\n                            </Row>\n                            <Row>\n                                {((event.eventDescription.length) > 50) ? (\n                                    <Row>{(event.eventDescription).substring(0,49)}...</Row>\n                                ) : (\n                                    <Row>{(event.eventDescription)}</Row>\n                                )}\n                            </Row>\n                        </Row>\n                    ))}\n                </div>    \n            ) : (\n                <div className='card-body'>\n                    {events && events.map((event) => (\n                        <Row>\n                            {event.eventTitle}\n                        </Row>\n                    ))}\n                </div>  \n            )}\n        </Container>\n    );\n\n    // return (\n    //     <Link to={`/days/${dayDate}`}>\n    //         <Col key={dayDate.getTime()}>\n    //             <div className=\"card\">\n    //                 <h4 className=\"card-header bg-primary\">\n    //                     {dayDate.getDate()}\n    //                 </h4>\n    //                 {events && events.map((event) => (\n    //                     <Container className=\"card-body\">\n    //                         <Row>\n    //                             <p>{event.eventTitle}</p>\n    //                         </Row>\n    //                     </Container>\n    //                 ))}\n    //             </div>\n    //         </Col>\n    //     </Link>\n    // );\n};\n\nexport default DayBox;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport events from 'inquirer/lib/utils/events';\nimport DayBox from '../DayBox';\n\nconst Week = ({\n    days, \n    monthView = true,\n}) => {\n\n\n    return (\n        <Container>\n            {monthView ? (\n                <Row>\n                    <Col>Week</Col>\n                    {days && days.map((day) => (\n                        <Col>\n                            <DayBox \n                                dayDate={day.dayDate}\n                                events={day.events}\n                                showDescPreview={false} />\n                        </Col>\n                    ))}\n                </Row>\n            ) : (\n                <Row>\n                    {days && days.map((day) => (\n                        <Col>\n                            <DayBox\n                                dayDate={day.dayDate}\n                                events={day.events}\n                                showDescPreview={true} />\n                        </Col>\n                    ))}\n                </Row>\n            )}\n                \n        </Container>\n    );\n\n    // return (\n    //     <div>\n    //         {monthView ? (\n    //             <Row>\n    //                 <Link to={`/myWeek/${weekStart}`}>\n    //                     <Col>week</Col>\n    //                 </Link>\n    //                 {days && days.map((day) => (\n    //                     <DayBox\n    //                         dayDate={day.dayDate}\n    //                         events={day.events}\n\n    //                         showDescPreview={false}\n    //                     />\n    //                 ))}\n    //             </Row>\n    //         ) : (\n    //             <Row>\n    //                 {days && days.map((day) => (\n    //                     <DayBox\n    //                         dayDate={day.dayDate}\n    //                         events={day.events}\n    //                         showDescPreview={true}\n    //                     />\n    //                 ))}\n    //             </Row>\n    //         )}   \n    //     </div>          \n    // );\n};\n\nexport default Week;","import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_EVENT } from '../../utils/mutations';\n\nimport { Container, Row, Col, Modal } from 'react-bootstrap';\n\nimport Auth from '../../utils/auth';\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../../utils/dateFormat';\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../../utils/dateFunctions';\nimport events from 'inquirer/lib/utils/events';\nimport Week from '../Week';\n//import AddEventForm from '../AddEventForm';\n\n\nconst MonthFormat = ({\n    monthNum,\n    year,\n    firstWeekDay,\n    numDays,\n    events,\n}) => {\n    //const [showModal, setShowModal] = useState(false);\n\n    const monthDays = [];\n    const dayOffset = firstWeekDay;\n    const monthWeeks = [];\n\n    // adds empty days to at front of month so every week is full\n    for (var i = 0; i < firstWeekDay; i++) {\n        const notDay = {\n            dayDate: 0,\n            events: [],\n        };\n        monthDays.push(notDay);\n    }\n\n    // adds a day object for each day of the month, assigns the date of each box, looks for events within the day's time window, \n    // and adds the events to the object's events array\n    for (var j = 0; j < numDays; j++) {\n        const dayEvents = [];\n        const dayTime = parseInt((new Date(year, monthNum, j)).getTime());\n        const dayStart = getDayStart(dayTime);\n        const dayEnd = getDayEnd(dayTime);\n        for (let x = 0; x < events.length; x++) {\n            const eventTime = parseInt(events[x].eventDate);\n            if (eventTime >= dayStart && eventTime <= dayEnd) {\n                dayEvents.push(events[x]);\n            }\n        }\n        const daySq = {\n            dayDate: dayTime,\n            events: dayEvents,\n        };\n        monthDays.push(daySq);\n    }\n\n    // adds empty days to end of month so array length is divisible by 7, so each week is 7 days\n    if (((monthDays.length) % 7) !== 0) {\n        const currLength = monthDays.length;\n        const fullWeeks = currLength % 7;\n        const leftOver = currLength - (fullWeeks * 7);\n        const fillSpace = 7 - leftOver;\n\n        for (var k = 0; k < fillSpace; k++) {\n            const notDay = {\n                dayDate: 0,\n                events: [],\n            };\n            monthDays.push(notDay);\n        }\n    }\n\n    const numWeeks = monthDays.length / 7;\n    const firstDay = new Date(year, monthNum, 0);\n    const monthEndTime = parseInt(getMonthEnd(firstDay.getTime()));\n    const endFirstWeek = parseInt(getWeekEnd(parseInt(firstDay.getTime())));\n    \n    let firstWeek = [];\n    for (let w = 0; w < monthDays.length; w++) {\n        if (parseInt(monthDays[w].dayDate) < endFirstWeek) {\n            firstWeek.push(monthDays[w]);\n        }\n    }\n    monthWeeks.push(firstWeek);\n\n    let weekDay = new Date(parseInt(getNextWeek(firstDay.getTime())));\n\n    for (let q = 1; q < numWeeks - 1; q++) {\n        let weekDays = [];\n        let weekStart = parseInt(getWeekStart(weekDay.getTime()));\n        let weekEnd = parseInt(getWeekEnd(weekDay.getTime()));\n\n        for (let f = 0; f < monthDays.length; f++) {\n            if (parseInt(monthDays[f].dayDate) >= weekStart && parseInt(monthDays[f].dayDate) <= weekEnd) {\n                weekDays.push(monthDays[f]);\n            }\n        }\n\n        monthWeeks.push(weekDays);\n\n        weekDay = new Date(parseInt(getNextWeek(weekDay.getTime())));\n    }\n\n    let lastWeekDays = [];\n    for (let a = 0; a < monthDays.length; a++) {\n        \n        const startLastWeek = parseInt(getWeekStart(weekDay.getTime()));\n        \n        if ((parseInt(monthDays[a].dayDate) >= startLastWeek && parseInt(monthDays[a].dayDate) <= monthEndTime) || (parseInt(monthDays[a].dayDate)) === 0) {\n            lastWeekDays.push(monthDays[a]);\n        }\n    }\n    monthWeeks.push(lastWeekDays);\n\n    // // adds each event\n    // for (var p = 0; p < events; p++) {\n    //     if (events[p].eventDate !== 0 && events[p].eventDate.getMonth() === monthNum) {\n    //         monthDays[dayOffset + events[p].eventDate.getDate()].events.push(events[p]);\n    //     }\n    // }\n\n\n    return (\n        <div>\n            <Container>\n                <Row>\n                    <Col>Week</Col>\n                    <Col>Sunday</Col>\n                    <Col>Monday</Col>\n                    <Col>Tuesday</Col>\n                    <Col>Wednesday</Col>\n                    <Col>Thursday</Col>\n                    <Col>Friday</Col>\n                    <Col>Saturday</Col>\n                </Row>\n                {monthWeeks && monthWeeks.map((week) => (\n                    <Row>\n                        <Week\n                            days={week.days}\n                            monthView={true}\n                        />\n                    </Row>\n                ))}\n            </Container>\n        </div>\n    );\n};\n\nexport default MonthFormat;","import React, { useState } from 'react';\nimport { Navigate, useParams, Link } from 'react-router-dom';\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ME } from '../utils/queries';\nimport { ADD_EVENT } from '../utils/mutations';\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\nimport AddEventForm from '../components/AddEventForm';\nimport MonthFormat from '../components/MonthFormat';\n\nconst MyMonth = () => {\n    //const [ showModal, setShowModal ] = useState(false);\n    console.log('myMonth page called');\n    const { currTime } = useParams();\n    const {loading, data } = useQuery(QUERY_ME);\n\n    // const [addEvent, { error }] = useMutation(ADD_EVENT);\n\n    let myDate = new Date ();\n    if (currTime) {\n        console.log('----- currTime found ----- MyMonth');\n        console.log(currTime);\n        myDate = new Date (parseInt(currTime));\n        myDate.setHours(0);\n        myDate.setMinutes(0);\n        myDate.setSeconds(0);\n        myDate.setMilliseconds(0);\n    }\n    \n    let myTime = myDate.getTime();\n\n    let userData = {};\n    let myEvents = {};\n\n    if (data) {\n        console.log('user data found');\n        userData = data.me;\n        console.log(userData);\n        myEvents = userData.events;\n        console.log('user events');\n        console.log(myEvents);\n    } \n\n    let monthNum = myDate.getMonth();\n    let yearNum = myDate.getFullYear();\n    let firstWeekDay = getFirstWeekDay(monthNum, yearNum);\n    let numDays = getNumDays(monthNum, yearNum);\n    let dateNum = myDate.getDate();\n    let dayName = getDayName(myDate.getDay());\n    let monthName = getMonthName(monthNum);\n\n    let monthStart = parseInt(getMonthStart(currTime));\n    let monthEnd = parseInt(getMonthEnd(currTime));\n\n    let monthEvents = [];\n\n    for (let i = 0; i < myEvents; i++) {\n        console.log('----- adding events ----- MyMonth');\n        const currEventDate = new Date(parseInt(myEvents[i].eventDate));\n        const currEventDateMS = parseInt(currEventDate.getTime());\n\n        if (currEventDateMS >= monthStart && currEventDateMS <= monthEnd) {\n            console.log('----- event matching time frame ----- MyMonth');\n            monthEvents.push(myEvents[i]);\n        }\n    }\n\n    if (loading) {\n        return <h2>LOADING...</h2>;\n    }\n\n    // const prevDay = (event) => {\n    //     event.preventDefault();\n    //     console.log(myDate);\n    //     console.log('prevDay button clicked');\n    //     myDate.setDate(dateNum--);\n    //     console.log(myDate);\n    //     const timeParam = myDate.getTime();\n    //     return <Navigate to={`/myDay/${timeParam}`} />;\n    // };\n\n    // const nextDay = (event) => {\n    //     event.preventDefault();\n    //     console.log(myDate);\n    //     console.log('nextDay button clicked');\n    //     myDate.setDate(dateNum++);\n    //     console.log(myDate);\n    //     const timeParam = myDate.getTime();\n    //     return <Navigate to={`/myDate/${timeParam}`} />;\n    // };\n\n    return (\n        <div>\n            <div fluid className=\"jumbotron text-light bg-dark\">\n                <Container>\n                    <Row>\n                        <h1>{userData.firstName}'s Day</h1>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Link to={`/myMonth/${getPrevMonth(monthStart)}`}>{'<'}</Link>\n                        </Col>\n                        <Col><h2>{monthName} {yearNum}</h2></Col>\n                        <Col>\n                            <Link to={`/myMonth/${getNextMonth(monthStart)}`}>{'>'}</Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <Container>\n                <MonthFormat\n                    monthNum={monthNum}\n                    year={yearNum}\n                    firstWeekDay={firstWeekDay}\n                    numDays={numDays}\n                    events={monthEvents}\n                />\n            </Container>\n        </div>\n    );\n};\n\nexport default MyMonth;\n","import React, { useState } from 'react';\nimport { Navigate, useParams, Link } from 'react-router-dom';\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\nimport { useQuery, useMutation } from '@apollo/client';\nimport { QUERY_ME } from '../utils/queries';\nimport { ADD_EVENT } from '../utils/mutations';\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\nimport AddEventForm from '../components/AddEventForm';\n\nconst MyDay = () => {\n    const [ showModal, setShowModal ] = useState(false);\n    const { currTime } = useParams();\n    const {loading, data } = useQuery(QUERY_ME);\n\n    // const [addEvent, { error }] = useMutation(ADD_EVENT);\n\n    let myDate = new Date ();\n    if (currTime) {\n        myDate = new Date (parseInt(currTime));\n    }\n    myDate.setHours(0);\n    myDate.setMinutes(0);\n    myDate.setSeconds(0);\n    myDate.setMilliseconds(0);\n\n    let myTime = myDate.getTime();\n\n    let userData = {};\n    let myEvents = {};\n\n    if (data) {\n        console.log('user data found');\n        userData = data.me;\n        console.log(userData);\n        myEvents = userData.events;\n        console.log('user events');\n        console.log(myEvents);\n    } \n\n    let monthNum = myDate.getMonth();\n    let yearNum = myDate.getFullYear();\n    let dateNum = myDate.getDate();\n    let dayName = getDayName(myDate.getDay());\n    let monthName = getMonthName(monthNum);\n\n    let todayEvents = [];\n\n    for (let i = 0; i < myEvents; i++) {\n        const currEventDate = new Date(parseInt(myEvents[i].eventDate));\n\n        if (currEventDate.getDate() === dateNum && currEventDate.getMonth() === monthNum && currEventDate.getFullYear() === yearNum) {\n            todayEvents.push(myEvents[i]);\n        }\n    }\n\n    if (loading) {\n        return <h2>LOADING...</h2>;\n    }\n\n    // const prevDay = (event) => {\n    //     event.preventDefault();\n    //     console.log(myDate);\n    //     console.log('prevDay button clicked');\n    //     myDate.setDate(dateNum--);\n    //     console.log(myDate);\n    //     const timeParam = myDate.getTime();\n    //     return <Navigate to={`/myDay/${timeParam}`} />;\n    // };\n\n    // const nextDay = (event) => {\n    //     event.preventDefault();\n    //     console.log(myDate);\n    //     console.log('nextDay button clicked');\n    //     myDate.setDate(dateNum++);\n    //     console.log(myDate);\n    //     const timeParam = myDate.getTime();\n    //     return <Navigate to={`/myDate/${timeParam}`} />;\n    // };\n\n    return (\n        <div>\n            <div fluid className=\"jumbotron text-light bg-dark\">\n                <Container>\n                    <Row>\n                        <h1>{userData.firstName}'s Day</h1>\n                    </Row>\n                    <Row>\n                        <Col>\n                            <Link to={`/myDay/${getPrevDay(myDate.getTime())}`}>{'<'}</Link>\n                        </Col>\n                        <Col><h2>{dayName}, {monthName} {dateNum}, {yearNum}</h2></Col>\n                        <Col>\n                            <Link to={`/myDay/${getNextDay(myDate.getTime())}`}>{'>'}</Link>\n                        </Col>\n                    </Row>\n                </Container>\n            </div>\n            <Container className=\"card\">\n                <Container className=\"card-header\">\n                    <h3>Today's Events</h3>\n                </Container>\n                <Container className=\"card-body\">\n                    {todayEvents && todayEvents.map((event) => (\n                        <Row>\n                            <p>{event.eventTitle}</p>\n                        </Row>\n                    ))}\n                    <Row>\n                        <Button onClick={() => setShowModal(true)}>Add Event</Button>\n                    </Row>\n                </Container>\n            </Container>\n            <Modal\n                size='lg'\n                show={showModal}\n                onHide={() => setShowModal(false)}\n                aria-labelledby='addEvent-modal'>\n\n                <Modal.Header closeButton>\n                    <Modal.Title id='addEvent-modal'>\n                        New Event\n                    </Modal.Title>\n                    <AddEventForm\n                        eventDate={myTime}\n                    />\n                </Modal.Header>\n            </Modal>\n        </div>\n    );\n};\n\nexport default MyDay;\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Navigate, BrowserRouter as Router, Link } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_MATCHUPS } from '../utils/queries';\r\n\r\nconst GetStarted = () => {\r\n\r\n    const currDate = new Date();\r\n    const currTime = currDate.getTime();\r\n\r\n    const myDayNav = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currTime = new Date();\r\n        const timeParam = currTime.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    // was in space below:\r\n    /*\r\n        {Auth.loggedIn() ? (\r\n                    <Link to={`myDay/${currTime}`}>\r\n                        <button>See MyDay</button>\r\n                    </Link>\r\n                ) : (\r\n\r\n                )}\r\n    */\r\n\r\n    return (\r\n            <div>\r\n                <h1>Get Started with MyTime</h1>\r\n                \r\n                <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n                    See MyDay\r\n                </Button>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default GetStarted;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\nimport SignUpForm from '../SignupForm';\nimport LoginForm from '../LoginForm';\n//import AddEventForm from './AddEventForm';\n\nimport Auth from '../../utils/auth';\n\nconst currDate = new Date();\nconst currTime = currDate.getTime();\n\nconst NavBar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            MyTime\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              {/* <Nav.Link as={Link} to='/'>\n                Search For Books\n              </Nav.Link> */}\n              {/* if user is logged in show saved books and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to={`myDay/${currTime}`}>MyDay</Nav.Link>\n                  <Nav.Link as={Link} to={`myMonth/${currTime}`}>MyMonth</Nav.Link>\n                  <Nav.Link as={Link} to={`myWeek/${currTime}`}>MyWeek</Nav.Link>\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\nimport MyMonth from './pages/MyMonth';\nimport MyDay from './pages/MyDay';\nimport Week from './pages/MyWeek';\n//import Home from './components/Home';\nimport GetStarted from './components/GetStarted';\nimport Navbar from './components/NavBar';\nimport { setContext } from '@apollo/client/link/context';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nimport Auth from './utils/auth';\n\nconst httpLink = createHttpLink({\n    uri: '/graphql',\n});\n\nconst authLink = setContext((_, { headers }) => {\n    const token = localStorage.getItem('id_token');\n\n    return {\n        headers: {\n            ...headers,\n            authorization: token ? `Bearer ${token}` : '',\n        },\n    };\n});\n\nconst client = new ApolloClient({\n    link: authLink.concat(httpLink),\n    cache: new InMemoryCache(),\n});\n\nconst currDate = new Date();\nconst currTime = currDate.getTime();\n// space used to contain \"<Header />\"\nfunction App() {\n    return (\n        <ApolloProvider client={client}>\n            <Router>\n                <div className=\"flex-column justify-flex-start min-100-vh\">\n                    \n                    <div className=\"container\">\n                        <Navbar />\n                        <Routes>\n                            {Auth.loggedIn() ? (\n                                <Route\n                                path='/'\n                                element={<MyDay />}\n                                />\n                            ) : (\n                                <Route \n                                path='/'\n                                element={<GetStarted />}\n                                />\n                            )}\n                            <Route\n                                path=\"/myMonth/:currTime\"\n                                element={<MyMonth />}\n                            />\n                            <Route  \n                                path=\"/myWeek/:currTime\"\n                                element={<Week />}\n                            />\n                            <Route\n                                path=\"/myDay/:currTime\"\n                                element={<MyDay />}\n                            />\n                        </Routes>\n                    </div>\n                    <Footer />\n                </div>\n            </Router>\n        </ApolloProvider>\n    );\n}\n\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import { gql } from '@apollo/client';\n\nexport const LOGIN_USER = gql`\n    mutation login($email: String!, $password: String!) {\n        login(email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`;\n\nexport const ADD_USER = gql`\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\n            token\n            user {\n                _id\n                username\n            }\n        }\n    }\n`;\n\n// export const ADD_EVENT = gql`\n//     mutation addEvent($eventUser: String!, $eventDate: String!, $eventTitle: String!, $eventDescription: String!) {\n//         addEvent(eventUser: $eventUser, eventDate: $eventDate, eventDescription: $eventDescription) {\n//             _id\n//             username\n//             email\n//             events {\n//                 eventId\n//                 eventUser\n//                 eventDate\n//                 eventTitle\n//                 eventDescription\n//             }\n//         }\n//     } \n// `;\n\nexport const ADD_EVENT = gql`\n    mutation addEvent($eventData: EventInput!) {\n        addEvent(eventData: $eventData) {\n            _id\n            username\n            email\n            events {\n                eventId\n                eventUser\n                eventDate\n                eventTitle\n                eventDescription\n            }\n        }\n    } \n`;\n\nexport const REMOVE_EVENT = gql`\n    mutation removeEvent($eventId: ID!) {\n        removeEvent(eventId: $eventId) {\n            _id\n            username\n            email\n            events {\n                eventId\n                eventUser\n                eventDate\n                eventTitle\n                eventDescription\n            }\n        }\n    }\n`;"],"sourceRoot":""}