{"version":3,"sources":["components/AddEventForm/index.js","utils/auth.js","utils/dateFormat.js","utils/dateFunctions.js","pages/Month.js","pages/MyDay.js","components/GetStarted/index.js","components/SignupForm/index.js","components/LoginForm/index.js","components/NavBar.js","components/Footer/index.js","App.js","index.js","utils/mutations.js","utils/queries.js"],"names":["AddEventForm","_ref","eventDate","console","log","myDate","Date","parseInt","monthNum","getMonth","dateNum","getDate","yearNum","getFullYear","_useState","useState","eventUser","eventTitle","eventDescription","_useState2","Object","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","eventFormData","setEventFormData","_useQuery","useQuery","QUERY_ME","data","loading","userData","me","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_4__","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","username","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","_useMutation","useMutation","ADD_EVENT","_useMutation2","addEvent","error","useEffect","handleInputChange","event","_event$target","target","name","value","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","handleFormSubmit","_ref2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","_yield$addEvent","_data","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","variables","sent","t0","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","noValidate","onSubmit","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","e","setImmediate","required","Feedback","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","disabled","title","onClick","auth","decode","getToken","token","isTokenExpired","exp","getTime","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getNumDays","year","includes","div4","div100","div400","getFirstWeekDay","getDay","getMonthName","getNextDay","timestamp","Month","currTime","useParams","myEvents","events","month","monthEvents","i","length","push","handleNextMonthBtn","asyncToGenerator","nextMonth","timeParam","setMonth","abrupt","react_default","react_router_dist","to","concat","handlePrevMonthBtn","_callee2","prevMonth","_context2","_x2","Container","Row","Button","firstWeekDay","numDays","MyDay","slicedToArray","showModal","setShowModal","setHours","setMinutes","setSeconds","setMilliseconds","dayName","dayNum","getDayName","monthName","todayEvents","fluid","className","firstName","Col","dist","map","Modal","size","onHide","aria-labelledby","Header","closeButton","Title","id","GetStarted","SignupForm","lastName","email","password","userFormData","setUserFormData","ADD_USER","addUser","objectSpread","defineProperty","SignupForm_regeneratorRuntime","_yield$addUser","Auth","login","Fragment","Form","Alert","onCLose","LoginForm","LOGIN_USER","LoginForm_regeneratorRuntime","_yield$login","AppNavbar","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","loggedIn","logout","Tab","defaultActiveKey","Item","eventKey","Body","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","Footer","useLocation","navigate","useNavigate","pathname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","NavBar","path","element","pages_MyDay","components_GetStarted","pages_Month","Week_default","components_Footer","ReactDOM","render","StrictMode","src_App","document","getElementById","gql","_templateObject","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","_templateObject2","_templateObject3","_templateObject4"],"mappings":"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","file":"static/js/main.804b7198.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { ADD_EVENT } from '../../utils/mutations';\nimport { QUERY_ME } from '../../utils/queries';\n\nconst AddEventForm = ({\n  eventDate,\n}) => {\n  console.log(\"----- Event Date ----- AddEventForm\");\n  console.log(eventDate);\n\n  let myDate = new Date (parseInt(eventDate));\n  let monthNum = myDate.getMonth() + 1;\n  let dateNum = myDate.getDate();\n  let yearNum = myDate.getFullYear();\n\n  const [eventFormData, setEventFormData] = useState({ eventUser: '', eventDate: '', eventTitle: '', eventDescription: ''});\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const userData = {};\n\n  if (data) {\n    userData = data.me;\n    setEventFormData({ ...eventFormData, eventUser: userData.username });\n  }\n  if (eventDate) {\n    setEventFormData({ ...eventFormData, eventDate: myDate });\n  }\n\n  const [validated] = useState(false);\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addEvent, {error}] = useMutation(ADD_EVENT);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error])\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setEventFormData({ ... eventFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation(); \n    }\n\n    try {\n      const {data} = await addEvent({\n        variables: { ...eventFormData },\n      });\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    if (eventDate) {\n      setEventFormData({\n        eventUser: userData.username,\n        eventDate: myDate,\n        eventTitle: '',\n        eventDescription: '',\n      });\n    } else {\n      setEventFormData({\n        eventUser: userData.username,\n        eventDate: '',\n        eventTitle: '',\n        eventDescription: '',\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong adding your event\n        </Alert>\n\n        {eventDate ? (\n          <div>\n            <h3>Event Date</h3>\n            <p>{monthNum}/{dateNum}/{yearNum}</p>\n          </div>\n        ) : (\n          <Form.Group>\n            <Form.Label htmlFor='eventDate'>Event Date</Form.Label>\n            <Form.Control\n              type='date'\n              placeholder='date'\n              name='eventDate'\n              onChange={(e) => setImmediate(e.target.value)}\n              value={eventFormData.eventDate}\n            />\n          </Form.Group>\n        )}\n\n        <Form.Group>\n          <Form.Label htmlFor='eventTitle'>Title</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Title'\n            name='eventTitle'\n            value={eventFormData.eventTitle}\n            onChange={handleInputChange}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Title is required</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='eventDescription'>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Description'\n            name='eventDescription'\n            onChange={handleInputChange}\n            value={eventFormData.eventDescription}\n          />\n        </Form.Group>\n        <Button\n          disabled={!(eventFormData.title)}\n          type='submit'\n          variant='success'\n          onClick={handleFormSubmit}>\n            Add Event\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddEventForm;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.getTime() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","// returns the number of days in the month, if the month is february, checks to see if it is a leap year\r\nexport const getNumDays = (monthNum, year) => {\r\n    // if the month number is 1, 3, 5, 7, 8, 10, 12 (jan, mar, may, jul, aug, oct, dec), the month has 31 days\r\n    if ([1,3,5,7,8,10,12].includes(monthNum)) {\r\n        return 31;\r\n    }\r\n    // if the month number is 4, 6, 9, 11 (apr, june, sept, nov), the month has 30 days\r\n    if ([4,6,9,11].includes(monthNum)) {\r\n        return 30;\r\n    }\r\n    // if the month number is 2 (february)\r\n    if (monthNum === 2) {\r\n        // check if year is a leap year\r\n        /*\r\n            rules:\r\n                years divisible by 400 ARE leap years\r\n                years divisible by 100 but not by 400 are NOT leap years\r\n                years divisible by 4 but not by 100 ARE leap years\r\n                years not divisible by 4 are NOT leap years \r\n\r\n                if year divisible by 4 ((year % 4) == 0) \r\n                    if year divisible by 100 ((year % 100) == 0)\r\n                        if year divisible by 400 ((year % 400) == 0)\r\n                            leap year\r\n                        else\r\n                            not leap year\r\n                    else\r\n                        leap year\r\n                else\r\n                    not leap year \r\n        */\r\n        // boolean variable to indicate whether year is evenly divisible by 4\r\n        var div4 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 100\r\n        var div100 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 400\r\n        var div400 = false;\r\n            \r\n        // sets div4 to true if the year is evenly divisible by 4\r\n        if ((year % 4) === 0) {\r\n            div4 = true;\r\n        }\r\n        // sets div100 to true if the year is evenly divisible by 100\r\n        if ((year % 100) === 0) {\r\n            div100 = true;\r\n        }\r\n        // sets div400 to true is the year is evenly divisible by 400\r\n        if ((year % 400) === 0) {\r\n            div400 = true;\r\n        }\r\n\r\n        if ((div4 && !div100) || (div4 && div100 && div400)) {\r\n            return 29;\r\n        } else {\r\n            return 28;\r\n        }\r\n    }\r\n};\r\n\r\n// given a month and year, determines the day of the week the firs tof the month falls on and returns the integer\r\nexport const getFirstWeekDay = (monthNum, year) => {\r\n    console.log(\"----- getFirstWeekDay ----- dateFormat:65\");\r\n    console.log(\"monthNum:\");\r\n    console.log(monthNum);\r\n    console.log(\"year:\");\r\n    console.log(year);\r\n    const firstDay = new Date(year, monthNum, 1);\r\n    // return first day of the month (numbers 0-6)\r\n    return firstDay.getDay();\r\n};\r\n\r\n// given the number of the day of the week, determines and returns the name of the day\r\nexport const getDayName = (dayNum) => {\r\n    console.log(\"----- dayNum ----- (client/src/utils/dateFormat:71) -----\");\r\n    console.log(dayNum);\r\n    switch (dayNum) {\r\n        case 0:\r\n            return \"Sunday\";\r\n        case 1:\r\n            return \"Monday\";\r\n        case 2:\r\n            return \"Tuesday\";\r\n        case 3:\r\n            return \"Wednesday\";\r\n        case 4:\r\n            return \"Thursday\";\r\n        case 5:\r\n            return \"Friday\";\r\n        case 6:\r\n            return \"Saturday\";\r\n        default:\r\n            return \"WeekDayErr\";\r\n    }\r\n};\r\n\r\n// given the number of the month, determines and returns the name of the month\r\nexport const getMonthName = (monthNum) => {\r\n    //const monthNum = monthNum;\r\n    switch (monthNum) {\r\n        case 0:\r\n            return \"January\";\r\n        case 1:\r\n            return \"February\";\r\n        case 2:\r\n            return \"March\";\r\n        case 3:\r\n            return \"April\";\r\n        case 4:\r\n            return \"May\";\r\n        case 5:\r\n            return \"June\";\r\n        case 6:\r\n            return \"July\";\r\n        case 7:\r\n            return \"August\";\r\n        case 8:\r\n            return \"September\";\r\n        case 9:\r\n            return \"October\";\r\n        case 10:\r\n            return \"November\";\r\n        case 11:\r\n            return \"December\";\r\n        default:\r\n            return \"MonthNameErr\";\r\n    }\r\n};\r\n\r\n","import { getNumDays } from './dateFormat';\r\n\r\n// number of milliseconds in one day\r\nconst MS_PER_DAY = 86400000;\r\n\r\n// given a date (in milliseconds), determines the start of the month and returns the date in milliseconds\r\nexport const getMonthStart = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const monthStart = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const monthStartMS = monthStart.getTime();\r\n\r\n    return monthStartMS;\r\n};\r\n\r\n// given the date (in milliseconds), determines the last millisecond of the month and returns\r\nexport const getMonthEnd = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const numDays = getNumDays(month, year);\r\n\r\n    const monthEnd = new Date(year, month, numDays, 23, 59, 59, 999);\r\n\r\n    return monthEnd;\r\n};\r\n\r\n// given the date (in milliseconds), determines the first millisecond of the week and returns\r\nexport const getWeekStart = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const sundayDate = dateNum - weekDay;\r\n\r\n    const weekStart = new Date(year, month, sundayDate, 0, 0, 0, 0);\r\n\r\n    return weekStart;\r\n};\r\n\r\n// given the date (in milliseconds), determines the last millisecond of the week and returns\r\nexport const getWeekEnd = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const satOffset = 6 - weekDay;\r\n    const saturdayDate = dateNum + satOffset;\r\n\r\n    const weekEnd = new Date(year, month, saturdayDate, 23, 59, 59, 999);\r\n\r\n    return weekEnd;\r\n};\r\n\r\n// given the date (in milliseconds), determines and returns the first millisecond of the day\r\nexport const getDayStart = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayStart = new Date(year, month, dateNum, 0, 0, 0, 0);\r\n\r\n    return dayStart;\r\n};\r\n\r\n// given the date (in milliseconds), determines and returns the last millisecond of the day\r\nexport const getDayEnd = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayEnd = new Date(year, month, dateNum, 23, 59, 59, 999);\r\n\r\n    return dayEnd;\r\n};\r\n\r\n// given the date (in milliseconds), determines the current date, sets date to next month, returns new date in milliseconds\r\nexport const getNextMonth = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 11) {\r\n        myTime.setFullYear(year++);\r\n        myTime.setMonth(0);\r\n    } else {\r\n        myTime.setMonth(month++);\r\n    }\r\n\r\n    const myTimeMS = myTime.getTime();\r\n\r\n    return myTimeMS;\r\n};\r\n\r\n// given the date (in milliseconds), determines the current date, sets date to previous month, returns new date in milliseconds\r\nexport const getPrevMonth = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 0) {\r\n        myTime.setFullYear(year--);\r\n        myTime.setMonth(11);\r\n    } else {\r\n        myTime.setMonth(month--);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\n// given the date (in milliseconds), adds 7 days (in milliseconds) to change the date to the following week, returns new date in milliseconds\r\nexport const getNextWeek = (timestamp) => {\r\n\r\n    const nextWeekMS = parseInt(timestamp) + (7 * MS_PER_DAY);\r\n    \r\n    return nextWeekMS;\r\n};\r\n\r\n// given the date (in milliseconds), subtracts 7 days (in milliseconds) to change the date ot the previous week, returns new date in milliseconds\r\nexport const getPrevWeek = (timestamp) => {\r\n    \r\n    const prevWeekMS = parseInt(timestamp) - (7 * MS_PER_DAY);\r\n\r\n    return prevWeekMS;\r\n};\r\n\r\n// given the date (in milliseconds), adds 24 hours (in milliseconds) to change the date to the next day, returns new date in milliseconds\r\nexport const getNextDay = (timestamp) => {\r\n    \r\n    const nextDayMS = parseInt(timestamp) + (MS_PER_DAY);\r\n\r\n    return nextDayMS;\r\n};\r\n\r\n// given the date (in milliseconds), subtracts 24 hours (in milliseconds) to change the date to the previous day, returns new date in milliseconds\r\nexport const getPrevDay = (timestamp) => {\r\n    \r\n    const prevDayMS = parseInt(timestamp) - (MS_PER_DAY);\r\n\r\n    return prevDayMS;\r\n};","import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nimport MonthFormat from '../components/MonthFormat';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\r\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\r\n\r\n// import { QUERY_EVENTS, QUERY_ME } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\n\r\nconst Month = () => {\r\n    const { currTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    let userData = {};\r\n\r\n    if (data) {\r\n        userData = data.me;\r\n    }\r\n\r\n    console.log(\"----- user data: -----\");\r\n    console.log(userData);\r\n    const myEvents = userData.events;\r\n    console.log(\"----- my events: -----\");\r\n    console.log(myEvents);\r\n\r\n    const myDate = new Date(parseInt(currTime));\r\n    let month = myDate.getMonth();\r\n    let year = myDate.getFullYear();\r\n\r\n    const monthEvents = [];\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        if (myEvents[i].eventDate.getMonth() === month && myEvents[i].eventDate.getFullYear() === year) {\r\n            monthEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n     \r\n\r\n    const handleNextMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        const nextMonth = myDate.setMonth(month++);\r\n        const timeParam = nextMonth.getTime();\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n    \r\n\r\n    const handlePrevMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const prevMonth = myDate.setMonth(month--);\r\n        const timeParam = prevMonth.getTime();\r\n\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Button onClick={handlePrevMonthBtn}>Prev Month</Button>\r\n                    <h3>{getMonthName(myDate.getMonth())}</h3>\r\n                    <Button onClick={handleNextMonthBtn}>Next Month</Button>\r\n                </Row>\r\n                <Row>\r\n                    <Month \r\n                        monthNum={myDate.getMonth()}\r\n                        year={myDate.getFullYear()}\r\n                        firstWeekDay={getFirstWeekDay(currTime)}\r\n                        numDays={getNumDays(myDate.getMonth())}\r\n                        events={myEvents}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Month;","import React, { useState } from 'react';\r\nimport { Navigate, useParams, Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport { ADD_EVENT } from '../utils/mutations';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\r\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\r\nimport AddEventForm from '../components/AddEventForm';\r\n\r\nconst MyDay = () => {\r\n    const [ showModal, setShowModal ] = useState(false);\r\n    const { currTime } = useParams();\r\n    const {loading, data } = useQuery(QUERY_ME);\r\n\r\n    const [addEvent, { error }] = useMutation(ADD_EVENT);\r\n\r\n    let myDate = new Date ();\r\n    if (currTime) {\r\n        myDate = new Date (parseInt(currTime));\r\n    }\r\n    myDate.setHours(0);\r\n    myDate.setMinutes(0);\r\n    myDate.setSeconds(0);\r\n    myDate.setMilliseconds(0);\r\n\r\n    let userData = {};\r\n    let myEvents = {};\r\n\r\n    if (data) {\r\n        userData = data.me;\r\n        myEvents = userData.events;\r\n    } \r\n\r\n    let monthNum = myDate.getMonth();\r\n    let yearNum = myDate.getFullYear();\r\n    let dateNum = myDate.getDate();\r\n    let dayName = getDayName(myDate.getDay());\r\n    let monthName = getMonthName(monthNum);\r\n\r\n    let todayEvents = [];\r\n\r\n    for (let i = 0; i < myEvents; i++) {\r\n        if (myEvents[i].eventDate === myDate.getTime()) {\r\n            todayEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <h2>LOADING...</h2>;\r\n    }\r\n\r\n    // const prevDay = (event) => {\r\n    //     event.preventDefault();\r\n    //     console.log(myDate);\r\n    //     console.log('prevDay button clicked');\r\n    //     myDate.setDate(dateNum--);\r\n    //     console.log(myDate);\r\n    //     const timeParam = myDate.getTime();\r\n    //     return <Navigate to={`/myDay/${timeParam}`} />;\r\n    // };\r\n\r\n    // const nextDay = (event) => {\r\n    //     event.preventDefault();\r\n    //     console.log(myDate);\r\n    //     console.log('nextDay button clicked');\r\n    //     myDate.setDate(dateNum++);\r\n    //     console.log(myDate);\r\n    //     const timeParam = myDate.getTime();\r\n    //     return <Navigate to={`/myDate/${timeParam}`} />;\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <div fluid className=\"jumbotron text-light bg-dark\">\r\n                <Container>\r\n                    <Row>\r\n                        <h1>{userData.firstName}'s Day</h1>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={`/myDay/${getPrevDay(myDate.getTime())}`}>{'<'}</Link>\r\n                        </Col>\r\n                        <Col><h2>{dayName}, {monthName} {dateNum}, {yearNum}</h2></Col>\r\n                        <Col>\r\n                            <Link to={`/myDay/${getNextDay(myDate.getTime())}`}>{'>'}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <Container className=\"card\">\r\n                <Container className=\"card-header\">\r\n                    <h3>Today's Events</h3>\r\n                </Container>\r\n                <Container className=\"card-body\">\r\n                    {todayEvents && todayEvents.map((event) => (\r\n                        <Row>\r\n                            <p>{event.eventTitle}</p>\r\n                        </Row>\r\n                    ))}\r\n                    <Row>\r\n                        <Button onClick={() => setShowModal(true)}>Add Event</Button>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n            <Modal\r\n                size='lg'\r\n                show={showModal}\r\n                onHide={() => setShowModal(false)}\r\n                aria-labelledby='addEvent-modal'>\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id='addEvent-modal'>New Event</Modal.Title>\r\n                    <AddEventForm\r\n                        eventDate={myDate.getTime()}\r\n                    />\r\n                </Modal.Header>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyDay;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Navigate, BrowserRouter as Router, Link } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_MATCHUPS } from '../utils/queries';\r\n\r\nconst GetStarted = () => {\r\n\r\n    const currDate = new Date();\r\n    const currTime = currDate.getTime();\r\n\r\n    const myDayNav = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currTime = new Date();\r\n        const timeParam = currTime.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    // was in space below:\r\n    /*\r\n        {Auth.loggedIn() ? (\r\n                    <Link to={`myDay/${currTime}`}>\r\n                        <button>See MyDay</button>\r\n                    </Link>\r\n                ) : (\r\n\r\n                )}\r\n    */\r\n\r\n    return (\r\n            <div>\r\n                <h1>Get Started with MyTime</h1>\r\n                \r\n                <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n                    See MyDay\r\n                </Button>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default GetStarted;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\nimport AddEventForm from './AddEventForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            MyTime\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              {/* <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link> */}\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to={`myDay/${currTime}`}>MyDay</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myMonth/${currTime}`}>MyMonth</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myWeek/${currTime}`}>MyWeek</Nav.Link>\r\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport Month from './pages/Month';\r\nimport MyDay from './pages/MyDay';\r\nimport Week from './pages/Week';\r\n//import Home from './components/Home';\r\nimport GetStarted from './components/GetStarted';\r\nimport Navbar from './components/NavBar';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport Auth from './utils/auth';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('id_token');\r\n\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n        },\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n// space used to contain \"<Header />\"\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    \r\n                    <div className=\"container\">\r\n                        <Navbar />\r\n                        <Routes>\r\n                            {Auth.loggedIn() ? (\r\n                                <Route\r\n                                path='/'\r\n                                element={<MyDay />}\r\n                                />\r\n                            ) : (\r\n                                <Route \r\n                                path='/'\r\n                                element={<GetStarted />}\r\n                                />\r\n                            )}\r\n                            <Route\r\n                                path=\"/myMonth/:currTime\"\r\n                                element={<Month />}\r\n                            />\r\n                            <Route  \r\n                                path=\"/myWeek/:currTime\"\r\n                                element={<Week />}\r\n                            />\r\n                            <Route\r\n                                path=\"/myDay/:currTime\"\r\n                                element={<MyDay />}\r\n                            />\r\n                        </Routes>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\r\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_EVENT = gql`\r\n    mutation addEvent($eventUser: String!, $eventDate: String!, $eventTitle: String!, $eventDescription: String!) {\r\n        addEvent(eventUser: $eventUser, eventDate: $eventDate, eventDescription: $eventDescription) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nexport const REMOVE_EVENT = gql`\r\n    mutation removeEvent($eventId: ID!) {\r\n        removeEvent(eventId: $eventId) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_ME = gql`\r\n    {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// export const QUERY_EVENTS = gql`\r\n//     query getMyEvents($timeStart: Date!, $timeEnd: Date!) {\r\n//         events {\r\n//             _id\r\n//             eventUser\r\n//             eventDate\r\n//             eventTitle\r\n//             eventDescription\r\n//         }\r\n//     }\r\n// `;"],"sourceRoot":""}