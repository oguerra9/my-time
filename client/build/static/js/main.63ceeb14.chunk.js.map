{"version":3,"sources":["components/AddEventForm/index.js","utils/auth.js","utils/dateFormat.js","utils/queries.js","pages/Month.js","pages/MyDay.js","components/GetStarted/index.js","components/SignupForm/index.js","components/LoginForm/index.js","components/NavBar.js","components/Footer/index.js","App.js","index.js","utils/mutations.js"],"names":["AddEventForm","_ref","eventDate","console","log","Date","_useState","useState","eventUser","eventTitle","eventDescription","_useState2","Object","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","eventFormData","setEventFormData","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","_useMutation","useMutation","ADD_EVENT","_useMutation2","addEvent","error","useEffect","handleFormSubmit","_ref2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_regeneratorRuntime","mark","_callee","event","_yield$addEvent","data","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","variables","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","sent","t0","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","Fragment","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","noValidate","onSubmit","react_bootstrap__WEBPACK_IMPORTED_MODULE_5__","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","name","onChange","e","setImmediate","target","value","required","Feedback","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","disabled","title","onClick","auth","decode","getToken","token","isTokenExpired","exp","getTime","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getNumDays","monthNum","year","includes","div4","div100","div400","getFirstWeekDay","getDay","getMonthName","QUERY_ME","gql","_templateObject","taggedTemplateLiteral","Month","currTime","useParams","_useQuery","useQuery","loading","userData","me","myEvents","events","myDate","parseInt","month","getMonth","getFullYear","monthEvents","i","length","push","handleNextMonthBtn","asyncToGenerator","nextMonth","timeParam","setMonth","abrupt","react_default","react_router_dist","to","concat","handlePrevMonthBtn","_callee2","prevMonth","_context2","_x2","Container","Row","Button","firstWeekDay","numDays","MyDay","slicedToArray","showModal","setShowModal","setHours","setMinutes","setSeconds","setMilliseconds","myTime","day","getDate","dayName","dayNum","getDayName","monthName","todayEvents","currEventDate","fluid","className","firstName","setDate","map","Modal","size","onHide","aria-labelledby","Header","closeButton","Title","id","GetStarted","SignupForm","lastName","username","email","password","userFormData","setUserFormData","ADD_USER","addUser","handleInputChange","_event$target","objectSpread","defineProperty","SignupForm_regeneratorRuntime","_yield$addUser","Auth","login","Form","Alert","onCLose","LoginForm","LOGIN_USER","LoginForm_regeneratorRuntime","_yield$login","AppNavbar","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","loggedIn","logout","Tab","defaultActiveKey","Item","eventKey","Body","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","Footer","useLocation","navigate","useNavigate","pathname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","dist","NavBar","path","element","pages_MyDay","components_GetStarted","pages_Month","Week_default","components_Footer","ReactDOM","render","StrictMode","src_App","document","getElementById","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","_templateObject2","_templateObject3","_templateObject4"],"mappings":"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","file":"static/js/main.63ceeb14.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert, Modal } from 'react-bootstrap';\n\nimport {useMutation} from '@apollo/client';\nimport {ADD_EVENT} from '../../utils/mutations';\n\n//import Auth from '../../utils/auth';\n\nconst AddEventForm = ({\n  eventDate,\n}) => {\n  console.log(\"----- Event Date: ----- AddEventForm\");\n  console.log(eventDate);\n  const myDate = new Date(eventDate);\n  // set initial form state\n  const [eventFormData, setEventFormData] = useState({ eventUser: '', eventDate: '', eventTitle: '', eventDescription: '' });\n  // set state for form validation\n  const [validated] = useState(false);\n  // set state for alert\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addEvent, {error}] = useMutation(ADD_EVENT);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error])\n\n  // const handleInputChange = (event) => {\n  //   const { name, value } = event.target;\n  //   setEventFormData({ ...eventFormData, [name]: value });\n  // };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    // check if form has everything (as per react-bootstrap docs)\n    const form = event.currentTarget;\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n\n    try {\n      const {data} = await addEvent({\n        variables: { ...eventFormData },\n      });\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    setEventFormData({\n      //eventUser: '',\n      eventDate: '',\n      eventTitle: '',\n      eventDescription: '',\n    });\n  };\n\n  return (\n    <>\n      {/* This is needed for the validation functionality above */}\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        {/* show alert if server response is bad */}\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong with your event\n        </Alert>\n\n        {eventDate ? (\n          <Form.Group>\n            <Form.Label htmlFor='eventDate'>Event Date</Form.Label>\n            <Form.Control\n              type='date'\n              placeholder='date'\n              name='eventDate'\n              onChange={(e) => setImmediate(e.target.value)}\n              value={eventFormData.eventDate}\n            />\n          </Form.Group>\n        ) : (\n          <Form.Group>\n            <Form.Label htmlFor='eventDate'>Event Date</Form.Label>\n            <Form.Control\n              type='date'\n              placeholder='date'\n              name='eventDate'\n              onChange={(e) => setImmediate(e.target.value)}\n              value={eventFormData.eventDate}\n            />\n          </Form.Group>\n        )}\n        \n          {/* <Form.Control.Feedback type='invalid'>Username is required!</Form.Control.Feedback> */}\n        \n        <Form.Group>\n          <Form.Label htmlFor='eventTitle'>Title</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Title'\n            name='eventTitle'\n            value={eventFormData.eventTitle}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Title is required!</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='eventDescription'>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Description'\n            name='eventDescription'\n    \n            value={eventFormData.eventDescription}\n          />\n        </Form.Group>\n\n        <Button\n          disabled={!(eventFormData.title)}\n          type='submit'\n          variant='success'\n          onClick={handleFormSubmit}>\n          Add Event\n        </Button>\n      </Form>\n    </>\n  );\n};\n\nexport default AddEventForm;\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.getTime() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","const daysToMS = (numDays) => {\r\n    const numMS = numDays * 24 * 60 * 60 * 1000;\r\n    return numMS;\r\n}\r\n\r\nexport const getNumDays = (monthNum, year) => {\r\n    // if the month number is 1, 3, 5, 7, 8, 10, 12 (jan, mar, may, jul, aug, oct, dec), the month has 31 days\r\n    if ([1,3,5,7,8,10,12].includes(monthNum)) {\r\n        return 31;\r\n    }\r\n    // if the month number is 4, 6, 9, 11 (apr, june, sept, nov), the month has 30 days\r\n    if ([4,6,9,11].includes(monthNum)) {\r\n        return 30;\r\n    }\r\n    // if the month number is 2 (february)\r\n    if (monthNum === 2) {\r\n        // check if year is a leap year\r\n        /*\r\n            rules:\r\n                years divisible by 400 ARE leap years\r\n                years divisible by 100 but not by 400 are NOT leap years\r\n                years divisible by 4 but not by 100 ARE leap years\r\n                years not divisible by 4 are NOT leap years \r\n\r\n                if year divisible by 4 ((year % 4) == 0) \r\n                    if year divisible by 100 ((year % 100) == 0)\r\n                        if year divisible by 400 ((year % 400) == 0)\r\n                            leap year\r\n                        else\r\n                            not leap year\r\n                    else\r\n                        leap year\r\n                else\r\n                    not leap year \r\n        */\r\n        // boolean variable to indicate whether year is evenly divisible by 4\r\n        var div4 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 100\r\n        var div100 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 400\r\n        var div400 = false;\r\n            \r\n        // sets div4 to true if the year is evenly divisible by 4\r\n        if ((year % 4) === 0) {\r\n            div4 = true;\r\n        }\r\n        // sets div100 to true if the year is evenly divisible by 100\r\n        if ((year % 100) === 0) {\r\n            div100 = true;\r\n        }\r\n        // sets div400 to true is the year is evenly divisible by 400\r\n        if ((year % 400) === 0) {\r\n            div400 = true;\r\n        }\r\n\r\n        if ((div4 && !div100) || (div4 && div100 && div400)) {\r\n            return 29;\r\n        } else {\r\n            return 28;\r\n        }\r\n    }\r\n};\r\n\r\nexport const getFirstWeekDay = (monthNum, year) => {\r\n    console.log(\"----- getFirstWeekDay ----- dateFormat:65\");\r\n    console.log(\"monthNum:\");\r\n    console.log(monthNum);\r\n    console.log(\"year:\");\r\n    console.log(year);\r\n    const firstDay = new Date(year, monthNum, 1);\r\n    // return first day of the month (numbers 0-6)\r\n    return firstDay.getDay();\r\n};\r\n\r\nexport const getDayName = (dayNum) => {\r\n    console.log(\"----- dayNum ----- (client/src/utils/dateFormat:71) -----\");\r\n    console.log(dayNum);\r\n    switch (dayNum) {\r\n        case 0:\r\n            return \"Sunday\";\r\n        case 1:\r\n            return \"Monday\";\r\n        case 2:\r\n            return \"Tuesday\";\r\n        case 3:\r\n            return \"Wednesday\";\r\n        case 4:\r\n            return \"Thursday\";\r\n        case 5:\r\n            return \"Friday\";\r\n        case 6:\r\n            return \"Saturday\";\r\n        default:\r\n            return \"WeekDayErr\";\r\n    }\r\n};\r\n\r\nexport const getMonthName = (monthNum) => {\r\n    //const monthNum = monthNum;\r\n    switch (monthNum) {\r\n        case 0:\r\n            return \"January\";\r\n        case 1:\r\n            return \"February\";\r\n        case 2:\r\n            return \"March\";\r\n        case 3:\r\n            return \"April\";\r\n        case 4:\r\n            return \"May\";\r\n        case 5:\r\n            return \"June\";\r\n        case 6:\r\n            return \"July\";\r\n        case 7:\r\n            return \"August\";\r\n        case 8:\r\n            return \"September\";\r\n        case 9:\r\n            return \"October\";\r\n        case 10:\r\n            return \"November\";\r\n        case 11:\r\n            return \"December\";\r\n        default:\r\n            return \"MonthNameErr\";\r\n    }\r\n}\r\n\r\n\r\nexport const getMonthStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const monthStart = new Date(year, month, 1, 0, 0, 0, 0);\r\n\r\n    return monthStart;\r\n};\r\n\r\nexport const getMonthEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const numDays = getNumDays(month, year);\r\n\r\n    const monthEnd = new Date(year, month, numDays, 23, 59, 59, 999);\r\n\r\n    return monthEnd;\r\n};\r\n\r\nexport const getWeekStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const sundayDate = dateNum - weekDay;\r\n\r\n    const weekStart = new Date(year, month, sundayDate, 0, 0, 0, 0);\r\n\r\n    return weekStart;\r\n};\r\n\r\nexport const getWeekEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const satOffset = 6 - weekDay;\r\n    const saturdayDate = dateNum + satOffset;\r\n\r\n    const weekEnd = new Date(year, month, saturdayDate, 23, 59, 59, 999);\r\n\r\n    return weekEnd;\r\n};\r\n\r\nexport const getDayStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayStart = new Date(year, month, dateNum, 0, 0, 0, 0);\r\n\r\n    return dayStart;\r\n};\r\n\r\nexport const getDayEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayEnd = new Date(year, month, dateNum, 23, 59, 59, 999);\r\n\r\n    return dayEnd;\r\n};\r\n\r\nexport const getNextMonth = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 11) {\r\n        myTime.setFullYear(year++);\r\n        myTime.setMonth(0);\r\n    } else {\r\n        myTime.setMonth(month++);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\nexport const getPrevMonth = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 0) {\r\n        myTime.setFullYear(year--);\r\n        myTime.setMonth(11);\r\n    } else {\r\n        myTime.setMonth(month--);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\nexport const getNextWeek = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const weekMS = daysToMS(7);\r\n\r\n    const nextWeekMS = myTimeMS + weekMS;\r\n    const nextWeek = new Date(nextWeekMS);\r\n\r\n    return nextWeek;\r\n};\r\n\r\nexport const getPrevWeek = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const weekMS = daysToMS(7);\r\n\r\n    const prevWeekMS = myTimeMS - weekMS;\r\n    const prevWeek = new Date(prevWeekMS);\r\n\r\n    return prevWeek;\r\n};\r\n\r\nexport const getNextDay = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const dayMS = daysToMS(1);\r\n\r\n    const nextDayMS = myTimeMS + dayMS;\r\n    const nextDay = new Date(nextDayMS);\r\n\r\n    return nextDay;\r\n};\r\n\r\nexport const getPrevDay = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const dayMS = daysToMS(1);\r\n\r\n    const prevDayMS = myTimeMS + dayMS;\r\n    const prevDay = new Date(prevDayMS);\r\n\r\n    return prevDay;\r\n};","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_ME = gql`\r\n    {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// export const QUERY_EVENTS = gql`\r\n//     query getMyEvents($timeStart: Date!, $timeEnd: Date!) {\r\n//         events {\r\n//             _id\r\n//             eventUser\r\n//             eventDate\r\n//             eventTitle\r\n//             eventDescription\r\n//         }\r\n//     }\r\n// `;","import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nimport MonthFormat from '../components/MonthFormat';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName, getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFormat';\r\n\r\n// import { QUERY_EVENTS, QUERY_ME } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\n\r\nconst Month = () => {\r\n    const { currTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    let userData = {};\r\n\r\n    if (data) {\r\n        userData = data.me;\r\n    }\r\n\r\n    console.log(\"----- user data: -----\");\r\n    console.log(userData);\r\n    const myEvents = userData.events;\r\n    console.log(\"----- my events: -----\");\r\n    console.log(myEvents);\r\n\r\n    const myDate = new Date(parseInt(currTime));\r\n    let month = myDate.getMonth();\r\n    let year = myDate.getFullYear();\r\n\r\n    const monthEvents = [];\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        if (myEvents[i].eventDate.getMonth() === month && myEvents[i].eventDate.getFullYear() === year) {\r\n            monthEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n     \r\n\r\n    const handleNextMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        const nextMonth = myDate.setMonth(month++);\r\n        const timeParam = nextMonth.getTime();\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n    \r\n\r\n    const handlePrevMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const prevMonth = myDate.setMonth(month--);\r\n        const timeParam = prevMonth.getTime();\r\n\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Button onClick={handlePrevMonthBtn}>Prev Month</Button>\r\n                    <h3>{getMonthName(myDate.getMonth())}</h3>\r\n                    <Button onClick={handleNextMonthBtn}>Next Month</Button>\r\n                </Row>\r\n                <Row>\r\n                    <Month \r\n                        monthNum={myDate.getMonth()}\r\n                        year={myDate.getFullYear()}\r\n                        firstWeekDay={getFirstWeekDay(currTime)}\r\n                        numDays={getNumDays(myDate.getMonth())}\r\n                        events={myEvents}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Month;","import React, { useState, useEffect } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\n// import { QUERY_ME, QUERY_EVENTS } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport { ADD_EVENT, REMOVE_EVENT } from '../utils/mutations';\r\nimport { getSavedEventIds, saveEventIds, removeEventId } from '../utils/localStorage';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName, getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFormat';\r\nimport DayBox from '../components/DayBox';\r\nimport AddEventForm from '../components/AddEventForm';\r\n\r\nimport Auth from '../utils/auth';\r\nimport events from 'inquirer/lib/utils/events';\r\n\r\nconst MyDay = () => {\r\n    const [ showModal, setShowModal ] = useState(false);\r\n    const { currTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    let myDate = new Date ();\r\n    myDate.setHours(0);\r\n    myDate.setMinutes(0);\r\n    myDate.setSeconds(0);\r\n    myDate.setMilliseconds(0);\r\n\r\n    let myTime = myDate.getTime();\r\n\r\n    if (currTime) {\r\n        console.log(\"----- currTime ----- MyDay.js\");\r\n        console.log(currTime);\r\n\r\n        myDate = new Date(parseInt(currTime));\r\n        console.log(\"----- myDate ----- MyDay.js\");\r\n        console.log(myDate);\r\n    }     \r\n\r\n\r\n    const [addEvent, { error }] = useMutation(ADD_EVENT);\r\n\r\n    let userData = {};\r\n    let myEvents = {};\r\n\r\n\r\n    //const [removeEvent, { error }] = useMutation(REMOVE_EVENT);\r\n    if ( data ) {\r\n        console.log(\"===== user data found =====\");\r\n        userData = data.me;\r\n        console.log(\"----- User Data: -----\");\r\n        console.log(userData);\r\n        myEvents = userData.events;\r\n    } else {\r\n        userData = {};\r\n    }\r\n\r\n    let month = myDate.getMonth();\r\n    console.log(\"----- month ----- MyDay.js\");\r\n    console.log(month);\r\n    let year = myDate.getFullYear();\r\n    console.log(\"----- year ----- MyDay.js\");\r\n    console.log(year);\r\n    let day = myDate.getDate();\r\n    console.log(\"----- day ----- MyDay.js\");\r\n    console.log(day);\r\n    let dayName = getDayName(myDate.getDay());\r\n    console.log(\"----- dayName ----- MyDay.js\");\r\n    console.log(dayName);\r\n    let monthName = getMonthName(month);\r\n    console.log(\"----- monthName ----- MyDay.js\");\r\n    console.log(monthName);\r\n\r\n    let todayEvents = [];\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        const currEventDate = new Date(myEvents[i].eventDate);\r\n\r\n        if (currEventDate.getDate() === day && currEventDate.getMonth() === month && currEventDate.getFullYear() === year) {\r\n            todayEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n\r\n    // const handleDeleteEvent = async (eventId) => {\r\n    //     const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    //     if (!token) {\r\n    //         return false;\r\n    //     }\r\n\r\n    //     try {\r\n    //         const { data } = await removeEvent({\r\n    //             variables: { eventId },\r\n    //         });\r\n\r\n    //         removeEventId(eventId);\r\n    //     } catch (err) {\r\n    //         console.error(err);\r\n    //     }\r\n    // };\r\n\r\n    if (loading) {\r\n        return <h2>LOADING...</h2>;\r\n    }\r\n\r\n    //const currDate = new Date();\r\n    const prevDay = (event) => {\r\n        event.preventDefault();\r\n        console.log('prevDay button clicked');\r\n        myDate.setDate(day--);\r\n        const timeParam = myDate.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    const nextDay = (event) => {\r\n        event.preventDefault();\r\n        console.log('nextDay button clicked');\r\n        myDate.setDate(day++);\r\n        const timeParam = myDate.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    }\r\n\r\n    // return (\r\n    //         <div>\r\n    //             <h1>Get Started with MyTime</h1>\r\n    //             <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n    //                 See MyDay\r\n    //             </Button>\r\n    //         </div>\r\n    // );\r\n\r\n    //was inside container\r\n    /*\r\n<DayBox\r\n                    dayDate={currTime}\r\n                    events={todayEvents}\r\n                    showDescription={false}\r\n                    showDescPreview={true}\r\n                    showEventTime={true}\r\n                />\r\n    */\r\n\r\n    return (\r\n        <div>\r\n            <div fluid className=\"jumbotron text-light bg-dark\">\r\n                <Container>\r\n                    <h1>{userData.firstName}'s Day</h1>\r\n                    <Button className=\"btn btn-lg btn-light m-2\" onClick={prevDay}>{'<'}</Button>\r\n                    <h2>{dayName}, {monthName} {day},{year}</h2>\r\n                    <Button className=\"btn btn-lg btn-light m-2\" onClick={nextDay}>{'>'}</Button>\r\n                </Container>\r\n            </div>\r\n            <Container>\r\n                <Row>\r\n                    <h3> Today's Events </h3>\r\n                </Row>\r\n                <Container className=\"card-body\">\r\n                    {todayEvents && todayEvents.map((event) => (\r\n                        <Row>\r\n                            <p>{event.eventTitle}</p>\r\n                        </Row>\r\n                    ))}\r\n                    <Row>\r\n                        <Button onClick={() => setShowModal(true)}>Add Event</Button>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n            <Modal\r\n                size='lg'\r\n                show={showModal}\r\n                onHide={() => setShowModal(false)}\r\n                aria-labelledby='addEvent-modal'>\r\n                \r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id='addEvent-modal'>\r\n                        New Event\r\n                    </Modal.Title>\r\n                    <AddEventForm\r\n                        eventDate={myTime}\r\n                    />\r\n                </Modal.Header>\r\n            </Modal>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyDay;","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Navigate, BrowserRouter as Router, Link } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_MATCHUPS } from '../utils/queries';\r\n\r\nconst GetStarted = () => {\r\n\r\n    const currDate = new Date();\r\n    const currTime = currDate.getTime();\r\n\r\n    const myDayNav = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currTime = new Date();\r\n        const timeParam = currTime.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    // was in space below:\r\n    /*\r\n        {Auth.loggedIn() ? (\r\n                    <Link to={`myDay/${currTime}`}>\r\n                        <button>See MyDay</button>\r\n                    </Link>\r\n                ) : (\r\n\r\n                )}\r\n    */\r\n\r\n    return (\r\n            <div>\r\n                <h1>Get Started with MyTime</h1>\r\n                \r\n                <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n                    See MyDay\r\n                </Button>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default GetStarted;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\nimport AddEventForm from './AddEventForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            MyTime\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              {/* <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link> */}\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to={`myDay/${currTime}`}>MyDay</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myMonth/${currTime}`}>MyMonth</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myWeek/${currTime}`}>MyWeek</Nav.Link>\r\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport Day from './pages/Day';\r\nimport Month from './pages/Month';\r\nimport MyDay from './pages/MyDay';\r\nimport Week from './pages/Week';\r\n//import Home from './components/Home';\r\nimport GetStarted from './components/GetStarted';\r\nimport Navbar from './components/NavBar';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport Auth from './utils/auth';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('id_token');\r\n\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n        },\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n// space used to contain \"<Header />\"\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    \r\n                    <div className=\"container\">\r\n                        <Navbar />\r\n                        <Routes>\r\n                            {Auth.loggedIn() ? (\r\n                                <Route\r\n                                path='/'\r\n                                element={<MyDay />}\r\n                                />\r\n                            ) : (\r\n                                <Route \r\n                                path='/'\r\n                                element={<GetStarted />}\r\n                                />\r\n                            )}\r\n                            <Route\r\n                                path=\"/myMonth/:currTime\"\r\n                                element={<Month />}\r\n                            />\r\n                            <Route  \r\n                                path=\"/myWeek/:currTime\"\r\n                                element={<Week />}\r\n                            />\r\n                            <Route\r\n                                path=\"/myDay/:currTime\"\r\n                                element={<MyDay />}\r\n                            />\r\n                        </Routes>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\r\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_EVENT = gql`\r\n    mutation addEvent($eventUser: String!, $eventDate: String!, $eventTitle: String!, $eventDescription: String!) {\r\n        addEvent(eventUser: $eventUser, eventDate: $eventDate, eventDescription: $eventDescription) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nexport const REMOVE_EVENT = gql`\r\n    mutation removeEvent($eventId: ID!) {\r\n        removeEvent(eventId: $eventId) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;"],"sourceRoot":""}