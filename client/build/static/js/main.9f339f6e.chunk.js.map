{"version":3,"sources":["components/SignupForm.js","components/LoginForm.js","components/Navbar.js","App.js","index.js","utils/auth.js","utils/mutations.js"],"names":["SignupForm","_useState","useState","firstName","lastName","username","email","password","_useState2","Object","slicedToArray","userFormData","setUserFormData","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","_useMutation","useMutation","ADD_USER","_useMutation2","addUser","error","useEffect","handleInputChange","event","_event$target","target","name","value","objectSpread","defineProperty","handleFormSubmit","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","_yield$addUser","data","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","variables","sent","console","log","Auth","login","token","t0","stop","_x","apply","this","arguments","react_default","a","createElement","Fragment","Form","noValidate","onSubmit","Alert","dismissible","onCLose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","Button","disabled","LoginForm","LOGIN_USER","LoginForm_regeneratorRuntime","_yield$login","onClose","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Container","fluid","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","loggedIn","onClick","logout","Modal","size","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Title","Item","eventKey","Body","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","httpLink","createHttpLink","uri","authLink","setContext","_","headers","localStorage","getItem","authorization","concat","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","dist","components_Navbar","react_router_dist","path","element","MyDay_default","Month_default","Week_default","Day_default","ReactDOM","render","StrictMode","src_App","document","getElementById","AuthService","decode","getToken","isTokenExpired","exp","Date","now","err","idToken","setItem","window","location","assign","removeItem","__webpack_exports__","gql","_templateObject","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","_templateObject2","ADD_EVENT","_templateObject3","_templateObject4"],"mappings":"06NAQA,IAiJeA,EAjJI,WAAM,IAAAC,EACmBC,mBAAS,CAAEC,UAAW,GAAIC,SAAU,GAAIC,SAAU,GAAIC,MAAO,GAAIC,SAAU,KAD9FC,EAAAC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,GACdU,EADcH,EAAA,GACAI,EADAJ,EAAA,GAAAK,EAEDX,oBAAS,GAAtBY,EAFcL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,MAAAE,EAGab,oBAAS,GAHtBc,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGdE,EAHcD,EAAA,GAGHE,EAHGF,EAAA,GAAAG,EAIQC,YAAYC,KAJpBC,EAAAb,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAIdI,EAJcD,EAAA,GAIHE,EAJGF,EAAA,GAIHE,MAElBC,oBAAU,WAEFP,IADAM,IAKL,CAACA,IAEJ,IAAME,EAAoB,SAACC,GAAU,IAAAC,EACTD,EAAME,OAAtBC,EADyBF,EACzBE,KAAMC,EADmBH,EACnBG,MACdnB,EAAgBH,OAAAuB,EAAA,EAAAvB,CAAA,GAAKE,EAANF,OAAAwB,EAAA,EAAAxB,CAAA,GAAqBqB,EAAOC,MAGzCG,EAAgB,eAAAC,EAAA1B,OAAA2B,EAAA,EAAA3B,CAAA4B,IAAAC,KAAG,SAAAC,EAAOZ,GAAP,IAAAa,EAAAC,EAAA,OAAAJ,IAAAK,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACrBlB,EAAMmB,kBAGuB,IADhBnB,EAAMoB,cACVC,kBACLrB,EAAMmB,iBACNnB,EAAMsB,mBANWN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAUMtB,EAAQ,CAC3B2B,UAAUzC,OAAAuB,EAAA,EAAAvB,CAAA,GAAME,KAXH,OAAA6B,EAAAG,EAAAQ,KAUTV,EAVSD,EAUTC,KAIRW,QAAQC,IAAIZ,GACZa,IAAKC,MAAMd,EAAKlB,QAAQiC,OAfPb,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,SAiBjBS,QAAQ5B,MAARmB,EAAAc,IAjBiB,QAoBrB7C,EAAgB,CACZT,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,SAAU,KAzBO,yBAAAoC,EAAAe,SAAAnB,EAAA,kBAAH,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GA6BtB,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,YAAU,EAACtD,UAAWA,EAAWuD,SAAUnC,GAC7C6B,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,aAAW,EACXC,QAAS,kBAAMtD,GAAa,IAC5BuD,KAAMxD,EACNyD,QAAQ,UAJZ,wBAQAX,EAAAC,EAAAC,cAACE,EAAA,EAAKQ,MAAN,KACIZ,EAAAC,EAAAC,cAACE,EAAA,EAAKS,MAAN,CAAYC,QAAQ,aAApB,cACAd,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAN,CACIC,KAAK,OACLC,YAAY,aACZlD,KAAK,YACLmD,SAAUvD,EACVK,MAAOpB,EAAaR,UACpB+E,UAAQ,IAEZnB,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,2BAKJhB,EAAAC,EAAAC,cAACE,EAAA,EAAKQ,MAAN,KACIZ,EAAAC,EAAAC,cAACE,EAAA,EAAKS,MAAN,CAAYC,QAAQ,YAApB,aACAd,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAN,CACIC,KAAK,OACLC,YAAY,YACZlD,KAAK,WACLmD,SAAUvD,EACVK,MAAOpB,EAAaP,SACpB8E,UAAQ,IAEZnB,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,0BAKJhB,EAAAC,EAAAC,cAACE,EAAA,EAAKQ,MAAN,KACIZ,EAAAC,EAAAC,cAACE,EAAA,EAAKS,MAAN,CAAYC,QAAQ,YAApB,YACAd,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAN,CACIC,KAAK,OACLC,YAAY,WACZlD,KAAK,WACLmD,SAAUvD,EACVK,MAAOpB,EAAaN,SACpB6E,UAAQ,IAEZnB,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,yBAKJhB,EAAAC,EAAAC,cAACE,EAAA,EAAKQ,MAAN,KACIZ,EAAAC,EAAAC,cAACE,EAAA,EAAKS,MAAN,CAAYC,QAAQ,SAApB,SACAd,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAN,CACIC,KAAK,OACLC,YAAY,QACZlD,KAAK,QACLmD,SAAUvD,EACVK,MAAOpB,EAAaL,MACpB4E,UAAQ,IAEZnB,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,sBAKJhB,EAAAC,EAAAC,cAACE,EAAA,EAAKQ,MAAN,KACIZ,EAAAC,EAAAC,cAACE,EAAA,EAAKS,MAAN,CAAYC,QAAQ,YAApB,YACAd,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAN,CACIC,KAAK,OACLC,YAAY,WACZlD,KAAK,WACLmD,SAAUvD,EACVK,MAAOpB,EAAaJ,SACpB2E,UAAQ,IAEZnB,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,yBAIJhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIC,WAAY1E,EAAaR,WAAaQ,EAAaP,UAAYO,EAAaN,UAAYM,EAAaL,OAASK,EAAaJ,UAC3HwE,KAAK,SACLL,QAAQ,WAHZ,+xMCrIhB,IAkGeY,EAlGG,WAAM,IAAArF,EACoBC,mBAAS,CAAEI,MAAO,GAAIC,SAAU,KADpDC,EAAAC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,GACbU,EADaH,EAAA,GACCI,EADDJ,EAAA,GAAAK,EAEAX,oBAAS,GAAtBY,EAFaL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,MAAAE,EAGcb,oBAAS,GAHvBc,EAAAP,OAAAC,EAAA,EAAAD,CAAAM,EAAA,GAGbE,EAHaD,EAAA,GAGFE,EAHEF,EAAA,GAAAG,EAKOC,YAAYmE,KALnBjE,EAAAb,OAAAC,EAAA,EAAAD,CAAAU,EAAA,GAKboC,EALajC,EAAA,GAKJE,EALIF,EAAA,GAKJE,MAEhBC,oBAAU,WAEFP,IADAM,IAKL,CAACA,IAEJ,IAAME,EAAoB,SAACC,GAAU,IAAAC,EACTD,EAAME,OAAtBC,EADyBF,EACzBE,KAAMC,EADmBH,EACnBG,MACdnB,EAAgBH,OAAAuB,EAAA,EAAAvB,CAAA,GAAKE,EAANF,OAAAwB,EAAA,EAAAxB,CAAA,GAAqBqB,EAAOC,MAGzCG,EAAgB,eAAAC,EAAA1B,OAAA2B,EAAA,EAAA3B,CAAA+E,IAAAlD,KAAG,SAAAC,EAAOZ,GAAP,IAAA8D,EAAAhD,EAAA,OAAA+C,IAAA9C,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACrBlB,EAAMmB,kBAGuB,IADhBnB,EAAMoB,cACVC,kBACLrB,EAAMmB,iBACNnB,EAAMsB,mBANWN,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAUMU,EAAM,CACzBL,UAAUzC,OAAAuB,EAAA,EAAAvB,CAAA,GAAME,KAXH,OAAA8E,EAAA9C,EAAAQ,KAUTV,EAVSgD,EAUThD,KAIRW,QAAQC,IAAIZ,GACZa,IAAKC,MAAMd,EAAKc,MAAMC,OAfLb,EAAAE,KAAA,iBAAAF,EAAAC,KAAA,GAAAD,EAAAc,GAAAd,EAAA,SAiBjBS,QAAQ5B,MAARmB,EAAAc,IAjBiB,QAoBrB7C,EAAgB,CACZN,MAAO,GACPC,SAAU,KAtBO,yBAAAoC,EAAAe,SAAAnB,EAAA,kBAAH,gBAAAoB,GAAA,OAAAxB,EAAAyB,MAAAC,KAAAC,YAAA,GA0BtB,OACIC,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,YAAU,EAACtD,UAAWA,EAAWuD,SAAUnC,GAC7C6B,EAAAC,EAAAC,cAACK,EAAA,EAAD,CACIC,aAAW,EACXmB,QAAS,kBAAMxE,GAAa,IAC5BuD,KAAMxD,EACNyD,QAAQ,UAJZ,oDAQAX,EAAAC,EAAAC,cAACE,EAAA,EAAKQ,MAAN,KACIZ,EAAAC,EAAAC,cAACE,EAAA,EAAKS,MAAN,CAAYC,QAAQ,SAApB,SACAd,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAN,CACIC,KAAK,OACLC,YAAY,aACZlD,KAAK,QACLmD,SAAUvD,EACVK,MAAOpB,EAAaL,MACpB4E,UAAQ,IAEZnB,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,uBAKJhB,EAAAC,EAAAC,cAACE,EAAA,EAAKQ,MAAN,KACIZ,EAAAC,EAAAC,cAACE,EAAA,EAAKS,MAAN,CAAYC,QAAQ,YAApB,YACAd,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAN,CACIC,KAAK,WACLC,YAAY,gBACZlD,KAAK,WACLmD,SAAUvD,EACVK,MAAOpB,EAAaJ,SACpB2E,UAAQ,IAEZnB,EAAAC,EAAAC,cAACE,EAAA,EAAKW,QAAQK,SAAd,CAAuBJ,KAAK,WAA5B,0BAIJhB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CACIC,WAAY1E,EAAaL,OAASK,EAAaJ,UAC/CwE,KAAK,SACLL,QAAQ,WAHZ,YChBDiB,UArEG,WAAM,IAAA1F,EAEYC,oBAAS,GAFrBM,EAAAC,OAAAC,EAAA,EAAAD,CAAAR,EAAA,GAEf2F,EAFepF,EAAA,GAEJqF,EAFIrF,EAAA,GAItB,OACEuD,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,CAAQC,GAAG,OAAOrB,QAAQ,OAAOsB,OAAO,MACtCjC,EAAAC,EAAAC,cAACgC,EAAA,EAAD,CAAWC,OAAK,GACdnC,EAAAC,EAAAC,cAAC6B,EAAA,EAAOK,MAAR,CAAcC,GAAIC,IAAMC,GAAG,KAA3B,UAGAvC,EAAAC,EAAAC,cAAC6B,EAAA,EAAOS,OAAR,CAAeC,gBAAc,WAC7BzC,EAAAC,EAAAC,cAAC6B,EAAA,EAAOW,SAAR,CAAiBC,GAAG,UAClB3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAKC,UAAU,WAKZtD,IAAKuD,WACJ9C,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACEH,EAAAC,EAAAC,cAAC0C,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,UAAvB,SACAvC,EAAAC,EAAAC,cAAC0C,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,UAAvB,WACAvC,EAAAC,EAAAC,cAAC0C,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,SAAvB,UAEAvC,EAAAC,EAAAC,cAAC0C,EAAA,EAAIN,KAAL,CAAUS,QAASxD,IAAKyD,QAAxB,WAGFhD,EAAAC,EAAAC,cAAC0C,EAAA,EAAIN,KAAL,CAAUS,QAAS,kBAAMjB,GAAa,KAAtC,qBAOV9B,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CACEC,KAAK,KACLxC,KAAMmB,EACNsB,OAAQ,kBAAMrB,GAAa,IAC3BsB,kBAAgB,gBAEhBpD,EAAAC,EAAAC,cAACmD,EAAA,EAAInB,UAAL,CAAeoB,iBAAiB,SAC9BtD,EAAAC,EAAAC,cAAC+C,EAAA,EAAMM,OAAP,CAAcC,aAAW,GACvBxD,EAAAC,EAAAC,cAAC+C,EAAA,EAAMQ,MAAP,CAAad,GAAG,gBACd3C,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,CAAKjC,QAAQ,SACXX,EAAAC,EAAAC,cAAC0C,EAAA,EAAIc,KAAL,KACE1D,EAAAC,EAAAC,cAAC0C,EAAA,EAAIN,KAAL,CAAUqB,SAAS,SAAnB,UAEF3D,EAAAC,EAAAC,cAAC0C,EAAA,EAAIc,KAAL,KACE1D,EAAAC,EAAAC,cAAC0C,EAAA,EAAIN,KAAL,CAAUqB,SAAS,UAAnB,eAKR3D,EAAAC,EAAAC,cAAC+C,EAAA,EAAMW,KAAP,KACE5D,EAAAC,EAAAC,cAACmD,EAAA,EAAIQ,QAAL,KACE7D,EAAAC,EAAAC,cAACmD,EAAA,EAAIS,KAAL,CAAUH,SAAS,SACjB3D,EAAAC,EAAAC,cAAC6D,EAAD,CAAWC,iBAAkB,kBAAMlC,GAAa,OAElD9B,EAAAC,EAAAC,cAACmD,EAAA,EAAIS,KAAL,CAAUH,SAAS,UACjB3D,EAAAC,EAAAC,cAAC+D,EAAD,CAAYD,iBAAkB,kBAAMlC,GAAa,uBC1D3DoC,EAAWC,YAAe,CAC5BC,IAAK,aAGHC,EAAWC,YAAW,SAACC,EAADnG,GAAoB,IAAdoG,EAAcpG,EAAdoG,QACxB/E,EAAQgF,aAAaC,QAAQ,YAEnC,MAAO,CACHF,QAAQ9H,OAAAuB,EAAA,EAAAvB,CAAA,GACD8H,EADA,CAEHG,cAAelF,EAAK,UAAAmF,OAAanF,GAAU,QAKjDoF,EAAS,IAAIC,IAAa,CAC5BC,KAAMV,EAASO,OAAOV,GACtBc,MAAO,IAAIC,MAiCAC,MA9Bf,WACI,OACIlF,EAAAC,EAAAC,cAACiF,EAAA,EAAD,CAAgBN,OAAQA,GACpB7E,EAAAC,EAAAC,cAACkF,EAAA,EAAD,KACIpF,EAAAC,EAAAC,cAAAF,EAAAC,EAAAE,SAAA,KACIH,EAAAC,EAAAC,cAACmF,EAAD,MACArF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,KACItF,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACIC,KAAK,SACLC,QAASxF,EAAAC,EAAAC,cAACuF,EAAAxF,EAAD,QAEbD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACIC,KAAK,SACLC,QAASxF,EAAAC,EAAAC,cAACwF,EAAAzF,EAAD,QAEbD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACIC,KAAK,QACLC,QAASxF,EAAAC,EAAAC,cAACyF,EAAA1F,EAAD,QAEbD,EAAAC,EAAAC,cAACoF,EAAA,EAAD,CACIC,KAAK,OACLC,QAASxF,EAAAC,EAAAC,cAAC0F,EAAA3F,EAAD,aC7CrC4F,IAASC,OACL9F,EAAAC,EAAAC,cAACF,EAAAC,EAAM8F,WAAP,KACI/F,EAAAC,EAAAC,cAAC8F,EAAD,OAEJC,SAASC,eAAe,sECRtBC,uGAEE,OAAOC,YAAOtG,KAAKuG,+CAInB,IAAM5G,EAAQK,KAAKuG,WACnB,QAAS5G,IAAUK,KAAKwG,eAAe7G,0CAG5BA,GACX,IAEI,OADgB2G,YAAO3G,GACX8G,IAAMC,KAAKC,MAAQ,IAKjC,MAAOC,GACL,OAAO,sCAKX,OAAOjC,aAAaC,QAAQ,0CAG1BiC,GACFlC,aAAamC,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,sCAIvBtC,aAAauC,WAAW,YACxBH,OAAOC,SAASC,OAAO,cAIhBE,EAAA,MAAId,gKCtCN3E,EAAa0F,YAAHC,MAAAzK,OAAA0K,EAAA,EAAA1K,CAAA,iPAYVY,EAAW4J,YAAHG,MAAA3K,OAAA0K,EAAA,EAAA1K,CAAA,mXAYR4K,EAAYJ,YAAHK,MAAA7K,OAAA0K,EAAA,EAAA1K,CAAA,4iBAkBMwK,YAAHM,MAAA9K,OAAA0K,EAAA,EAAA1K,CAAA","file":"static/js/main.9f339f6e.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\nimport AddEventForm from './AddEventForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            MyTime\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              {/* <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link> */}\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to='/myDay'>MyDay</Nav.Link>\r\n                  <Nav.Link as={Link} to='/month'>MyMonth</Nav.Link>\r\n                  <Nav.Link as={Link} to='/week'>MyWeek</Nav.Link>\r\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport Day from './pages/Day';\r\nimport Month from './pages/Month';\r\nimport MyDay from './pages/MyDay';\r\nimport Week from './pages/Week';\r\nimport Navbar from './components/Navbar';\r\nimport { setContext } from '@apollo/client/link/context';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('id_token');\r\n\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n        },\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <>\r\n                    <Navbar />\r\n                    <Routes>\r\n                        <Route\r\n                            path='/myDay'\r\n                            element={<MyDay />}\r\n                        />\r\n                        <Route\r\n                            path='/month'\r\n                            element={<Month />}\r\n                        />\r\n                        <Route  \r\n                            path='/week'\r\n                            element={<Week />}\r\n                        />\r\n                        <Route\r\n                            path='/day'\r\n                            element={<Day />}\r\n                        />\r\n                    </Routes>\r\n                </>\r\n            </Router>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\r\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_EVENT = gql`\r\n    mutation addEvent($eventUser: String!, $eventDate: String!, $eventTime: String!, $eventTitle: String!, $eventDescription: String!) {\r\n        addEvent(eventUser: $eventUser, eventDate: $eventDate, eventTime: $eventTime, eventDescription: $eventDescription) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nexport const REMOVE_EVENT = gql`\r\n    mutation removeEvent($eventId: ID!) {\r\n        removeEvent(eventId: $eventId) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;"],"sourceRoot":""}