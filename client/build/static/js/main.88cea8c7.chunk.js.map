{"version":3,"sources":["components/AddEventForm/index.js","utils/auth.js","utils/dateFormat.js","components/DayBox/index.js","components/Week/index.js","components/MonthFormat/index.js","utils/dateFunctions.js","pages/MyMonth.js","pages/MyDay.js","components/GetStarted/index.js","components/SignupForm/index.js","components/LoginForm/index.js","components/NavBar.js","components/Footer/index.js","App.js","index.js","utils/mutations.js","utils/queries.js"],"names":["AddEventForm","_ref","eventDate","console","log","myDate","Date","parseInt","monthNum","getMonth","dateNum","getDate","yearNum","getFullYear","_useState","useState","eventUser","eventTitle","eventDescription","_useState2","Object","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","eventFormData","setEventFormData","_useQuery","useQuery","QUERY_ME","data","loading","userData","me","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_readOnlyError__WEBPACK_IMPORTED_MODULE_4__","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","username","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","_useMutation","useMutation","ADD_EVENT","_useMutation2","addEvent","error","useEffect","handleInputChange","event","_event$target","target","name","value","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__","handleFormSubmit","_ref2","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_0__","_regeneratorRuntime","mark","_callee","_yield$addEvent","_data","wrap","_context","prev","next","preventDefault","currentTarget","checkValidity","stopPropagation","variables","sent","t0","stop","_x","apply","this","arguments","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","react_bootstrap__WEBPACK_IMPORTED_MODULE_6__","noValidate","onSubmit","react_bootstrap__WEBPACK_IMPORTED_MODULE_7__","dismissible","onClose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","e","setImmediate","required","Feedback","react_bootstrap__WEBPACK_IMPORTED_MODULE_8__","disabled","title","onClick","auth","decode","getToken","token","isTokenExpired","exp","getTime","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getNumDays","year","includes","div4","div100","div400","getFirstWeekDay","getDay","getMonthName","DayBox","dayDate","events","showDescription","showDescPreview","react_default","Col","dist","to","key","className","map","Container","Row","Week","days","weekStart","_ref$monthView","monthView","concat","day","components_DayBox","MonthFormat","firstWeekDay","numDays","monthDays","dayOffset","monthWeeks","i","push","j","daySq","length","currLength","fillSpace","k","m","n","p","week","components_Week","getNextDay","timestamp","MyMonth","currTime","useParams","myEvents","month","monthEvents","handleNextMonthBtn","asyncToGenerator","nextMonth","timeParam","setMonth","abrupt","react_router_dist","handlePrevMonthBtn","_callee2","prevMonth","_context2","_x2","Button","components_MonthFormat","MyDay","slicedToArray","showModal","setShowModal","setHours","setMinutes","setSeconds","setMilliseconds","dayName","dayNum","getDayName","monthName","todayEvents","fluid","firstName","Modal","size","onHide","aria-labelledby","Header","closeButton","Title","id","GetStarted","SignupForm","lastName","email","password","userFormData","setUserFormData","ADD_USER","addUser","objectSpread","defineProperty","SignupForm_regeneratorRuntime","_yield$addUser","Auth","login","Fragment","Form","Alert","onCLose","LoginForm","LOGIN_USER","LoginForm_regeneratorRuntime","_yield$login","AppNavbar","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","Nav","loggedIn","logout","Tab","defaultActiveKey","Item","eventKey","Body","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","Footer","useLocation","navigate","useNavigate","pathname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","NavBar","path","element","pages_MyDay","components_GetStarted","pages_MyMonth","MyWeek_default","components_Footer","ReactDOM","render","StrictMode","src_App","document","getElementById","gql","_templateObject","C_Users_olivi_Documents_gt_bootcamp_projects_my_time_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_taggedTemplateLiteral__WEBPACK_IMPORTED_MODULE_0__","_templateObject2","_templateObject3","_templateObject4"],"mappings":"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","file":"static/js/main.88cea8c7.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Form, Button, Alert } from 'react-bootstrap';\n\nimport { useMutation, useQuery } from '@apollo/client';\nimport { ADD_EVENT } from '../../utils/mutations';\nimport { QUERY_ME } from '../../utils/queries';\n\nconst AddEventForm = ({\n  eventDate,\n}) => {\n  console.log(\"----- Event Date ----- AddEventForm\");\n  console.log(eventDate);\n\n  let myDate = new Date (parseInt(eventDate));\n  let monthNum = myDate.getMonth() + 1;\n  let dateNum = myDate.getDate();\n  let yearNum = myDate.getFullYear();\n\n  const [eventFormData, setEventFormData] = useState({ eventUser: '', eventDate: '', eventTitle: '', eventDescription: ''});\n\n  const { loading, data } = useQuery(QUERY_ME);\n  const userData = {};\n\n  if (data) {\n    userData = data.me;\n    setEventFormData({ ...eventFormData, eventUser: userData.username });\n  }\n  if (eventDate) {\n    setEventFormData({ ...eventFormData, eventDate: myDate });\n  }\n\n  const [validated] = useState(false);\n\n  const [showAlert, setShowAlert] = useState(false);\n\n  const [addEvent, {error}] = useMutation(ADD_EVENT);\n\n  useEffect(() => {\n    if (error) {\n      setShowAlert(true);\n    } else {\n      setShowAlert(false);\n    }\n  }, [error])\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setEventFormData({ ... eventFormData, [name]: value });\n  };\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation(); \n    }\n\n    try {\n      const {data} = await addEvent({\n        variables: { ...eventFormData },\n      });\n      console.log(data);\n    } catch (err) {\n      console.error(err);\n      setShowAlert(true);\n    }\n\n    if (eventDate) {\n      setEventFormData({\n        eventUser: userData.username,\n        eventDate: myDate,\n        eventTitle: '',\n        eventDescription: '',\n      });\n    } else {\n      setEventFormData({\n        eventUser: userData.username,\n        eventDate: '',\n        eventTitle: '',\n        eventDescription: '',\n      });\n    }\n  };\n\n  return (\n    <div>\n      <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\n        <Alert dismissible onClose={() => setShowAlert(false)} show={showAlert} variant='danger'>\n          Something went wrong adding your event\n        </Alert>\n\n        {eventDate ? (\n          <div>\n            <h3>Event Date</h3>\n            <p>{monthNum}/{dateNum}/{yearNum}</p>\n          </div>\n        ) : (\n          <Form.Group>\n            <Form.Label htmlFor='eventDate'>Event Date</Form.Label>\n            <Form.Control\n              type='date'\n              placeholder='date'\n              name='eventDate'\n              onChange={(e) => setImmediate(e.target.value)}\n              value={eventFormData.eventDate}\n            />\n          </Form.Group>\n        )}\n\n        <Form.Group>\n          <Form.Label htmlFor='eventTitle'>Title</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Title'\n            name='eventTitle'\n            value={eventFormData.eventTitle}\n            onChange={handleInputChange}\n            required\n          />\n          <Form.Control.Feedback type='invalid'>Title is required</Form.Control.Feedback>\n        </Form.Group>\n\n        <Form.Group>\n          <Form.Label htmlFor='eventDescription'>Description</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Description'\n            name='eventDescription'\n            onChange={handleInputChange}\n            value={eventFormData.eventDescription}\n          />\n        </Form.Group>\n        <Button\n          disabled={!(eventFormData.title)}\n          type='submit'\n          variant='success'\n          onClick={handleFormSubmit}>\n            Add Event\n        </Button>\n      </Form>\n    </div>\n  );\n};\n\nexport default AddEventForm;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.getTime() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","// returns the number of days in the month, if the month is february, checks to see if it is a leap year\r\nexport const getNumDays = (monthNum, year) => {\r\n    // if the month number is 1, 3, 5, 7, 8, 10, 12 (jan, mar, may, jul, aug, oct, dec), the month has 31 days\r\n    if ([1,3,5,7,8,10,12].includes(monthNum)) {\r\n        return 31;\r\n    }\r\n    // if the month number is 4, 6, 9, 11 (apr, june, sept, nov), the month has 30 days\r\n    if ([4,6,9,11].includes(monthNum)) {\r\n        return 30;\r\n    }\r\n    // if the month number is 2 (february)\r\n    if (monthNum === 2) {\r\n        // check if year is a leap year\r\n        /*\r\n            rules:\r\n                years divisible by 400 ARE leap years\r\n                years divisible by 100 but not by 400 are NOT leap years\r\n                years divisible by 4 but not by 100 ARE leap years\r\n                years not divisible by 4 are NOT leap years \r\n\r\n                if year divisible by 4 ((year % 4) == 0) \r\n                    if year divisible by 100 ((year % 100) == 0)\r\n                        if year divisible by 400 ((year % 400) == 0)\r\n                            leap year\r\n                        else\r\n                            not leap year\r\n                    else\r\n                        leap year\r\n                else\r\n                    not leap year \r\n        */\r\n        // boolean variable to indicate whether year is evenly divisible by 4\r\n        var div4 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 100\r\n        var div100 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 400\r\n        var div400 = false;\r\n            \r\n        // sets div4 to true if the year is evenly divisible by 4\r\n        if ((year % 4) === 0) {\r\n            div4 = true;\r\n        }\r\n        // sets div100 to true if the year is evenly divisible by 100\r\n        if ((year % 100) === 0) {\r\n            div100 = true;\r\n        }\r\n        // sets div400 to true is the year is evenly divisible by 400\r\n        if ((year % 400) === 0) {\r\n            div400 = true;\r\n        }\r\n\r\n        if ((div4 && !div100) || (div4 && div100 && div400)) {\r\n            return 29;\r\n        } else {\r\n            return 28;\r\n        }\r\n    }\r\n};\r\n\r\n// given a month and year, determines the day of the week the firs tof the month falls on and returns the integer\r\nexport const getFirstWeekDay = (monthNum, year) => {\r\n    console.log(\"----- getFirstWeekDay ----- dateFormat:65\");\r\n    console.log(\"monthNum:\");\r\n    console.log(monthNum);\r\n    console.log(\"year:\");\r\n    console.log(year);\r\n    const firstDay = new Date(year, monthNum, 1);\r\n    // return first day of the month (numbers 0-6)\r\n    return firstDay.getDay();\r\n};\r\n\r\n// given the number of the day of the week, determines and returns the name of the day\r\nexport const getDayName = (dayNum) => {\r\n    console.log(\"----- dayNum ----- (client/src/utils/dateFormat:71) -----\");\r\n    console.log(dayNum);\r\n    switch (dayNum) {\r\n        case 0:\r\n            return \"Sunday\";\r\n        case 1:\r\n            return \"Monday\";\r\n        case 2:\r\n            return \"Tuesday\";\r\n        case 3:\r\n            return \"Wednesday\";\r\n        case 4:\r\n            return \"Thursday\";\r\n        case 5:\r\n            return \"Friday\";\r\n        case 6:\r\n            return \"Saturday\";\r\n        default:\r\n            return \"WeekDayErr\";\r\n    }\r\n};\r\n\r\n// given the number of the month, determines and returns the name of the month\r\nexport const getMonthName = (monthNum) => {\r\n    //const monthNum = monthNum;\r\n    switch (monthNum) {\r\n        case 0:\r\n            return \"January\";\r\n        case 1:\r\n            return \"February\";\r\n        case 2:\r\n            return \"March\";\r\n        case 3:\r\n            return \"April\";\r\n        case 4:\r\n            return \"May\";\r\n        case 5:\r\n            return \"June\";\r\n        case 6:\r\n            return \"July\";\r\n        case 7:\r\n            return \"August\";\r\n        case 8:\r\n            return \"September\";\r\n        case 9:\r\n            return \"October\";\r\n        case 10:\r\n            return \"November\";\r\n        case 11:\r\n            return \"December\";\r\n        default:\r\n            return \"MonthNameErr\";\r\n    }\r\n};\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\nimport events from 'inquirer/lib/utils/events';\r\n\r\nconst DayBox = ({\r\n    dayDate, \r\n    events,\r\n    showDescription = true,\r\n    showDescPreview = true,\r\n    //showEventDate = true,\r\n}) => {\r\n    if (dayDate.getDate() === 0) {\r\n        return (\r\n            <Col></Col>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Link to={`/days/dayDate`}>\r\n            <Col key={dayDate.getTime()}>\r\n                <div className=\"card\">\r\n                    <h4 className=\"card-header bg-primary\">\r\n                        {dayDate.getDate()}\r\n                    </h4>\r\n                    {events && events.map((event) => (\r\n                        <Container className=\"card-body\">\r\n                            <Row>\r\n                                <p>{event.eventTitle}</p>\r\n                            </Row>\r\n                        </Container>\r\n                    ))}\r\n                </div>\r\n            </Col>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default DayBox;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport events from 'inquirer/lib/utils/events';\r\nimport DayBox from '../DayBox';\r\n\r\nconst Week = ({\r\n    days, \r\n    weekStart,\r\n    monthView = true,\r\n}) => {\r\n\r\n    return (\r\n        <div>\r\n            {monthView ? (\r\n                <Row>\r\n                    <Link to={`/myWeek/${weekStart}`}>\r\n                        <Col>week</Col>\r\n                    </Link>\r\n                    {days && days.map((day) => (\r\n                        <DayBox\r\n                            dayDate={day.dayDate}\r\n                            events={day.events}\r\n                            showDescription={false}\r\n                            showDescPreview={false}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n            ) : (\r\n                <Row>\r\n                    {days && days.map((day) => (\r\n                        <DayBox\r\n                            dayDate={day.dayDate}\r\n                            events={day.events}\r\n                            showDescription={false}\r\n                            showDescPreview={true}\r\n                        />\r\n                    ))}\r\n                </Row>\r\n            )}   \r\n        </div>          \r\n    );\r\n};\r\n\r\nexport default Week;","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\n\r\nimport { ADD_EVENT } from '../../utils/mutations';\r\n\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nimport Auth from '../../utils/auth';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../../utils/dateFormat';\r\nimport events from 'inquirer/lib/utils/events';\r\nimport Week from '../Week';\r\n\r\n\r\nconst MonthFormat = ({\r\n    monthNum,\r\n    year,\r\n    firstWeekDay,\r\n    numDays,\r\n    events,\r\n}) => {\r\n\r\n    const monthDays = [];\r\n    const dayOffset = firstWeekDay;\r\n    const monthWeeks = [];\r\n\r\n    for (var i = 0; i < firstWeekDay; i++) {\r\n        const notDay = {\r\n            dayDate: 0,\r\n            events: [],\r\n        };\r\n        monthDays.push(notDay);\r\n    }\r\n    for (var j = 0; j < numDays; j++) {\r\n        const daySq = {\r\n            dayDate: (new Date(year, monthNum, j)).getTime(),\r\n            events:[]\r\n        };\r\n        monthDays.push(daySq);\r\n    }\r\n    if (((monthDays.length) % 7) !== 0) {\r\n        const currLength = monthDays.length;\r\n        const fullWeeks = currLength % 7;\r\n        const leftOver = currLength - (fullWeeks * 7);\r\n        const fillSpace = 7 - leftOver;\r\n\r\n        for (var k = 0; k < fillSpace; k++) {\r\n            const notDay = {\r\n                dayDate: 0,\r\n                events: [],\r\n            };\r\n            monthDays.push(notDay);\r\n        }\r\n    }\r\n\r\n    for (var m = 0; m < (monthDays.length)/7; m++) {\r\n        for (var n = m*7; n < monthDays.length; n++) {\r\n            monthWeeks[m].push(monthDays[n]);\r\n        }\r\n    }\r\n\r\n    for (var p = 0; p < events; p++) {\r\n        if (events[p].eventDate && events[p].eventDate.getMonth() === monthNum) {\r\n            monthDays[dayOffset + events[p].eventDate.getDate()].events.push(events[p]);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Col>Week</Col>\r\n                    <Col>Sunday</Col>\r\n                    <Col>Monday</Col>\r\n                    <Col>Tuesday</Col>\r\n                    <Col>Wednesday</Col>\r\n                    <Col>Thursday</Col>\r\n                    <Col>Friday</Col>\r\n                    <Col>Saturday</Col>\r\n                </Row>\r\n                {monthWeeks && monthWeeks.map((week) => (\r\n                    <Week\r\n                        days={week.days}\r\n                        monthView={true}\r\n                    />\r\n                ))}\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MonthFormat;","import { getNumDays } from './dateFormat';\r\n\r\n// number of milliseconds in one day\r\nconst MS_PER_DAY = 86400000;\r\n\r\n// given a date (in milliseconds), determines the start of the month and returns the date in milliseconds\r\nexport const getMonthStart = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const monthStart = new Date(year, month, 1, 0, 0, 0, 0);\r\n    const monthStartMS = monthStart.getTime();\r\n\r\n    return monthStartMS;\r\n};\r\n\r\n// given the date (in milliseconds), determines the last millisecond of the month and returns\r\nexport const getMonthEnd = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const numDays = getNumDays(month, year);\r\n\r\n    const monthEnd = new Date(year, month, numDays, 23, 59, 59, 999);\r\n\r\n    return monthEnd;\r\n};\r\n\r\n// given the date (in milliseconds), determines the first millisecond of the week and returns\r\nexport const getWeekStart = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const sundayDate = dateNum - weekDay;\r\n\r\n    const weekStart = new Date(year, month, sundayDate, 0, 0, 0, 0);\r\n\r\n    return weekStart;\r\n};\r\n\r\n// given the date (in milliseconds), determines the last millisecond of the week and returns\r\nexport const getWeekEnd = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const satOffset = 6 - weekDay;\r\n    const saturdayDate = dateNum + satOffset;\r\n\r\n    const weekEnd = new Date(year, month, saturdayDate, 23, 59, 59, 999);\r\n\r\n    return weekEnd;\r\n};\r\n\r\n// given the date (in milliseconds), determines and returns the first millisecond of the day\r\nexport const getDayStart = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayStart = new Date(year, month, dateNum, 0, 0, 0, 0);\r\n\r\n    return dayStart;\r\n};\r\n\r\n// given the date (in milliseconds), determines and returns the last millisecond of the day\r\nexport const getDayEnd = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayEnd = new Date(year, month, dateNum, 23, 59, 59, 999);\r\n\r\n    return dayEnd;\r\n};\r\n\r\n// given the date (in milliseconds), determines the current date, sets date to next month, returns new date in milliseconds\r\nexport const getNextMonth = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 11) {\r\n        myTime.setFullYear(year++);\r\n        myTime.setMonth(0);\r\n    } else {\r\n        myTime.setMonth(month++);\r\n    }\r\n\r\n    const myTimeMS = myTime.getTime();\r\n\r\n    return myTimeMS;\r\n};\r\n\r\n// given the date (in milliseconds), determines the current date, sets date to previous month, returns new date in milliseconds\r\nexport const getPrevMonth = (timestamp) => {\r\n    const myTime = new Date(parseInt(timestamp));\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 0) {\r\n        myTime.setFullYear(year--);\r\n        myTime.setMonth(11);\r\n    } else {\r\n        myTime.setMonth(month--);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\n// given the date (in milliseconds), adds 7 days (in milliseconds) to change the date to the following week, returns new date in milliseconds\r\nexport const getNextWeek = (timestamp) => {\r\n\r\n    const nextWeekMS = parseInt(timestamp) + (7 * MS_PER_DAY);\r\n    \r\n    return nextWeekMS;\r\n};\r\n\r\n// given the date (in milliseconds), subtracts 7 days (in milliseconds) to change the date ot the previous week, returns new date in milliseconds\r\nexport const getPrevWeek = (timestamp) => {\r\n    \r\n    const prevWeekMS = parseInt(timestamp) - (7 * MS_PER_DAY);\r\n\r\n    return prevWeekMS;\r\n};\r\n\r\n// given the date (in milliseconds), adds 24 hours (in milliseconds) to change the date to the next day, returns new date in milliseconds\r\nexport const getNextDay = (timestamp) => {\r\n    \r\n    const nextDayMS = parseInt(timestamp) + (MS_PER_DAY);\r\n\r\n    return nextDayMS;\r\n};\r\n\r\n// given the date (in milliseconds), subtracts 24 hours (in milliseconds) to change the date to the previous day, returns new date in milliseconds\r\nexport const getPrevDay = (timestamp) => {\r\n    \r\n    const prevDayMS = parseInt(timestamp) - (MS_PER_DAY);\r\n\r\n    return prevDayMS;\r\n};","import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nimport MonthFormat from '../components/MonthFormat';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\r\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\r\n\r\n// import { QUERY_EVENTS, QUERY_ME } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\n\r\nconst MyMonth = () => {\r\n    const { currTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    let userData = {};\r\n\r\n    if (data) {\r\n        userData = data.me;\r\n    }\r\n\r\n    console.log(\"----- user data: -----\");\r\n    console.log(userData);\r\n    const myEvents = userData.events;\r\n    console.log(\"----- my events: -----\");\r\n    console.log(myEvents);\r\n\r\n    const myDate = new Date(parseInt(currTime));\r\n    let month = myDate.getMonth();\r\n    let year = myDate.getFullYear();\r\n\r\n    const monthEvents = [];\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        if (myEvents[i].eventDate.getMonth() === month && myEvents[i].eventDate.getFullYear() === year) {\r\n            monthEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n     \r\n\r\n    const handleNextMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        const nextMonth = myDate.setMonth(month++);\r\n        const timeParam = nextMonth.getTime();\r\n        return <Navigate to={`/myMonth/${timeParam}`} />;\r\n    };\r\n    \r\n\r\n    const handlePrevMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const prevMonth = myDate.setMonth(month--);\r\n        const timeParam = prevMonth.getTime();\r\n\r\n        return <Navigate to={`/myMonth/${timeParam}`} />;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Button onClick={handlePrevMonthBtn}>Prev Month</Button>\r\n                    <h3>{getMonthName(myDate.getMonth())}</h3>\r\n                    <Button onClick={handleNextMonthBtn}>Next Month</Button>\r\n                </Row>\r\n                <Row>\r\n                    <MonthFormat\r\n                        monthNum={myDate.getMonth()}\r\n                        year={myDate.getFullYear()}\r\n                        firstWeekDay={getFirstWeekDay(currTime)}\r\n                        numDays={getNumDays(myDate.getMonth())}\r\n                        events={myEvents}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default MyMonth;","import React, { useState } from 'react';\r\nimport { Navigate, useParams, Link } from 'react-router-dom';\r\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport { ADD_EVENT } from '../utils/mutations';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName } from '../utils/dateFormat';\r\nimport { getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFunctions';\r\nimport AddEventForm from '../components/AddEventForm';\r\n\r\nconst MyDay = () => {\r\n    const [ showModal, setShowModal ] = useState(false);\r\n    const { currTime } = useParams();\r\n    const {loading, data } = useQuery(QUERY_ME);\r\n\r\n    const [addEvent, { error }] = useMutation(ADD_EVENT);\r\n\r\n    let myDate = new Date ();\r\n    if (currTime) {\r\n        myDate = new Date (parseInt(currTime));\r\n    }\r\n    myDate.setHours(0);\r\n    myDate.setMinutes(0);\r\n    myDate.setSeconds(0);\r\n    myDate.setMilliseconds(0);\r\n\r\n    let userData = {};\r\n    let myEvents = {};\r\n\r\n    if (data) {\r\n        userData = data.me;\r\n        myEvents = userData.events;\r\n    } \r\n\r\n    let monthNum = myDate.getMonth();\r\n    let yearNum = myDate.getFullYear();\r\n    let dateNum = myDate.getDate();\r\n    let dayName = getDayName(myDate.getDay());\r\n    let monthName = getMonthName(monthNum);\r\n\r\n    let todayEvents = [];\r\n\r\n    for (let i = 0; i < myEvents; i++) {\r\n        if (myEvents[i].eventDate === myDate.getTime()) {\r\n            todayEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n\r\n    if (loading) {\r\n        return <h2>LOADING...</h2>;\r\n    }\r\n\r\n    // const prevDay = (event) => {\r\n    //     event.preventDefault();\r\n    //     console.log(myDate);\r\n    //     console.log('prevDay button clicked');\r\n    //     myDate.setDate(dateNum--);\r\n    //     console.log(myDate);\r\n    //     const timeParam = myDate.getTime();\r\n    //     return <Navigate to={`/myDay/${timeParam}`} />;\r\n    // };\r\n\r\n    // const nextDay = (event) => {\r\n    //     event.preventDefault();\r\n    //     console.log(myDate);\r\n    //     console.log('nextDay button clicked');\r\n    //     myDate.setDate(dateNum++);\r\n    //     console.log(myDate);\r\n    //     const timeParam = myDate.getTime();\r\n    //     return <Navigate to={`/myDate/${timeParam}`} />;\r\n    // };\r\n\r\n    return (\r\n        <div>\r\n            <div fluid className=\"jumbotron text-light bg-dark\">\r\n                <Container>\r\n                    <Row>\r\n                        <h1>{userData.firstName}'s Day</h1>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <Link to={`/myDay/${getPrevDay(myDate.getTime())}`}>{'<'}</Link>\r\n                        </Col>\r\n                        <Col><h2>{dayName}, {monthName} {dateNum}, {yearNum}</h2></Col>\r\n                        <Col>\r\n                            <Link to={`/myDay/${getNextDay(myDate.getTime())}`}>{'>'}</Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n            <Container className=\"card\">\r\n                <Container className=\"card-header\">\r\n                    <h3>Today's Events</h3>\r\n                </Container>\r\n                <Container className=\"card-body\">\r\n                    {todayEvents && todayEvents.map((event) => (\r\n                        <Row>\r\n                            <p>{event.eventTitle}</p>\r\n                        </Row>\r\n                    ))}\r\n                    <Row>\r\n                        <Button onClick={() => setShowModal(true)}>Add Event</Button>\r\n                    </Row>\r\n                </Container>\r\n            </Container>\r\n            <Modal\r\n                size='lg'\r\n                show={showModal}\r\n                onHide={() => setShowModal(false)}\r\n                aria-labelledby='addEvent-modal'>\r\n\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title id='addEvent-modal'>New Event</Modal.Title>\r\n                    <AddEventForm\r\n                        eventDate={myDate.getTime()}\r\n                    />\r\n                </Modal.Header>\r\n            </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyDay;\r\n","import React from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Navigate, BrowserRouter as Router, Link } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n// import { QUERY_MATCHUPS } from '../utils/queries';\r\n\r\nconst GetStarted = () => {\r\n\r\n    const currDate = new Date();\r\n    const currTime = currDate.getTime();\r\n\r\n    const myDayNav = (event) => {\r\n        event.preventDefault();\r\n\r\n        const currTime = new Date();\r\n        const timeParam = currTime.getTime();\r\n        return <Navigate to={`/myDay/${timeParam}`} />;\r\n    };\r\n\r\n    // was in space below:\r\n    /*\r\n        {Auth.loggedIn() ? (\r\n                    <Link to={`myDay/${currTime}`}>\r\n                        <button>See MyDay</button>\r\n                    </Link>\r\n                ) : (\r\n\r\n                )}\r\n    */\r\n\r\n    return (\r\n            <div>\r\n                <h1>Get Started with MyTime</h1>\r\n                \r\n                <Button className=\"btn btn-lg btn-light m-2\" onClick={myDayNav}>\r\n                    See MyDay\r\n                </Button>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default GetStarted;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../../utils/mutations';\r\n\r\nimport Auth from '../../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\nimport AddEventForm from './AddEventForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            MyTime\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              {/* <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link> */}\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to={`myDay/${currTime}`}>MyDay</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myMonth/${currTime}`}>MyMonth</Nav.Link>\r\n                  <Nav.Link as={Link} to={`myWeek/${currTime}`}>MyWeek</Nav.Link>\r\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport MyMonth from './pages/MyMonth';\r\nimport MyDay from './pages/MyDay';\r\nimport Week from './pages/MyWeek';\r\n//import Home from './components/Home';\r\nimport GetStarted from './components/GetStarted';\r\nimport Navbar from './components/NavBar';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nimport Auth from './utils/auth';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('id_token');\r\n\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n        },\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n});\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n// space used to contain \"<Header />\"\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    \r\n                    <div className=\"container\">\r\n                        <Navbar />\r\n                        <Routes>\r\n                            {Auth.loggedIn() ? (\r\n                                <Route\r\n                                path='/'\r\n                                element={<MyDay />}\r\n                                />\r\n                            ) : (\r\n                                <Route \r\n                                path='/'\r\n                                element={<GetStarted />}\r\n                                />\r\n                            )}\r\n                            <Route\r\n                                path=\"/myMonth/:currTime\"\r\n                                element={<MyMonth />}\r\n                            />\r\n                            <Route  \r\n                                path=\"/myWeek/:currTime\"\r\n                                element={<Week />}\r\n                            />\r\n                            <Route\r\n                                path=\"/myDay/:currTime\"\r\n                                element={<MyDay />}\r\n                            />\r\n                        </Routes>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);","import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\r\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_EVENT = gql`\r\n    mutation addEvent($eventUser: String!, $eventDate: String!, $eventTitle: String!, $eventDescription: String!) {\r\n        addEvent(eventUser: $eventUser, eventDate: $eventDate, eventDescription: $eventDescription) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nexport const REMOVE_EVENT = gql`\r\n    mutation removeEvent($eventId: ID!) {\r\n        removeEvent(eventId: $eventId) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_ME = gql`\r\n    {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// export const QUERY_EVENTS = gql`\r\n//     query getMyEvents($timeStart: Date!, $timeEnd: Date!) {\r\n//         events {\r\n//             _id\r\n//             eventUser\r\n//             eventDate\r\n//             eventTitle\r\n//             eventDescription\r\n//         }\r\n//     }\r\n// `;"],"sourceRoot":""}