{"version":3,"sources":["utils/mutations.js","utils/auth.js","utils/dateFormat.js","utils/queries.js","pages/Month.js","pages/MyDay.js","components/SignupForm.js","components/LoginForm.js","components/NavBar.js","components/Footer/index.js","App.js","index.js"],"names":["LOGIN_USER","gql","_templateObject","Object","taggedTemplateLiteral","ADD_USER","_templateObject2","ADD_EVENT","_templateObject3","_templateObject4","auth","decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","getNumDays","monthNum","year","includes","div4","div100","div400","getFirstWeekDay","getDay","getMonthName","QUERY_ME","queries_templateObject","Month","myTime","useParams","_useQuery","useQuery","loading","data","userData","me","console","log","myEvents","events","myDate","month","getMonth","getFullYear","monthEvents","i","length","eventDate","push","handleNextMonthBtn","_ref","asyncToGenerator","_regeneratorRuntime","mark","_callee","event","nextMonth","timeParam","wrap","_context","prev","next","preventDefault","setMonth","getTime","abrupt","react_default","a","createElement","react_router_dist","to","concat","stop","_x","apply","arguments","handlePrevMonthBtn","_ref2","_callee2","prevMonth","_context2","_x2","Container","Row","Button","onClick","firstWeekDay","numDays","MyDay","_useState","useState","_useState2","slicedToArray","_useMutation","useMutation","_useMutation2","error","todayEvents","day","getDate","dayName","dayNum","getDayName","monthName","currEventDate","fluid","className","firstName","SignupForm","lastName","username","email","password","userFormData","setUserFormData","_useState3","validated","_useState5","_useState6","showAlert","setShowAlert","addUser","useEffect","handleInputChange","_event$target","target","name","value","objectSpread","defineProperty","handleFormSubmit","SignupForm_regeneratorRuntime","_yield$addUser","currentTarget","checkValidity","stopPropagation","variables","sent","Auth","login","t0","Fragment","Form","noValidate","onSubmit","Alert","dismissible","onCLose","show","variant","Group","Label","htmlFor","Control","type","placeholder","onChange","required","Feedback","disabled","LoginForm","LoginForm_regeneratorRuntime","_yield$login","onClose","AppNavbar","showModal","setShowModal","Navbar","bg","expand","Brand","as","Link","Toggle","aria-controls","Collapse","id","Nav","loggedIn","logout","Modal","size","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Title","Item","eventKey","Body","Content","Pane","components_LoginForm","handleModalClose","components_SignupForm","Footer","useLocation","navigate","useNavigate","pathname","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","cache","InMemoryCache","App","ApolloProvider","dist","NavBar","path","element","pages_MyDay","pages_Month","Week_default","components_Footer","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.86b76934.chunk.js","sourcesContent":["import { gql } from '@apollo/client';\r\n\r\nexport const LOGIN_USER = gql`\r\n    mutation login($email: String!, $password: String!) {\r\n        login(email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_USER = gql`\r\n    mutation addUser($firstName: String!, $lastName: String!, $username: String!, $email: String!, $password: String!) {\r\n        addUser(firstName: $firstName, lastName: $lastName, username: $username, email: $email, password: $password) {\r\n            token\r\n            user {\r\n                _id\r\n                username\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const ADD_EVENT = gql`\r\n    mutation addEvent($eventUser: String!, $eventDate: String!, $eventTime: String!, $eventTitle: String!, $eventDescription: String!) {\r\n        addEvent(eventUser: $eventUser, eventDate: $eventDate, eventTime: $eventTime, eventDescription: $eventDescription) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    } \r\n`;\r\n\r\nexport const REMOVE_EVENT = gql`\r\n    mutation removeEvent($eventId: ID!) {\r\n        removeEvent(eventId: $eventId) {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n    getProfile() {\r\n        return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n        const token = this.getToken();\r\n        return !!token && !this.isTokenExpired(token);\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n        try {\r\n            const decoded = decode(token);\r\n            if (decoded.exp < Date.now() / 1000) {\r\n                return true;\r\n            } else {\r\n                return false;\r\n            }\r\n        } catch (err) {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    getToken() {\r\n        return localStorage.getItem('id_token');\r\n    }\r\n\r\n    login(idToken) {\r\n        localStorage.setItem('id_token', idToken);\r\n        window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n        localStorage.removeItem('id_token');\r\n        window.location.assign('/');\r\n    }\r\n}\r\n\r\nexport default new AuthService();","const daysToMS = (numDays) => {\r\n    const numMS = numDays * 24 * 60 * 60 * 1000;\r\n    return numMS;\r\n}\r\n\r\nexport const getNumDays = (monthNum, year) => {\r\n    // if the month number is 1, 3, 5, 7, 8, 10, 12 (jan, mar, may, jul, aug, oct, dec), the month has 31 days\r\n    if ([1,3,5,7,8,10,12].includes(monthNum)) {\r\n        return 31;\r\n    }\r\n    // if the month number is 4, 6, 9, 11 (apr, june, sept, nov), the month has 30 days\r\n    if ([4,6,9,11].includes(monthNum)) {\r\n        return 30;\r\n    }\r\n    // if the month number is 2 (february)\r\n    if (monthNum === 2) {\r\n        // check if year is a leap year\r\n        /*\r\n            rules:\r\n                years divisible by 400 ARE leap years\r\n                years divisible by 100 but not by 400 are NOT leap years\r\n                years divisible by 4 but not by 100 ARE leap years\r\n                years not divisible by 4 are NOT leap years \r\n\r\n                if year divisible by 4 ((year % 4) == 0) \r\n                    if year divisible by 100 ((year % 100) == 0)\r\n                        if year divisible by 400 ((year % 400) == 0)\r\n                            leap year\r\n                        else\r\n                            not leap year\r\n                    else\r\n                        leap year\r\n                else\r\n                    not leap year \r\n        */\r\n        // boolean variable to indicate whether year is evenly divisible by 4\r\n        var div4 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 100\r\n        var div100 = false;\r\n        // boolean variable to indicate whether year is evenly divisible by 400\r\n        var div400 = false;\r\n            \r\n        // sets div4 to true if the year is evenly divisible by 4\r\n        if ((year % 4) === 0) {\r\n            div4 = true;\r\n        }\r\n        // sets div100 to true if the year is evenly divisible by 100\r\n        if ((year % 100) === 0) {\r\n            div100 = true;\r\n        }\r\n        // sets div400 to true is the year is evenly divisible by 400\r\n        if ((year % 400) === 0) {\r\n            div400 = true;\r\n        }\r\n\r\n        if ((div4 && !div100) || (div4 && div100 && div400)) {\r\n            return 29;\r\n        } else {\r\n            return 28;\r\n        }\r\n    }\r\n};\r\n\r\nexport const getFirstWeekDay = (monthNum, year) => {\r\n    const firstDay = new Date(year, monthNum, 1);\r\n    // return first day of the month (numbers 0-6)\r\n    return firstDay.getDay();\r\n};\r\n\r\nexport const getDayName = (dayNum) => {\r\n    console.log(\"----- dayNum ----- (client/src/utils/dateFormat:71) -----\")\r\n    switch (dayNum) {\r\n        case 0:\r\n            return \"Sunday\";\r\n        case 1:\r\n            return \"Monday\";\r\n        case 2:\r\n            return \"Tuesday\";\r\n        case 3:\r\n            return \"Wednesday\";\r\n        case 4:\r\n            return \"Thursday\";\r\n        case 5:\r\n            return \"Friday\";\r\n        case 6:\r\n            return \"Saturday\";\r\n        default:\r\n            return \"WeekDayErr\";\r\n    }\r\n};\r\n\r\nexport const getMonthName = (monthNum) => {\r\n    //const monthNum = monthNum;\r\n    switch (monthNum) {\r\n        case 0:\r\n            return \"January\";\r\n        case 1:\r\n            return \"February\";\r\n        case 2:\r\n            return \"March\";\r\n        case 3:\r\n            return \"April\";\r\n        case 4:\r\n            return \"May\";\r\n        case 5:\r\n            return \"June\";\r\n        case 6:\r\n            return \"July\";\r\n        case 7:\r\n            return \"August\";\r\n        case 8:\r\n            return \"September\";\r\n        case 9:\r\n            return \"October\";\r\n        case 10:\r\n            return \"November\";\r\n        case 11:\r\n            return \"December\";\r\n        default:\r\n            return \"MonthNameErr\";\r\n    }\r\n}\r\n\r\n\r\nexport const getMonthStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const monthStart = new Date(year, month, 1, 0, 0, 0, 0);\r\n\r\n    return monthStart;\r\n};\r\n\r\nexport const getMonthEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let month = myTime.getMonth();\r\n    let year = myTime.getFullYear();\r\n    \r\n    const numDays = getNumDays(month, year);\r\n\r\n    const monthEnd = new Date(year, month, numDays, 23, 59, 59, 999);\r\n\r\n    return monthEnd;\r\n};\r\n\r\nexport const getWeekStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const sundayDate = dateNum - weekDay;\r\n\r\n    const weekStart = new Date(year, month, sundayDate, 0, 0, 0, 0);\r\n\r\n    return weekStart;\r\n};\r\n\r\nexport const getWeekEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const weekDay = myTime.getDay();\r\n    const satOffset = 6 - weekDay;\r\n    const saturdayDate = dateNum + satOffset;\r\n\r\n    const weekEnd = new Date(year, month, saturdayDate, 23, 59, 59, 999);\r\n\r\n    return weekEnd;\r\n};\r\n\r\nexport const getDayStart = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayStart = new Date(year, month, dateNum, 0, 0, 0, 0);\r\n\r\n    return dayStart;\r\n};\r\n\r\nexport const getDayEnd = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n    const dateNum = myTime.getDate();\r\n\r\n    const dayEnd = new Date(year, month, dateNum, 23, 59, 59, 999);\r\n\r\n    return dayEnd;\r\n};\r\n\r\nexport const getNextMonth = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 11) {\r\n        myTime.setFullYear(year++);\r\n        myTime.setMonth(0);\r\n    } else {\r\n        myTime.setMonth(month++);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\nexport const getPrevMonth = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    let year = myTime.getFullYear();\r\n    let month = myTime.getMonth();\r\n\r\n    if (month === 0) {\r\n        myTime.setFullYear(year--);\r\n        myTime.setMonth(11);\r\n    } else {\r\n        myTime.setMonth(month--);\r\n    }\r\n\r\n    return myTime;\r\n};\r\n\r\nexport const getNextWeek = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const weekMS = daysToMS(7);\r\n\r\n    const nextWeekMS = myTimeMS + weekMS;\r\n    const nextWeek = new Date(nextWeekMS);\r\n\r\n    return nextWeek;\r\n};\r\n\r\nexport const getPrevWeek = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const weekMS = daysToMS(7);\r\n\r\n    const prevWeekMS = myTimeMS - weekMS;\r\n    const prevWeek = new Date(prevWeekMS);\r\n\r\n    return prevWeek;\r\n};\r\n\r\nexport const getNextDay = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const dayMS = daysToMS(1);\r\n\r\n    const nextDayMS = myTimeMS + dayMS;\r\n    const nextDay = new Date(nextDayMS);\r\n\r\n    return nextDay;\r\n};\r\n\r\nexport const getPrevDay = (timeStamp) => {\r\n    const myTime = new Date(timeStamp);\r\n\r\n    const myTimeMS = myTime.getTime();\r\n    const dayMS = daysToMS(1);\r\n\r\n    const prevDayMS = myTimeMS + dayMS;\r\n    const prevDay = new Date(prevDayMS);\r\n\r\n    return prevDay;\r\n};","import { gql } from '@apollo/client';\r\n\r\nexport const QUERY_ME = gql`\r\n    {\r\n        me {\r\n            _id\r\n            username\r\n            email\r\n            events {\r\n                eventId\r\n                eventUser\r\n                eventDate\r\n                eventTime\r\n                eventTitle\r\n                eventDescription\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n// export const QUERY_EVENTS = gql`\r\n//     query getMyEvents($timeStart: Date!, $timeEnd: Date!) {\r\n//         events {\r\n//             _id\r\n//             eventUser\r\n//             eventDate\r\n//             eventTime\r\n//             eventTitle\r\n//             eventDescription\r\n//         }\r\n//     }\r\n// `;","import React from 'react';\r\nimport { Navigate, useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\nimport { Container, Row, Col, Button } from 'react-bootstrap';\r\n\r\nimport MonthFormat from '../components/MonthFormat';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName, getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFormat';\r\n\r\n// import { QUERY_EVENTS, QUERY_ME } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\n\r\nconst Month = () => {\r\n    const { myTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    // const startTime = getMonthStart(myTime);\r\n    // const endTime = getMonthEnd(myTime);\r\n    let userData = {};\r\n\r\n    if (data) {\r\n        userData = data.me;\r\n    }\r\n\r\n    console.log(\"----- user data: -----\");\r\n    console.log(userData);\r\n    const myEvents = userData.events;\r\n    console.log(\"----- my events: -----\");\r\n    console.log(myEvents);\r\n\r\n    const myDate = new Date(myTime);\r\n    let month = myDate.getMonth();\r\n    let year = myDate.getFullYear();\r\n\r\n    const monthEvents = [];\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        if (myEvents[i].eventDate.getMonth() === month && myEvents[i].eventDate.getFullYear() === year) {\r\n            monthEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n     \r\n\r\n    const handleNextMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n        \r\n        const nextMonth = myDate.setMonth(month++);\r\n        const timeParam = nextMonth.getTime();\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n    \r\n\r\n    const handlePrevMonthBtn = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const prevMonth = myDate.setMonth(month--);\r\n        const timeParam = prevMonth.getTime();\r\n\r\n        return <Navigate to={`/month/${timeParam}`} />;\r\n    };\r\n\r\n    if (loading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container>\r\n                <Row>\r\n                    <Button onClick={handlePrevMonthBtn}>Prev Month</Button>\r\n                    <h3>{getMonthName(myDate.getMonth())}</h3>\r\n                    <Button onClick={handleNextMonthBtn}>Next Month</Button>\r\n                </Row>\r\n                <Row>\r\n                    <Month \r\n                        monthNum={myDate.getMonth()}\r\n                        year={myDate.getFullYear()}\r\n                        firstWeekDay={getFirstWeekDay(myTime)}\r\n                        numDays={getNumDays(myDate.getMonth())}\r\n                        events={myEvents}\r\n                    />\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default Month;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { Container, Col, Row, Form, Button, Card, CardColumns, Modal } from 'react-bootstrap';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useQuery, useMutation } from '@apollo/client';\r\n// import { QUERY_ME, QUERY_EVENTS } from '../utils/queries';\r\nimport { QUERY_ME } from '../utils/queries';\r\nimport { ADD_EVENT, REMOVE_EVENT } from '../utils/mutations';\r\nimport { getSavedEventIds, saveEventIds, removeEventId } from '../utils/localStorage';\r\nimport { getNumDays, getFirstWeekDay, getDayName, getMonthName, getMonthStart, getMonthEnd, getWeekStart, getWeekEnd, getDayStart, getDayEnd, getNextMonth, getPrevMonth, getNextWeek, getPrevWeek, getNextDay, getPrevDay } from '../utils/dateFormat';\r\nimport { DayBox } from '../components/DayBox';\r\n\r\n\r\nimport Auth from '../utils/auth';\r\nimport events from 'inquirer/lib/utils/events';\r\n\r\nconst MyDay = () => {\r\n    const [ showModal, setShowModal ] = useState(false);\r\n    const { myTime } = useParams();\r\n    const { loading, data } = useQuery(QUERY_ME);\r\n\r\n    const [addEvent, { error }] = useMutation(ADD_EVENT);\r\n\r\n    //const [removeEvent, { error }] = useMutation(REMOVE_EVENT);\r\n\r\n    let userData = {};\r\n    let myEvents = {};\r\n    let todayEvents = {};\r\n\r\n    const myDate = new Date(myTime);\r\n    const month = myDate.getMonth();\r\n    const year = myDate.getFullYear();\r\n    const day = myDate.getDate();\r\n    const dayName = getDayName(myDate.getDay());\r\n    const monthName = getMonthName(month);\r\n\r\n    if ( data ) {\r\n        userData = data.me;\r\n        myEvents = userData.events;\r\n    } else {\r\n        console.error('user data not found');\r\n    }\r\n\r\n    for (let i = 0; i < myEvents.length; i++) {\r\n        const currEventDate = new Date(myEvents[i].eventDate);\r\n\r\n        if (currEventDate.getDate() === day && currEventDate.getMonth() === month && currEventDate.getFullYear() === year) {\r\n            todayEvents.push(myEvents[i]);\r\n        }\r\n    }\r\n\r\n    // const handleDeleteEvent = async (eventId) => {\r\n    //     const token = Auth.loggedIn() ? Auth.getToken() : null;\r\n\r\n    //     if (!token) {\r\n    //         return false;\r\n    //     }\r\n\r\n    //     try {\r\n    //         const { data } = await removeEvent({\r\n    //             variables: { eventId },\r\n    //         });\r\n\r\n    //         removeEventId(eventId);\r\n    //     } catch (err) {\r\n    //         console.error(err);\r\n    //     }\r\n    // };\r\n\r\n    if (loading) {\r\n        return <h2>LOADING...</h2>;\r\n    }\r\n\r\n    const currDate = new Date();\r\n\r\n    return (\r\n        <div>\r\n            <div fluid className=\"jumbotron text-light bg-dark\">\r\n                <Container>\r\n                    <h1>{userData.firstName}'s Day</h1>\r\n                    <h2>{dayName}, {monthName} {day},{year}</h2>\r\n                </Container>\r\n            </div>\r\n            <Container>\r\n                <h2>\r\n\r\n                </h2>\r\n            </Container>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyDay;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { ADD_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst SignupForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ firstName: '', lastName: '', username: '', email: '', password: '' });\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [addUser, { error }] = useMutation(ADD_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await addUser({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.addUser.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            firstName: '',\r\n            lastName: '',\r\n            username: '',\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onCLose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"firstName\">First Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"First Name\"\r\n                        name=\"firstName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.firstName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        First name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"lastName\">Last Name</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Last Name\"\r\n                        name=\"lastName\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.lastName}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Last name is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"username\">Username</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.username}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Username is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button\r\n                    disabled={!(userFormData.firstName && userFormData.lastName && userFormData.username && userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SignupForm;","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Alert } from 'react-bootstrap';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { LOGIN_USER } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst LoginForm = () => {\r\n    const [userFormData, setUserFormData] = useState({ email: '', password: ''});\r\n    const [validated] = useState(false);\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    \r\n    const [login, { error }] = useMutation(LOGIN_USER);\r\n\r\n    useEffect(() => {\r\n        if (error) {\r\n            setShowAlert(true);\r\n        } else {\r\n            setShowAlert(false);\r\n        }\r\n    }, [error]);\r\n\r\n    const handleInputChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setUserFormData({ ...userFormData, [name]: value });\r\n    };\r\n\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n\r\n        const form = event.currentTarget;\r\n        if (form.checkValidity() === false) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...userFormData },\r\n            });\r\n\r\n            console.log(data);\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n\r\n        setUserFormData({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Form noValidate validated={validated} onSubmit={handleFormSubmit}>\r\n                <Alert\r\n                    dismissible\r\n                    onClose={() => setShowAlert(false)}\r\n                    show={showAlert}\r\n                    variant=\"danger\"\r\n                >\r\n                    Something went wrong with your login credentials\r\n                </Alert>\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"email\">Email</Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        placeholder=\"Your email\"\r\n                        name=\"email\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.email}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Email is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n\r\n                <Form.Group>\r\n                    <Form.Label htmlFor=\"password\">Password</Form.Label>\r\n                    <Form.Control\r\n                        type=\"password\"\r\n                        placeholder=\"Your password\"\r\n                        name=\"password\"\r\n                        onChange={handleInputChange}\r\n                        value={userFormData.password}\r\n                        required\r\n                    />\r\n                    <Form.Control.Feedback type=\"invalid\">\r\n                        Password is required!\r\n                    </Form.Control.Feedback>\r\n                </Form.Group>\r\n                <Button \r\n                    disabled={!(userFormData.email && userFormData.password)}\r\n                    type=\"submit\"\r\n                    variant=\"success\"\r\n                >\r\n                    Login\r\n                </Button>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default LoginForm;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\r\nimport SignUpForm from './SignupForm';\r\nimport LoginForm from './LoginForm';\r\n//import AddEventForm from './AddEventForm';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst currDate = new Date();\r\nconst currTime = currDate.getTime();\r\n\r\nconst AppNavbar = () => {\r\n  // set modal display state\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg='dark' variant='dark' expand='lg'>\r\n        <Container fluid>\r\n          <Navbar.Brand as={Link} to='/'>\r\n            MyTime\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls='navbar' />\r\n          <Navbar.Collapse id='navbar'>\r\n            <Nav className='ml-auto'>\r\n              {/* <Nav.Link as={Link} to='/'>\r\n                Search For Books\r\n              </Nav.Link> */}\r\n              {/* if user is logged in show saved books and logout */}\r\n              {Auth.loggedIn() ? (\r\n                <>\r\n                  <Nav.Link as={Link} to='/myDay/{currTime}'>MyDay</Nav.Link>\r\n                  <Nav.Link as={Link} to='/month/{currTime}'>MyMonth</Nav.Link>\r\n                  <Nav.Link as={Link} to='/week/{currTime}'>MyWeek</Nav.Link>\r\n                  {/* <Nav.Link as={Link} to='/day'>MyDay</Nav.Link> */}\r\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\r\n                </>\r\n              ) : (\r\n                <Nav.Link onClick={() => setShowModal(true)}>Login/Sign Up</Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n      {/* set modal data up */}\r\n      <Modal\r\n        size='lg'\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        aria-labelledby='signup-modal'>\r\n        {/* tab container to do either signup or login component */}\r\n        <Tab.Container defaultActiveKey='login'>\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id='signup-modal'>\r\n              <Nav variant='pills'>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\r\n                </Nav.Item>\r\n                <Nav.Item>\r\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\r\n                </Nav.Item>\r\n              </Nav>\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            <Tab.Content>\r\n              <Tab.Pane eventKey='login'>\r\n                <LoginForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n              <Tab.Pane eventKey='signup'>\r\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\r\n              </Tab.Pane>\r\n            </Tab.Content>\r\n          </Modal.Body>\r\n        </Tab.Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppNavbar;\r\n","import React from 'react';\r\nimport { useLocation, useNavigate } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  return (\r\n    <footer className=\"w-100 mt-auto bg-secondary p-4\">\r\n      <div className=\"container text-center mb-5\">\r\n        {location.pathname !== '/' && (\r\n          <button\r\n            className=\"btn btn-dark mb-3\"\r\n            onClick={() => navigate(-1)}\r\n          >\r\n            &larr; Go Back\r\n          </button>\r\n        )}\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport { ApolloClient, ApolloProvider, InMemoryCache, createHttpLink } from '@apollo/client';\r\nimport Day from './pages/Day';\r\nimport Month from './pages/Month';\r\nimport MyDay from './pages/MyDay';\r\nimport Week from './pages/Week';\r\nimport Navbar from './components/NavBar';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport Header from './components/Header';\r\nimport Footer from './components/Footer';\r\n\r\nconst httpLink = createHttpLink({\r\n    uri: '/graphql',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n    const token = localStorage.getItem('id_token');\r\n\r\n    return {\r\n        headers: {\r\n            ...headers,\r\n            authorization: token ? `Bearer ${token}` : '',\r\n        },\r\n    };\r\n});\r\n\r\nconst client = new ApolloClient({\r\n    link: authLink.concat(httpLink),\r\n    cache: new InMemoryCache(),\r\n});\r\n// space used to contain \"<Header />\"\r\nfunction App() {\r\n    return (\r\n        <ApolloProvider client={client}>\r\n            <Router>\r\n                <div className=\"flex-column justify-flex-start min-100-vh\">\r\n                    \r\n                    <div className=\"container\">\r\n                        <Navbar />\r\n                        <Routes>\r\n                            <Route\r\n                                path='/'\r\n                                element={<MyDay />}\r\n                            />\r\n                            <Route\r\n                                path='/month/:currDate'\r\n                                element={<Month />}\r\n                            />\r\n                            <Route  \r\n                                path='/week/:currDate'\r\n                                element={<Week />}\r\n                            />\r\n                            <Route\r\n                                path='/myDay'\r\n                                element={<MyDay />}\r\n                            />\r\n                        </Routes>\r\n                    </div>\r\n                    <Footer />\r\n                </div>\r\n            </Router>\r\n        </ApolloProvider>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}